# compiler: R8
# compiler_version: 8.2.24
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.2"}
# pg_map_id: dab44ab
# pg_map_hash: SHA-256 dab44abb4e6192ac32a1fd60b6ae69f6ce8f21619d1354c3e07121b72ee32c90
com.truid.android.Agent -> a.a:
# {"id":"sourceFile","fileName":"UserData.kt"}
    android.graphics.Bitmap faceImage -> a
    android.graphics.Bitmap poseFaceImage -> b
    java.lang.String poseChallenge -> c
    boolean faceLivenessStatus -> d
    boolean id_to_selfie_matching -> e
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(android.graphics.Bitmap,android.graphics.Bitmap,java.lang.String,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    3:3:void <init>(android.graphics.Bitmap,android.graphics.Bitmap,java.lang.String,boolean,boolean):0:0 -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.truid.android.AuthenticateWithTruID -> com.truid.android.AuthenticateWithTruID:
# {"id":"sourceFile","fileName":"AuthenticateWithTruID.kt"}
    1:1:android.content.Intent createIntent(android.content.Context,com.truid.android.AuthenticateWithTruID$Input):0:0 -> createIntent
    2:2:android.content.Intent createIntent(android.content.Context,java.lang.Object):0:0 -> createIntent
    1:1:com.truid.android.AuthenticateWithTruID$Output parseResult(int,android.content.Intent):0:0 -> parseResult
    2:2:java.lang.Object parseResult(int,android.content.Intent):0:0 -> parseResult
com.truid.android.AuthenticateWithTruID$Input -> com.truid.android.AuthenticateWithTruID$Input:
# {"id":"sourceFile","fileName":"AuthenticateWithTruID.kt"}
    1:1:void <init>(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.truid.android.vision.FingerprintOptions,boolean,boolean):0:0 -> <init>
    2:2:void <init>(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.truid.android.vision.FingerprintOptions,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
com.truid.android.AuthenticateWithTruID$Output -> com.truid.android.AuthenticateWithTruID$Output:
# {"id":"sourceFile","fileName":"AuthenticateWithTruID.kt"}
com.truid.android.ComposableSingletons$TruIDLaunchActivityKt -> a.b:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    kotlin.jvm.functions.Function3 lambda-1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function3 lambda-2 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-3 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-4 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function3 lambda-5 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function3 lambda-6 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-7 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-8 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    void <clinit>() -> <clinit>
com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-1$1 -> a.b$a:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/b$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-1$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-2$1 -> a.b$b:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/b$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-2$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-3$1 -> a.b$c:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-3$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/b$c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-3$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-4$1 -> a.b$d:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-4$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/b$d;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-4$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-5$1 -> a.b$e:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-5$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/b$e;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-5$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-6$1 -> a.b$f:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-6$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/b$f;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-6$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-7$1 -> a.b$g:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-7$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/b$g;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-7$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-8$1 -> a.b$h:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-8$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/b$h;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ComposableSingletons$TruIDLaunchActivityKt$lambda-8$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.Face -> a.c:
# {"id":"sourceFile","fileName":"UserData.kt"}
    android.graphics.Bitmap faceImage -> a
    android.graphics.Bitmap poseFaceImage -> b
    java.lang.String poseChallenge -> c
    boolean faceLivenessStatus -> d
    boolean id_to_selfie_matching -> e
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(android.graphics.Bitmap,android.graphics.Bitmap,java.lang.String,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    3:3:void <init>(android.graphics.Bitmap,android.graphics.Bitmap,java.lang.String,boolean,boolean):0:0 -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.truid.android.Fingers -> a.d:
# {"id":"sourceFile","fileName":"UserData.kt"}
    android.graphics.Bitmap fingersCaptureFrame -> a
    android.graphics.Bitmap indexFingerImage -> b
    android.graphics.Bitmap middleFingerImage -> c
    android.graphics.Bitmap ringFingerImage -> d
    android.graphics.Bitmap pinkyFingerImage -> e
    android.graphics.Bitmap thumbImage -> f
    java.lang.Integer indexFingerScore -> g
    java.lang.Integer middleFingerScore -> h
    java.lang.Integer ringFingerScore -> i
    java.lang.Integer pinkyFingerScore -> j
    java.lang.Integer thumbScore -> k
    int retries -> l
    boolean status -> m
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    3:3:void <init>(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,int,boolean):0:0 -> <init>
    1:1:android.graphics.Bitmap getIndexFingerImage():0:0 -> a
    2:2:void setFingersCaptureFrame(android.graphics.Bitmap):0:0 -> a
    3:3:void setIndexFingerScore(java.lang.Integer):0:0 -> a
    1:1:android.graphics.Bitmap getMiddleFingerImage():0:0 -> b
    2:2:void setIndexFingerImage(android.graphics.Bitmap):0:0 -> b
    3:3:void setMiddleFingerScore(java.lang.Integer):0:0 -> b
    1:1:android.graphics.Bitmap getPinkyFingerImage():0:0 -> c
    2:2:void setMiddleFingerImage(android.graphics.Bitmap):0:0 -> c
    3:3:void setPinkyFingerScore(java.lang.Integer):0:0 -> c
    1:1:android.graphics.Bitmap getRingFingerImage():0:0 -> d
    2:2:void setPinkyFingerImage(android.graphics.Bitmap):0:0 -> d
    3:3:void setRingFingerScore(java.lang.Integer):0:0 -> d
    1:1:android.graphics.Bitmap getThumbImage():0:0 -> e
    2:2:void setRingFingerImage(android.graphics.Bitmap):0:0 -> e
    3:3:void setThumbScore(java.lang.Integer):0:0 -> e
    boolean equals(java.lang.Object) -> equals
    1:1:void setRetries(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    2:2:void setThumbImage(android.graphics.Bitmap):0:0 -> f
    void setStatus(boolean) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.truid.android.IdSelfie -> a.e:
# {"id":"sourceFile","fileName":"UserData.kt"}
    boolean faceLivenessDone -> a
    boolean cardDetecctionDone -> b
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    3:3:void <init>(boolean,boolean):0:0 -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.truid.android.TruID -> com.truid.android.TruID:
# {"id":"sourceFile","fileName":"TruID.kt"}
    com.truid.android.UserData userData -> userData
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/l;"}
    com.truid.android.vision.YuvToRgbConverter yuv2RgbConverter -> yuv2RgbConverter
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/e1;"}
    1:1:com.truid.android.Agent com.truid.android.UserData.getAgent():0:0 -> getAgentPoseFaceChallenge$sdk_release
    1:1:java.lang.String getAgentPoseFaceChallenge$sdk_release():0 -> getAgentPoseFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.String com.truid.android.Agent.getPoseChallenge():0:0 -> getAgentPoseFaceChallenge$sdk_release
    2:2:java.lang.String getAgentPoseFaceChallenge$sdk_release():0 -> getAgentPoseFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:com.truid.android.Fingers com.truid.android.UserData.getFingers():0:0 -> getFingersData$sdk_release
    1:1:com.truid.android.Fingers getFingersData$sdk_release():0 -> getFingersData$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La/d;"}
    1:1:com.truid.android.Face com.truid.android.UserData.getFace():0:0 -> getPoseFaceChallenge$sdk_release
    1:1:java.lang.String getPoseFaceChallenge$sdk_release():0 -> getPoseFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.String com.truid.android.Face.getPoseChallenge():0:0 -> getPoseFaceChallenge$sdk_release
    2:2:java.lang.String getPoseFaceChallenge$sdk_release():0 -> getPoseFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    com.truid.android.UserData getUserData() -> getUserData
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La/l;"}
    com.truid.android.vision.YuvToRgbConverter getYuv2RgbConverter() -> getYuv2RgbConverter
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/e1;"}
    1:1:com.truid.android.Fingers com.truid.android.UserData.getFingers():0:0 -> lowQualityFingerprintsCaptured$sdk_release
    1:1:void lowQualityFingerprintsCaptured$sdk_release():0 -> lowQualityFingerprintsCaptured$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:int com.truid.android.Fingers.getRetries():0:0 -> lowQualityFingerprintsCaptured$sdk_release
    2:2:void lowQualityFingerprintsCaptured$sdk_release():0 -> lowQualityFingerprintsCaptured$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:void com.truid.android.Fingers.setRetries(int):0:0 -> lowQualityFingerprintsCaptured$sdk_release
    3:3:void lowQualityFingerprintsCaptured$sdk_release():0 -> lowQualityFingerprintsCaptured$sdk_release
    1:1:void com.truid.android.api.Session.reset$sdk_release$default(com.truid.android.api.Session,boolean,int,java.lang.Object):0:0 -> reset
    1:1:void reset():0 -> reset
    2:2:void reset():0:0 -> reset
    3:3:void com.truid.android.api.Report.reset$sdk_release():0:0 -> reset
    3:3:void reset():0 -> reset
    1:1:com.truid.android.Agent com.truid.android.UserData.getAgent():0:0 -> resetAgentFaceChallenge$sdk_release
    1:1:void resetAgentFaceChallenge$sdk_release():0 -> resetAgentFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void com.truid.android.Agent.setFaceImage(android.graphics.Bitmap):0:0 -> resetAgentFaceChallenge$sdk_release
    2:2:void resetAgentFaceChallenge$sdk_release():0 -> resetAgentFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:void com.truid.android.Agent.setFaceLivenessStatus(boolean):0:0 -> resetAgentFaceChallenge$sdk_release
    3:3:void resetAgentFaceChallenge$sdk_release():0 -> resetAgentFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void com.truid.android.Agent.setPoseChallenge(java.lang.String):0:0 -> resetAgentFaceChallenge$sdk_release
    4:4:void resetAgentFaceChallenge$sdk_release():0 -> resetAgentFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:void com.truid.android.Agent.setPoseFaceImage(android.graphics.Bitmap):0:0 -> resetAgentFaceChallenge$sdk_release
    5:5:void resetAgentFaceChallenge$sdk_release():0 -> resetAgentFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:com.truid.android.Face com.truid.android.UserData.getFace():0:0 -> resetFaceChallenge$sdk_release
    1:1:void resetFaceChallenge$sdk_release():0 -> resetFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void com.truid.android.Face.setFaceImage(android.graphics.Bitmap):0:0 -> resetFaceChallenge$sdk_release
    2:2:void resetFaceChallenge$sdk_release():0 -> resetFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:void com.truid.android.Face.setFaceLivenessStatus(boolean):0:0 -> resetFaceChallenge$sdk_release
    3:3:void resetFaceChallenge$sdk_release():0 -> resetFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void com.truid.android.Face.setPoseChallenge(java.lang.String):0:0 -> resetFaceChallenge$sdk_release
    4:4:void resetFaceChallenge$sdk_release():0 -> resetFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:void com.truid.android.Face.setPoseFaceImage(android.graphics.Bitmap):0:0 -> resetFaceChallenge$sdk_release
    5:5:void resetFaceChallenge$sdk_release():0 -> resetFaceChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void com.truid.android.api.utils.APIEndpoints$Companion.setBaseUrl(java.lang.String):0:0 -> setAPILink
    1:1:void setAPILink(java.lang.String):0 -> setAPILink
    2:2:void com.truid.android.api.utils.APIEndpoints.access$setBaseUrl$cp(java.lang.String):0:0 -> setAPILink
    2:2:void com.truid.android.api.utils.APIEndpoints$Companion.setBaseUrl(java.lang.String):0 -> setAPILink
    2:2:void setAPILink(java.lang.String):0 -> setAPILink
    1:1:void com.truid.android.ui.theme.ColorKt.setFailedColor-8_81llA(long):0:0 -> setFailedColor
    1:1:void setFailedColor(int,int,int):0 -> setFailedColor
    1:1:void com.truid.android.ui.theme.ColorKt.setPassedColor-8_81llA(long):0:0 -> setPassedColor
    1:1:void setPassedColor(int,int,int):0 -> setPassedColor
    1:1:void com.truid.android.ui.theme.ColorKt.setSecondaryThemeColor-8_81llA(long):0:0 -> setSecondaryThemeColor
    1:1:void setSecondaryThemeColor(int,int,int):0 -> setSecondaryThemeColor
    1:1:void com.truid.android.ui.theme.ColorKt.setTruIdColor-8_81llA(long):0:0 -> setThemeColor
    1:1:void setThemeColor(int,int,int):0 -> setThemeColor
    void setUserData(com.truid.android.UserData) -> setUserData
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La/l;)V"}
    void setYuv2RgbConverter(com.truid.android.vision.YuvToRgbConverter) -> setYuv2RgbConverter
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/e1;)V"}
    1:1:com.truid.android.Agent com.truid.android.UserData.getAgent():0:0 -> uploadAgentFaceFrameAndGetChallenge$sdk_release
    1:1:void uploadAgentFaceFrameAndGetChallenge$sdk_release(android.media.Image):0 -> uploadAgentFaceFrameAndGetChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void uploadAgentFaceFrameAndGetChallenge$sdk_release(android.media.Image):0:0 -> uploadAgentFaceFrameAndGetChallenge$sdk_release
    3:3:void com.truid.android.Agent.setFaceImage(android.graphics.Bitmap):0:0 -> uploadAgentFaceFrameAndGetChallenge$sdk_release
    3:3:void uploadAgentFaceFrameAndGetChallenge$sdk_release(android.media.Image):0 -> uploadAgentFaceFrameAndGetChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void uploadAgentFaceFrameAndGetChallenge$sdk_release(android.media.Image):0:0 -> uploadAgentFaceFrameAndGetChallenge$sdk_release
    5:5:com.truid.android.Agent com.truid.android.UserData.getAgent():0:0 -> uploadAgentFaceFrameAndGetChallenge$sdk_release
    5:5:void uploadAgentFaceFrameAndGetChallenge$sdk_release(android.media.Image):0 -> uploadAgentFaceFrameAndGetChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:android.graphics.Bitmap com.truid.android.Agent.getFaceImage():0:0 -> uploadAgentFaceFrameAndGetChallenge$sdk_release
    6:6:void uploadAgentFaceFrameAndGetChallenge$sdk_release(android.media.Image):0 -> uploadAgentFaceFrameAndGetChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void uploadAgentFaceFrameAndGetChallenge$sdk_release(android.media.Image):0:0 -> uploadAgentFaceFrameAndGetChallenge$sdk_release
    1:1:com.truid.android.Agent com.truid.android.UserData.getAgent():0:0 -> uploadAgentPoseFaceFrame$sdk_release
    1:1:void uploadAgentPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function2):0 -> uploadAgentPoseFaceFrame$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void uploadAgentPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function2):0:0 -> uploadAgentPoseFaceFrame$sdk_release
    3:3:void com.truid.android.Agent.setPoseFaceImage(android.graphics.Bitmap):0:0 -> uploadAgentPoseFaceFrame$sdk_release
    3:3:void uploadAgentPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function2):0 -> uploadAgentPoseFaceFrame$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void uploadAgentPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function2):0:0 -> uploadAgentPoseFaceFrame$sdk_release
    5:5:com.truid.android.Agent com.truid.android.UserData.getAgent():0:0 -> uploadAgentPoseFaceFrame$sdk_release
    5:5:void uploadAgentPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function2):0 -> uploadAgentPoseFaceFrame$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:android.graphics.Bitmap com.truid.android.Agent.getPoseFaceImage():0:0 -> uploadAgentPoseFaceFrame$sdk_release
    6:6:void uploadAgentPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function2):0 -> uploadAgentPoseFaceFrame$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void uploadAgentPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function2):0:0 -> uploadAgentPoseFaceFrame$sdk_release
    1:1:com.truid.android.Face com.truid.android.UserData.getFace():0:0 -> uploadFaceFrameAndGetChallenge$sdk_release
    1:1:void uploadFaceFrameAndGetChallenge$sdk_release(android.media.Image):0 -> uploadFaceFrameAndGetChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void uploadFaceFrameAndGetChallenge$sdk_release(android.media.Image):0:0 -> uploadFaceFrameAndGetChallenge$sdk_release
    3:3:void com.truid.android.Face.setFaceImage(android.graphics.Bitmap):0:0 -> uploadFaceFrameAndGetChallenge$sdk_release
    3:3:void uploadFaceFrameAndGetChallenge$sdk_release(android.media.Image):0 -> uploadFaceFrameAndGetChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void uploadFaceFrameAndGetChallenge$sdk_release(android.media.Image):0:0 -> uploadFaceFrameAndGetChallenge$sdk_release
    5:5:com.truid.android.Face com.truid.android.UserData.getFace():0:0 -> uploadFaceFrameAndGetChallenge$sdk_release
    5:5:void uploadFaceFrameAndGetChallenge$sdk_release(android.media.Image):0 -> uploadFaceFrameAndGetChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:android.graphics.Bitmap com.truid.android.Face.getFaceImage():0:0 -> uploadFaceFrameAndGetChallenge$sdk_release
    6:6:void uploadFaceFrameAndGetChallenge$sdk_release(android.media.Image):0 -> uploadFaceFrameAndGetChallenge$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void uploadFaceFrameAndGetChallenge$sdk_release(android.media.Image):0:0 -> uploadFaceFrameAndGetChallenge$sdk_release
    1:1:com.truid.android.Face com.truid.android.UserData.getFace():0:0 -> uploadPoseFaceFrame$sdk_release
    1:1:void uploadPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function0):0 -> uploadPoseFaceFrame$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:void uploadPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function0):0:0 -> uploadPoseFaceFrame$sdk_release
    3:3:void com.truid.android.Face.setPoseFaceImage(android.graphics.Bitmap):0:0 -> uploadPoseFaceFrame$sdk_release
    3:3:void uploadPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function0):0 -> uploadPoseFaceFrame$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void uploadPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function0):0:0 -> uploadPoseFaceFrame$sdk_release
    5:5:com.truid.android.Face com.truid.android.UserData.getFace():0:0 -> uploadPoseFaceFrame$sdk_release
    5:5:void uploadPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function0):0 -> uploadPoseFaceFrame$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:android.graphics.Bitmap com.truid.android.Face.getPoseFaceImage():0:0 -> uploadPoseFaceFrame$sdk_release
    6:6:void uploadPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function0):0 -> uploadPoseFaceFrame$sdk_release
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void uploadPoseFaceFrame$sdk_release(android.media.Image,kotlin.jvm.functions.Function0):0:0 -> uploadPoseFaceFrame$sdk_release
com.truid.android.TruID$uploadAgentFaceFrameAndGetChallenge$1 -> com.truid.android.TruID$a:
# {"id":"sourceFile","fileName":"TruID.kt"}
    com.truid.android.TruID$uploadAgentFaceFrameAndGetChallenge$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/TruID$a;"}
    1:1:void invoke(java.lang.String,java.lang.Boolean):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:com.truid.android.Agent com.truid.android.UserData.getAgent():0:0 -> invoke
    2:2:void invoke(java.lang.String,java.lang.Boolean):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.Agent.setPoseChallenge(java.lang.String):0:0 -> invoke
    3:3:void invoke(java.lang.String,java.lang.Boolean):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruID$uploadAgentFaceFrameAndGetChallenge$2 -> com.truid.android.TruID$b:
# {"id":"sourceFile","fileName":"TruID.kt"}
    com.truid.android.TruID$uploadAgentFaceFrameAndGetChallenge$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/TruID$b;"}
    1:1:void invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
com.truid.android.TruID$uploadAgentPoseFaceFrame$1 -> com.truid.android.TruID$c:
# {"id":"sourceFile","fileName":"TruID.kt"}
    com.truid.android.TruID$uploadAgentPoseFaceFrame$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/TruID$c;"}
com.truid.android.TruID$uploadAgentPoseFaceFrame$2 -> com.truid.android.TruID$d:
# {"id":"sourceFile","fileName":"TruID.kt"}
    kotlin.jvm.functions.Function2 $onSuccess -> a
    1:1:void invoke(boolean,boolean):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruID$uploadAgentPoseFaceFrame$3 -> com.truid.android.TruID$e:
# {"id":"sourceFile","fileName":"TruID.kt"}
    com.truid.android.TruID$uploadAgentPoseFaceFrame$3 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/TruID$e;"}
    1:1:void invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
com.truid.android.TruID$uploadFaceFrameAndGetChallenge$1 -> com.truid.android.TruID$f:
# {"id":"sourceFile","fileName":"TruID.kt"}
    com.truid.android.TruID$uploadFaceFrameAndGetChallenge$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/TruID$f;"}
    1:1:void invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:com.truid.android.Face com.truid.android.UserData.getFace():0:0 -> invoke
    2:2:void invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.Face.setPoseChallenge(java.lang.String):0:0 -> invoke
    3:3:void invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.TruID$uploadFaceFrameAndGetChallenge$2 -> com.truid.android.TruID$g:
# {"id":"sourceFile","fileName":"TruID.kt"}
    com.truid.android.TruID$uploadFaceFrameAndGetChallenge$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/TruID$g;"}
    1:1:void invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
com.truid.android.TruID$uploadPoseFaceFrame$1 -> com.truid.android.TruID$h:
# {"id":"sourceFile","fileName":"TruID.kt"}
    com.truid.android.TruID$uploadPoseFaceFrame$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/TruID$h;"}
com.truid.android.TruID$uploadPoseFaceFrame$2 -> com.truid.android.TruID$i:
# {"id":"sourceFile","fileName":"TruID.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruID$uploadPoseFaceFrame$3 -> com.truid.android.TruID$j:
# {"id":"sourceFile","fileName":"TruID.kt"}
    com.truid.android.TruID$uploadPoseFaceFrame$3 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/TruID$j;"}
    1:1:void invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
com.truid.android.TruIDLaunchActivity -> com.truid.android.TruIDLaunchActivity:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.vision.AgentFaceLiveness agentFaceDetectionHandler -> agentFaceDetectionHandler
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g;"}
    com.truid.android.vision.CardDetectionHandler cardDetectionHandler -> cardDetectionHandler
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    com.truid.android.vision.FaceLiveness faceDetectionHandler -> faceDetectionHandler
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0;"}
    com.truid.android.ui.utils.LayoutViewModel layoutViewModel -> layoutViewModel
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    com.truid.android.api.Interceptor.NetworkErrorInterceptor networkErrorInterceptor -> networkErrorInterceptor
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/a;"}
    com.truid.android.vision.PassportCaptureHandler passportCaptureHandler -> passportCaptureHandler
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0;"}
    com.truid.android.TruidViewModel truidViewModel -> truidViewModel
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/k;"}
    1:1:kotlin.jvm.functions.Function2 com.truid.android.ComposableSingletons$TruIDLaunchActivityKt.getLambda-3$sdk_release():0:0 -> TruIdApp
    1:1:void TruIdApp(androidx.compose.runtime.Composer,int):0 -> TruIdApp
    2:2:kotlin.jvm.functions.Function2 com.truid.android.ComposableSingletons$TruIDLaunchActivityKt.getLambda-4$sdk_release():0:0 -> TruIdApp
    2:2:void TruIdApp(androidx.compose.runtime.Composer,int):0 -> TruIdApp
    3:3:void TruIdApp(androidx.compose.runtime.Composer,int):0:0 -> TruIdApp
    4:4:boolean com.truid.android.TruidViewModel.getShowErrorDialog():0:0 -> TruIdApp
    4:4:void TruIdApp(androidx.compose.runtime.Composer,int):0 -> TruIdApp
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:boolean com.truid.android.TruidViewModel.getShowErrorDialog():0:0 -> TruIdApp
    5:5:void TruIdApp(androidx.compose.runtime.Composer,int):0 -> TruIdApp
    6:6:void TruIdApp(androidx.compose.runtime.Composer,int):0:0 -> TruIdApp
    7:7:kotlin.jvm.functions.Function2 com.truid.android.ComposableSingletons$TruIDLaunchActivityKt.getLambda-7$sdk_release():0:0 -> TruIdApp
    7:7:void TruIdApp(androidx.compose.runtime.Composer,int):0 -> TruIdApp
    8:8:kotlin.jvm.functions.Function2 com.truid.android.ComposableSingletons$TruIDLaunchActivityKt.getLambda-8$sdk_release():0:0 -> TruIdApp
    8:8:void TruIdApp(androidx.compose.runtime.Composer,int):0 -> TruIdApp
    9:9:void TruIdApp(androidx.compose.runtime.Composer,int):0:0 -> TruIdApp
    10:10:java.lang.String com.truid.android.api.Session.getSessionID():0:0 -> TruIdApp
    10:10:void TruIdApp(androidx.compose.runtime.Composer,int):0 -> TruIdApp
    11:11:void TruIdApp(androidx.compose.runtime.Composer,int):0:0 -> TruIdApp
    com.truid.android.vision.AgentFaceLiveness access$getAgentFaceDetectionHandler$p(com.truid.android.TruIDLaunchActivity) -> access$getAgentFaceDetectionHandler$p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;)Ly/g;"}
    com.truid.android.vision.CardDetectionHandler access$getCardDetectionHandler$p(com.truid.android.TruIDLaunchActivity) -> access$getCardDetectionHandler$p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;)Ly/h;"}
    com.truid.android.vision.FaceLiveness access$getFaceDetectionHandler$p(com.truid.android.TruIDLaunchActivity) -> access$getFaceDetectionHandler$p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;)Ly/j0;"}
    com.truid.android.ui.utils.LayoutViewModel access$getLayoutViewModel$p(com.truid.android.TruIDLaunchActivity) -> access$getLayoutViewModel$p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;)Lx/b;"}
    com.truid.android.vision.PassportCaptureHandler access$getPassportCaptureHandler$p(com.truid.android.TruIDLaunchActivity) -> access$getPassportCaptureHandler$p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;)Ly/n0;"}
    com.truid.android.TruidViewModel access$getTruidViewModel$p(com.truid.android.TruIDLaunchActivity) -> access$getTruidViewModel$p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;)La/k;"}
    void access$setAgentFaceDetectionHandler$p(com.truid.android.TruIDLaunchActivity,com.truid.android.vision.AgentFaceLiveness) -> access$setAgentFaceDetectionHandler$p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;Ly/g;)V"}
    void access$setCardDetectionHandler$p(com.truid.android.TruIDLaunchActivity,com.truid.android.vision.CardDetectionHandler) -> access$setCardDetectionHandler$p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;Ly/h;)V"}
    void access$setFaceDetectionHandler$p(com.truid.android.TruIDLaunchActivity,com.truid.android.vision.FaceLiveness) -> access$setFaceDetectionHandler$p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;Ly/j0;)V"}
    void access$setPassportCaptureHandler$p(com.truid.android.TruIDLaunchActivity,com.truid.android.vision.PassportCaptureHandler) -> access$setPassportCaptureHandler$p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;Ly/n0;)V"}
    1:1:java.lang.String com.truid.android.api.Session.getSessionID():0:0 -> endFlow
    1:1:void endFlow(java.lang.Boolean,java.lang.String):0 -> endFlow
    2:2:void endFlow(java.lang.Boolean,java.lang.String):0:0 -> endFlow
    3:3:java.lang.String com.truid.android.api.Session.getSessionID():0:0 -> endFlow
    3:3:void endFlow(java.lang.Boolean,java.lang.String):0 -> endFlow
    4:4:void endFlow(java.lang.Boolean,java.lang.String):0:0 -> endFlow
    1:1:java.util.Map com.truid.android.api.Session.getCustomConfig$sdk_release():0:0 -> handleInput
    1:1:void handleInput(com.truid.android.AuthenticateWithTruID$Input):0 -> handleInput
    2:2:void handleInput(com.truid.android.AuthenticateWithTruID$Input):0:0 -> handleInput
com.truid.android.TruIDLaunchActivity$Screen -> R8$$REMOVED$$CLASS$$0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
com.truid.android.TruIDLaunchActivity$Screen$Companion -> a.f:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    1:1:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> a
    1:1:java.lang.String getScreenRoute(java.lang.String,boolean):0 -> a
    2:2:java.lang.String getScreenRoute(java.lang.String,boolean):0:0 -> a
    3:3:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> a
    3:3:java.lang.String getScreenRoute(java.lang.String,boolean):0 -> a
    4:4:java.lang.String getScreenRoute(java.lang.String,boolean):0:0 -> a
    5:6:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> a
    5:6:java.lang.String getScreenRoute(java.lang.String,boolean):0 -> a
    7:7:java.lang.String getScreenRoute(java.lang.String,boolean):0:0 -> a
    8:8:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> a
    8:8:java.lang.String getScreenRoute(java.lang.String,boolean):0 -> a
    9:9:java.lang.String getScreenRoute(java.lang.String,boolean):0:0 -> a
    10:11:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> a
    10:11:java.lang.String getScreenRoute(java.lang.String,boolean):0 -> a
    12:12:java.lang.String getScreenRoute(java.lang.String,boolean):0:0 -> a
    13:13:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> a
    13:13:java.lang.String getScreenRoute(java.lang.String,boolean):0 -> a
    14:14:java.lang.String getScreenRoute(java.lang.String,boolean):0:0 -> a
    15:15:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> a
    15:15:java.lang.String getScreenRoute(java.lang.String,boolean):0 -> a
    16:16:java.lang.String getScreenRoute(java.lang.String,boolean):0:0 -> a
    17:17:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> a
    17:17:java.lang.String getScreenRoute(java.lang.String,boolean):0 -> a
    18:18:java.lang.String getScreenRoute(java.lang.String,boolean):0:0 -> a
    19:19:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> a
    19:19:java.lang.String getScreenRoute(java.lang.String,boolean):0 -> a
    20:20:boolean com.truid.android.api.Session.getFingerprintSelectionRequired():0:0 -> a
    20:20:java.lang.String getScreenRoute(java.lang.String,boolean):0 -> a
    21:23:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> a
    21:23:java.lang.String getScreenRoute(java.lang.String,boolean):0 -> a
com.truid.android.TruIDLaunchActivity$TruIdApp$1$1 -> com.truid.android.TruIDLaunchActivity$a:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10 -> com.truid.android.TruIDLaunchActivity$b:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> b
    com.truid.android.TruIDLaunchActivity this$0 -> c
    void <init>(androidx.navigation.NavHostController,androidx.compose.runtime.MutableState,com.truid.android.TruIDLaunchActivity) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1 -> com.truid.android.i1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    com.truid.android.TruIDLaunchActivity this$0 -> b
    androidx.navigation.NavHostController $navController -> c
    void <init>(androidx.compose.runtime.MutableState,com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    4:4:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    6:6:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    8:8:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object):0 -> invoke
    9:9:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object):0 -> invoke
    10:10:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    10:10:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object):0 -> invoke
    11:11:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object):0 -> invoke
    12:12:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    12:12:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object):0 -> invoke
    13:13:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object):0 -> invoke
    14:14:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    14:14:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object):0 -> invoke
    15:15:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object):0 -> invoke
    16:16:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    16:16:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object):0 -> invoke
    17:17:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object):0 -> invoke
    18:18:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    18:18:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object):0 -> invoke
    19:19:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object):0 -> invoke
    20:20:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    20:20:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object):0 -> invoke
    21:21:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object):0 -> invoke
    22:22:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    22:22:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object):0 -> invoke
    23:23:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object):0 -> invoke
    24:24:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    24:24:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object):0 -> invoke
    25:25:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object):0 -> invoke
    26:26:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    26:26:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object):0 -> invoke
    27:27:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object):0 -> invoke
    28:28:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    28:28:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object):0 -> invoke
    29:29:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object):0 -> invoke
    30:30:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    30:30:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object):0 -> invoke
    31:31:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object):0 -> invoke
    32:32:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    32:32:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object):0 -> invoke
    33:33:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object):0 -> invoke
    34:34:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    34:34:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object):0 -> invoke
    35:35:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    35:35:java.lang.Object invoke(java.lang.Object):0 -> invoke
    36:36:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    36:36:void invoke(androidx.navigation.NavGraphBuilder):0 -> invoke
    36:36:java.lang.Object invoke(java.lang.Object):0 -> invoke
    37:37:void invoke(androidx.navigation.NavGraphBuilder):0:0 -> invoke
    37:37:java.lang.Object invoke(java.lang.Object):0 -> invoke
    38:38:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$1 -> com.truid.android.i0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    com.truid.android.TruIDLaunchActivity this$0 -> b
    androidx.navigation.NavHostController $navController -> c
    void <init>(androidx.compose.runtime.MutableState,com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$1$1$1 -> com.truid.android.a:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$1$2 -> com.truid.android.b:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$1$3 -> com.truid.android.c:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$10 -> com.truid.android.g:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    com.truid.android.TruIDLaunchActivity this$0 -> b
    androidx.navigation.NavHostController $navController -> c
    void <init>(androidx.compose.runtime.MutableState,com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$10$1$1 -> com.truid.android.d:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$10$2 -> com.truid.android.e:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$10$3 -> com.truid.android.f:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$11 -> com.truid.android.j:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    com.truid.android.TruIDLaunchActivity this$0 -> b
    androidx.navigation.NavHostController $navController -> c
    void <init>(androidx.compose.runtime.MutableState,com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$11$1$1 -> com.truid.android.h:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$11$2 -> com.truid.android.i:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$12 -> com.truid.android.m:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    com.truid.android.TruIDLaunchActivity this$0 -> b
    androidx.navigation.NavHostController $navController -> c
    void <init>(androidx.compose.runtime.MutableState,com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$12$1$1 -> com.truid.android.k:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$12$2 -> com.truid.android.l:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$13 -> com.truid.android.p:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$13$1 -> com.truid.android.n:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$13$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/n;"}
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$13$2 -> com.truid.android.o:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$14 -> com.truid.android.t:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$14$1 -> com.truid.android.q:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$14$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/q;"}
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$14$2 -> com.truid.android.s:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$15 -> com.truid.android.w:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$15$1 -> com.truid.android.u:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$15$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/u;"}
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$15$2 -> com.truid.android.v:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$16 -> com.truid.android.z:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$16$1 -> com.truid.android.x:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$16$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/x;"}
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$16$2 -> com.truid.android.y:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$17 -> com.truid.android.e0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$17$1 -> com.truid.android.a0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$17$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/a0;"}
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$17$2 -> com.truid.android.b0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$17$3 -> com.truid.android.c0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$17$4 -> com.truid.android.d0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$18 -> com.truid.android.h0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$18$1 -> com.truid.android.f0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$18$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/f0;"}
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$18$2 -> com.truid.android.g0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$2 -> com.truid.android.k0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$2$1 -> com.truid.android.j0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$3 -> com.truid.android.n0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    androidx.navigation.NavHostController $navController -> b
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$3$1$1 -> com.truid.android.l0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$3$2 -> com.truid.android.m0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$4 -> com.truid.android.r0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    com.truid.android.TruIDLaunchActivity this$0 -> b
    androidx.navigation.NavHostController $navController -> c
    void <init>(androidx.compose.runtime.MutableState,com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$4$1$1 -> com.truid.android.o0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$4$2 -> com.truid.android.p0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$4$3 -> com.truid.android.q0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$5 -> com.truid.android.u0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    androidx.navigation.NavHostController $navController -> b
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$5$1$1 -> com.truid.android.s0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$5$2 -> com.truid.android.t0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$6 -> com.truid.android.y0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    com.truid.android.TruIDLaunchActivity this$0 -> b
    androidx.navigation.NavHostController $navController -> c
    void <init>(androidx.compose.runtime.MutableState,com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$6$1$1 -> com.truid.android.v0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$6$2 -> com.truid.android.w0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$6$3 -> com.truid.android.x0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$7 -> com.truid.android.b1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    com.truid.android.TruIDLaunchActivity this$0 -> b
    androidx.navigation.NavHostController $navController -> c
    void <init>(androidx.compose.runtime.MutableState,com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$7$1$1 -> com.truid.android.z0:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$7$2 -> com.truid.android.a1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$8 -> com.truid.android.e1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    com.truid.android.TruIDLaunchActivity this$0 -> b
    androidx.navigation.NavHostController $navController -> c
    void <init>(androidx.compose.runtime.MutableState,com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$8$1$1 -> com.truid.android.c1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$8$2 -> com.truid.android.d1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:com.truid.android.vision.NistPosCode com.truid.android.vision.FingerprintDetectionHandler.getPositionCode():0:0 -> invoke
    2:2:void invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:com.truid.android.vision.NistPosCode com.truid.android.vision.FingerprintDetectionHandler.getPositionCode():0:0 -> invoke
    4:4:void invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void invoke():0:0 -> invoke
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    6:6:void invoke():0 -> invoke
    6:6:java.lang.Object invoke():0 -> invoke
    7:7:void invoke():0:0 -> invoke
    7:7:java.lang.Object invoke():0 -> invoke
    8:8:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    8:8:void invoke():0 -> invoke
    8:8:java.lang.Object invoke():0 -> invoke
    9:9:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$9 -> com.truid.android.h1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    com.truid.android.TruIDLaunchActivity this$0 -> b
    androidx.navigation.NavHostController $navController -> c
    void <init>(androidx.compose.runtime.MutableState,com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.navigation.NavBackStackEntry,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$9$1$1 -> com.truid.android.f1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$10$1$9$2 -> com.truid.android.g1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:void invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$11 -> com.truid.android.TruIDLaunchActivity$c:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity $tmp0_rcvr -> a
    int $$changed -> b
    1:1:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$2 -> com.truid.android.TruIDLaunchActivity$d:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> b
    1:1:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:kotlin.jvm.functions.Function3 com.truid.android.ComposableSingletons$TruIDLaunchActivityKt.getLambda-1$sdk_release():0:0 -> invoke
    2:2:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$2$1 -> com.truid.android.j1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> b
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$3 -> com.truid.android.TruIDLaunchActivity$e:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:kotlin.jvm.functions.Function3 com.truid.android.ComposableSingletons$TruIDLaunchActivityKt.getLambda-2$sdk_release():0:0 -> invoke
    2:2:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$3$1$1 -> com.truid.android.k1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.MutableState $showExitDialog$delegate -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$4 -> com.truid.android.TruIDLaunchActivity$f:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.TruidViewModel.setShowErrorDialog(boolean):0:0 -> invoke
    2:2:void invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.TruidViewModel.setShowErrorDialog(boolean):0:0 -> invoke
    3:3:void invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$5 -> com.truid.android.TruIDLaunchActivity$g:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:kotlin.jvm.functions.Function3 com.truid.android.ComposableSingletons$TruIDLaunchActivityKt.getLambda-5$sdk_release():0:0 -> invoke
    2:2:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$5$1 -> com.truid.android.l1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    androidx.navigation.NavHostController $navController -> b
    void <init>(com.truid.android.TruIDLaunchActivity,androidx.navigation.NavHostController) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/navigation/NavHostController;Lcom/truid/android/TruIDLaunchActivity;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.TruidViewModel.setShowErrorDialog(boolean):0:0 -> invoke
    2:2:void invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.TruidViewModel.setShowErrorDialog(boolean):0:0 -> invoke
    3:3:void invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void invoke():0:0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$6 -> com.truid.android.TruIDLaunchActivity$h:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    1:1:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:kotlin.jvm.functions.Function3 com.truid.android.ComposableSingletons$TruIDLaunchActivityKt.getLambda-6$sdk_release():0:0 -> invoke
    2:2:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$6$1 -> com.truid.android.m1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.TruidViewModel.setShowErrorDialog(boolean):0:0 -> invoke
    2:2:void invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.TruidViewModel.setShowErrorDialog(boolean):0:0 -> invoke
    3:3:void invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void invoke():0:0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$7 -> com.truid.android.TruIDLaunchActivity$i:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity$TruIdApp$7 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/TruIDLaunchActivity$i;"}
com.truid.android.TruIDLaunchActivity$TruIdApp$8 -> com.truid.android.TruIDLaunchActivity$j:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.State $angle$delegate -> a
    1:1:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    17:17:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    18:18:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    20:20:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27,"4":28,"5":29},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    25:25:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    27:27:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    28:28:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":30,"2":31,"3":32},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    30:30:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    32:32:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":33,"2":34,"3":35},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    33:33:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    34:34:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    35:35:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    10:10:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":36,"2":37,"3":38,"4":39,"5":40},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    36:36:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    36:36:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    37:37:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    37:37:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    38:38:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    38:38:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    39:39:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    39:39:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    40:40:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    12:12:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":41,"2":42,"3":43,"4":44,"5":45},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    41:41:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    41:41:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    42:42:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    42:42:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    43:43:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    43:43:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    44:44:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    44:44:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    45:45:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    45:45:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":46,"2":47,"3":48},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    46:46:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    46:46:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    47:47:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    48:48:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    48:48:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    15:15:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$8$$ExternalSyntheticOutline0 -> a.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:5:androidx.compose.runtime.SkippableUpdater com.truid.android.TruIDLaunchActivity$TruIdApp$8$$InternalSyntheticOutline$21$b502241c999066740f954b7ed08cfcceb52aa0a33b51070f9feac9fbb72f208d$0.m(androidx.compose.ui.node.ComposeUiNode$Companion,androidx.compose.runtime.Composer,androidx.compose.ui.platform.ViewConfiguration,androidx.compose.runtime.Composer,androidx.compose.runtime.Composer):0:4 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.outline"}
com.truid.android.TruIDLaunchActivity$TruIdApp$8$$ExternalSyntheticOutline1 -> a.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:3:java.lang.Object com.truid.android.TruIDLaunchActivity$TruIdApp$8$$InternalSyntheticOutline$21$b502241c999066740f954b7ed08cfcceb52aa0a33b51070f9feac9fbb72f208d$1.m(androidx.compose.runtime.Composer,int):0:2 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.outline"}
com.truid.android.TruIDLaunchActivity$TruIdApp$8$$ExternalSyntheticOutline2 -> a.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:5:kotlin.jvm.functions.Function2 com.truid.android.TruIDLaunchActivity$TruIdApp$8$$InternalSyntheticOutline$21$b502241c999066740f954b7ed08cfcceb52aa0a33b51070f9feac9fbb72f208d$2.m(androidx.compose.ui.node.ComposeUiNode$Companion,androidx.compose.runtime.Composer,androidx.compose.ui.layout.MeasurePolicy,androidx.compose.runtime.Composer,androidx.compose.ui.unit.Density):0:4 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.outline"}
com.truid.android.TruIDLaunchActivity$TruIdApp$8$$ExternalSyntheticOutline3 -> a.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:3:void com.truid.android.TruIDLaunchActivity$TruIdApp$8$$InternalSyntheticOutline$21$b502241c999066740f954b7ed08cfcceb52aa0a33b51070f9feac9fbb72f208d$3.m(int,kotlin.jvm.functions.Function3,androidx.compose.runtime.SkippableUpdater,androidx.compose.runtime.Composer,int):0:2 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.outline"}
com.truid.android.TruIDLaunchActivity$TruIdApp$8$1$1$1$1 -> com.truid.android.n1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.compose.runtime.State $angle$delegate -> a
    1:1:void invoke(androidx.compose.ui.graphics.GraphicsLayerScope):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$TruIdApp$9 -> com.truid.android.TruIDLaunchActivity$k:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    androidx.navigation.NavHostController $navController -> a
    com.truid.android.TruIDLaunchActivity this$0 -> b
    1:1:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    2:2:boolean com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarVisibility(java.lang.String):0 -> invoke
    2:2:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:boolean com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarVisibility(java.lang.String):0:0 -> invoke
    3:3:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    4:4:boolean com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarVisibility(java.lang.String):0 -> invoke
    4:4:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:boolean com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarVisibility(java.lang.String):0:0 -> invoke
    5:5:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    6:6:boolean com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarVisibility(java.lang.String):0 -> invoke
    6:6:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:boolean com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarVisibility(java.lang.String):0:0 -> invoke
    7:7:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    8:8:boolean com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarVisibility(java.lang.String):0 -> invoke
    8:8:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:boolean com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarVisibility(java.lang.String):0:0 -> invoke
    9:9:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    10:10:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    10:10:boolean com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarVisibility(java.lang.String):0 -> invoke
    10:10:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:boolean com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarVisibility(java.lang.String):0:0 -> invoke
    11:11:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    12:12:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    12:12:boolean com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarVisibility(java.lang.String):0 -> invoke
    12:12:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    13:13:boolean com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarVisibility(java.lang.String):0:0 -> invoke
    13:13:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    15:15:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    15:15:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0 -> invoke
    15:15:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0:0 -> invoke
    16:16:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    17:17:int com.truid.android.api.Session.getCurrentStepIndex$sdk_release(java.lang.String):0:0 -> invoke
    17:17:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0 -> invoke
    17:17:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    18:18:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    18:18:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0 -> invoke
    18:18:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0:0 -> invoke
    19:19:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    20:20:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    20:20:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0 -> invoke
    20:20:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    21:21:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0:0 -> invoke
    21:21:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    22:22:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    22:22:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0 -> invoke
    22:22:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    23:23:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0:0 -> invoke
    23:23:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    24:24:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0 -> invoke
    24:24:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    25:25:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0:0 -> invoke
    25:25:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    26:26:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    26:26:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0 -> invoke
    26:26:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    27:27:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0:0 -> invoke
    27:27:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    28:28:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    28:28:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0 -> invoke
    28:28:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    29:29:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0:0 -> invoke
    29:29:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    30:30:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    30:30:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0 -> invoke
    30:30:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    31:31:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0:0 -> invoke
    31:31:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    32:32:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    32:32:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0 -> invoke
    32:32:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    33:33:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0:0 -> invoke
    33:33:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    34:34:java.lang.String com.truid.android.TruIDLaunchActivity$Screen.getRoute():0:0 -> invoke
    34:34:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0 -> invoke
    34:34:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    35:35:int com.truid.android.TruIDLaunchActivity$Screen$Companion.topBarProgress(java.lang.String):0:0 -> invoke
    35:35:void invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    36:36:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    36:36:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    37:37:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$getLocation$1 -> com.truid.android.TruIDLaunchActivity$l:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
com.truid.android.TruIDLaunchActivity$getLocation$2 -> com.truid.android.TruIDLaunchActivity$m:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    void invoke(android.location.Location) -> a
com.truid.android.TruIDLaunchActivity$getLocation$locationListener$1 -> com.truid.android.TruIDLaunchActivity$n:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
com.truid.android.TruIDLaunchActivity$setTruIDContent$1 -> com.truid.android.TruIDLaunchActivity$o:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    1:1:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$setTruIDContent$1$1 -> com.truid.android.o1:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    1:1:void invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$startSession$1 -> com.truid.android.TruIDLaunchActivity$p:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.TruidViewModel.setShowErrorDialog(boolean):0:0 -> invoke
    2:2:void invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.TruidViewModel.setShowErrorDialog(boolean):0:0 -> invoke
    3:3:void invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:boolean com.truid.android.api.Session.getPassiveLiveness():0:0 -> invoke
    4:4:void invoke():0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void invoke():0:0 -> invoke
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:void com.truid.android.vision.FingerprintDetectionHandler.setPositionCodeIndex$default(com.truid.android.vision.FingerprintDetectionHandler,java.lang.String,boolean,int,java.lang.Object):0:0 -> invoke
    6:6:void invoke():0 -> invoke
    6:6:java.lang.Object invoke():0 -> invoke
    7:7:void invoke():0:0 -> invoke
    7:7:java.lang.Object invoke():0 -> invoke
    8:8:void com.truid.android.vision.FingerprintDetectionHandler.setCaptureBothHands(boolean):0:0 -> invoke
    8:8:void invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:java.lang.Object invoke():0 -> invoke
    9:9:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$startSession$2 -> com.truid.android.TruIDLaunchActivity$q:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    void invoke() -> a
com.truid.android.TruIDLaunchActivity$startSession$2$1 -> com.truid.android.TruIDLaunchActivity$q$a:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.TruIDLaunchActivity$startSession$2$2 -> com.truid.android.TruIDLaunchActivity$q$b:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    1:1:void invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.TruIDLaunchActivity$startSession$3 -> com.truid.android.TruIDLaunchActivity$r:
# {"id":"sourceFile","fileName":"TruIDLaunchActivity.kt"}
    com.truid.android.TruIDLaunchActivity this$0 -> a
    1:1:void invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.TruidViewModel -> a.k:
# {"id":"sourceFile","fileName":"TruidViewModel.kt"}
    androidx.compose.runtime.MutableState showErrorDialog$delegate -> a
    void <init>() -> <init>
com.truid.android.UserData -> a.l:
# {"id":"sourceFile","fileName":"UserData.kt"}
    com.truid.android.Fingers fingers -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/d;"}
    com.truid.android.Face face -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/c;"}
    com.truid.android.Agent agent -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/a;"}
    com.truid.android.IdSelfie idSelfieMatch -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/e;"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(com.truid.android.Fingers,com.truid.android.Face,com.truid.android.Agent,com.truid.android.IdSelfie,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    3:3:void <init>(com.truid.android.Fingers,com.truid.android.Face,com.truid.android.Agent,com.truid.android.IdSelfie):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La/d;La/c;La/a;La/e;)V"}
    com.truid.android.Fingers getFingers() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La/d;"}
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.truid.android.api.AgentVerification -> b.a:
# {"id":"sourceFile","fileName":"AgentVerification.kt"}
    java.util.List agents -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.api.AgentVerification.extractAgents(org.json.JSONArray):0:0 -> a
    1:1:void access$extractAgents(com.truid.android.api.AgentVerification,org.json.JSONArray):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONArray;)V"}
    2:2:void agentManualVerificationSubmit$sdk_release(boolean,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLe/c;Le/d;)V"}
    3:3:int com.truid.android.api.AgentVerification.findAgentID(java.lang.String):0:0 -> a
    3:3:void chooseAgent$sdk_release(java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Le/o;Le/p;)V"}
    4:4:java.lang.String com.truid.android.api.AgentVerification$Agent.getName():0:0 -> a
    4:4:int com.truid.android.api.AgentVerification.findAgentID(java.lang.String):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void chooseAgent$sdk_release(java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0 -> a
    5:5:int com.truid.android.api.AgentVerification.findAgentID(java.lang.String):0:0 -> a
    5:5:void chooseAgent$sdk_release(java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0 -> a
    6:6:int com.truid.android.api.AgentVerification$Agent.getId():0:0 -> a
    6:6:int com.truid.android.api.AgentVerification.findAgentID(java.lang.String):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void chooseAgent$sdk_release(java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0 -> a
    7:7:void chooseAgent$sdk_release(java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
    8:8:java.lang.String com.truid.android.api.AgentVerification$Agent.getName():0:0 -> a
    8:8:java.util.List getAgentNames$sdk_release():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ljava/util/ArrayList;"}
    9:9:java.util.List getAgentNames$sdk_release():0:0 -> a
    10:10:void loadNames$sdk_release(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity$q$a;Lcom/truid/android/TruIDLaunchActivity$q$b;)V"}
    11:11:void uploadAgentFrame$sdk_release(android.graphics.Bitmap,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0:0 -> a
    12:12:void uploadPoseAgentFrame$sdk_release(android.graphics.Bitmap,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Lcom/truid/android/TruID$d;Lcom/truid/android/TruID$e;)V"}
com.truid.android.api.AgentVerification$Agent -> b.a$a:
# {"id":"sourceFile","fileName":"AgentVerification.kt"}
    java.lang.String name -> a
    int id -> b
    void <init>(java.lang.String,int) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.truid.android.api.AgentVerification$agentManualVerificationSubmit$3 -> b.b:
# {"id":"sourceFile","fileName":"AgentVerification.kt"}
    kotlin.jvm.functions.Function1 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/c;Le/d;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.AgentVerification$chooseAgent$3 -> b.c:
# {"id":"sourceFile","fileName":"AgentVerification.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/o;Le/p;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(okhttp3.Response) -> onResponse
com.truid.android.api.AgentVerification$loadNames$3 -> b.d:
# {"id":"sourceFile","fileName":"AgentVerification.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity$q$a;Lcom/truid/android/TruIDLaunchActivity$q$b;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONArray) -> onResponse
com.truid.android.api.AgentVerification$uploadAgentFrame$3 -> b.a$b:
# {"id":"sourceFile","fileName":"AgentVerification.kt"}
    kotlin.jvm.functions.Function2 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1) -> <init>
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.AgentVerification$uploadPoseAgentFrame$3 -> b.e:
# {"id":"sourceFile","fileName":"AgentVerification.kt"}
    kotlin.jvm.functions.Function2 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruID$d;Lcom/truid/android/TruID$e;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.DocumentCapture -> b.f:
# {"id":"sourceFile","fileName":"DocumentCapture.kt"}
    boolean authenticationStatus -> a
    1:1:void runIDtoSelfieMatching$sdk_release(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
    2:2:void runOCR$sdk_release(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
    3:3:void uploadAuthenticationFrame$sdk_release(android.graphics.Bitmap,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):0:0 -> a
    4:4:void uploadBackFrame$sdk_release(android.graphics.Bitmap,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Ly/x;Ly/y;)V"}
    5:5:void uploadReferenceFrame$sdk_release(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):0:0 -> a
com.truid.android.api.DocumentCapture$runIDtoSelfieMatching$3 -> b.f$a:
# {"id":"sourceFile","fileName":"DocumentCapture.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.DocumentCapture$runOCR$3 -> b.f$b:
# {"id":"sourceFile","fileName":"DocumentCapture.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.DocumentCapture$uploadAuthenticationFrame$3 -> b.f$c:
# {"id":"sourceFile","fileName":"DocumentCapture.kt"}
    kotlin.jvm.functions.Function1 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    void onError(com.androidnetworking.error.ANError) -> onError
    1:1:void com.truid.android.api.DocumentCapture.access$setAuthenticationStatus$p(boolean):0:0 -> onResponse
    1:1:void onResponse(org.json.JSONObject):0 -> onResponse
    2:2:void onResponse(org.json.JSONObject):0:0 -> onResponse
com.truid.android.api.DocumentCapture$uploadBackFrame$3 -> b.g:
# {"id":"sourceFile","fileName":"DocumentCapture.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/x;Ly/y;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.DocumentCapture$uploadReferenceFrame$3 -> b.f$d:
# {"id":"sourceFile","fileName":"DocumentCapture.kt"}
    kotlin.jvm.functions.Function1 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.FaceDetection -> b.i:
# {"id":"sourceFile","fileName":"FaceDetection.kt"}
    1:1:void uploadChallengeFaceFrame$sdk_release(android.graphics.Bitmap,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Lcom/truid/android/TruID$i;Lcom/truid/android/TruID$j;)V"}
    2:2:void uploadStraightFaceFrame$sdk_release(android.graphics.Bitmap,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):0:0 -> a
com.truid.android.api.FaceDetection$uploadChallengeFaceFrame$3 -> b.h:
# {"id":"sourceFile","fileName":"FaceDetection.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruID$i;Lcom/truid/android/TruID$j;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.FaceDetection$uploadStraightFaceFrame$3 -> b.i$a:
# {"id":"sourceFile","fileName":"FaceDetection.kt"}
    kotlin.jvm.functions.Function1 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.FingerprintDetection -> b.l:
# {"id":"sourceFile","fileName":"FingerprintDetection.kt"}
    1:1:void uploadFingerprintCaptureHand$sdk_release(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,java.io.File,java.io.File,java.io.File,java.io.File,java.io.File,java.io.File,java.io.File,java.io.File,java.io.File,java.io.File,int,int,int,int,java.lang.Integer,int,java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Ljava/io/File;Ljava/io/File;Ljava/io/File;Ljava/io/File;Ljava/io/File;Ljava/io/File;Ljava/io/File;Ljava/io/File;Ljava/io/File;Ljava/io/File;IIIILjava/lang/Integer;ILjava/lang/String;Lcom/truid/android/vision/a;Ly/l0;)V"}
    2:2:void uploadFingerprintCaptureThumb$sdk_release(android.graphics.Bitmap,android.graphics.Bitmap,java.io.File,java.io.File,int,int,java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Ljava/io/File;Ljava/io/File;IILjava/lang/String;Lcom/truid/android/vision/b;Ly/m0;)V"}
com.truid.android.api.FingerprintDetection$uploadFingerprintCaptureHand$3 -> b.j:
# {"id":"sourceFile","fileName":"FingerprintDetection.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/vision/a;Ly/l0;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.FingerprintDetection$uploadFingerprintCaptureThumb$3 -> b.k:
# {"id":"sourceFile","fileName":"FingerprintDetection.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/vision/b;Ly/m0;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.Interceptor.NetworkErrorInterceptor -> c.a:
# {"id":"sourceFile","fileName":"NetworkErrorInterceptor.kt"}
    kotlin.jvm.functions.Function0 onNetworkError -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity$p;)V"}
    okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
com.truid.android.api.Interceptor.RetryInterceptor -> c.b:
# {"id":"sourceFile","fileName":"RetryInterceptor.kt"}
    void <init>(int,long) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)V"}
    okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
com.truid.android.api.PersonalDetailsVerification -> b.p:
# {"id":"sourceFile","fileName":"PersonalDetailsVerification.kt"}
    java.util.List names -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List cities -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.lang.String nameUserSelection -> c
    java.lang.String cityUserSelection -> d
    java.lang.String mobileNumber -> e
    void <clinit>() -> <clinit>
    1:1:void loadVerificationData$sdk_release(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lkotlin/jvm/functions/Function0;Lt/d$b;)V"}
    2:2:void uploadPhoneNumber$sdk_release(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/e;Ls/f;)V"}
    3:3:void uploadResponses$sdk_release(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
com.truid.android.api.PersonalDetailsVerification$loadVerificationData$3 -> b.m:
# {"id":"sourceFile","fileName":"PersonalDetailsVerification.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lkotlin/jvm/functions/Function0;Lt/d$b;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    1:1:void com.truid.android.api.PersonalDetailsVerification.extractData(org.json.JSONObject):0:0 -> onResponse
    1:1:void com.truid.android.api.PersonalDetailsVerification.access$extractData(com.truid.android.api.PersonalDetailsVerification,org.json.JSONObject):0 -> onResponse
    1:1:void onResponse(org.json.JSONObject):0 -> onResponse
    2:2:void onResponse(org.json.JSONObject):0:0 -> onResponse
com.truid.android.api.PersonalDetailsVerification$uploadPhoneNumber$3 -> b.n:
# {"id":"sourceFile","fileName":"PersonalDetailsVerification.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/e;Ls/f;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.PersonalDetailsVerification$uploadResponses$2 -> b.o:
# {"id":"sourceFile","fileName":"PersonalDetailsVerification.kt"}
    com.truid.android.api.PersonalDetailsVerification$uploadResponses$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/o;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.api.PersonalDetailsVerification$uploadResponses$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.api.PersonalDetailsVerification$uploadResponses$3 -> b.p$a:
# {"id":"sourceFile","fileName":"PersonalDetailsVerification.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.Report -> b.q:
# {"id":"sourceFile","fileName":"Report.kt"}
    java.util.Map mOCRResults -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/LinkedHashMap;"}
    java.util.Map mVerificationStatuses -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/LinkedHashMap;"}
    com.truid.android.api.Report$VerificationStatus mVerified -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/q$a;"}
    void <clinit>() -> <clinit>
    void generateReport$sdk_release(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function1) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/c$g;Lu/c$i;Lu/c$h;)V"}
com.truid.android.api.Report$VerificationStatus -> b.q$a:
# {"id":"sourceFile","fileName":"Report.kt"}
    com.truid.android.api.Report$VerificationStatus VERIFIED -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/q$a;"}
    com.truid.android.api.Report$VerificationStatus PENDING -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/q$a;"}
    com.truid.android.api.Report$VerificationStatus NOT_VERIFIED -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/q$a;"}
    com.truid.android.api.Report$VerificationStatus[] $VALUES -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Lb/q$a;"}
    1:1:com.truid.android.api.Report$VerificationStatus[] com.truid.android.api.Report$VerificationStatus.$values():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.truid.android.api.Report$VerificationStatus valueOf(java.lang.String) -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lb/q$a;"}
    com.truid.android.api.Report$VerificationStatus[] values() -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lb/q$a;"}
com.truid.android.api.Report$generateReport$4 -> b.r:
# {"id":"sourceFile","fileName":"Report.kt"}
    kotlin.jvm.functions.Function1 $onError -> a
    kotlin.jvm.functions.Function3 $onReportUpdate -> b
    kotlin.jvm.functions.Function0 $onSuccess -> c
    void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function0) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/c$g;Lu/c$i;Lu/c$h;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    1:1:java.util.List com.truid.android.api.Session.getSteps():0:0 -> onResponse
    1:1:void onResponse(org.json.JSONObject):0 -> onResponse
    2:2:void onResponse(org.json.JSONObject):0:0 -> onResponse
    3:3:void com.truid.android.api.Report.populateDocumentCapture(org.json.JSONObject):0:0 -> onResponse
    3:3:void com.truid.android.api.Report.access$populateDocumentCapture(com.truid.android.api.Report,org.json.JSONObject):0 -> onResponse
    3:3:void onResponse(org.json.JSONObject):0 -> onResponse
    4:4:void onResponse(org.json.JSONObject):0:0 -> onResponse
    5:5:void com.truid.android.api.Report.setMVerified(com.truid.android.api.Report$VerificationStatus):0:0 -> onResponse
    5:5:void onResponse(org.json.JSONObject):0 -> onResponse
    6:6:void onResponse(org.json.JSONObject):0:0 -> onResponse
    7:7:void com.truid.android.api.Report.populateVerificationStatuses(org.json.JSONObject):0:0 -> onResponse
    7:7:void com.truid.android.api.Report.access$populateVerificationStatuses(com.truid.android.api.Report,org.json.JSONObject):0 -> onResponse
    7:7:void onResponse(org.json.JSONObject):0 -> onResponse
    8:8:void onResponse(org.json.JSONObject):0:0 -> onResponse
    9:9:void com.truid.android.api.Report.setMOnReportUpdate(kotlin.jvm.functions.Function3):0:0 -> onResponse
    9:9:void onResponse(org.json.JSONObject):0 -> onResponse
    10:10:kotlin.jvm.functions.Function3 com.truid.android.api.Report.getMOnReportUpdate():0:0 -> onResponse
    10:10:void onResponse(org.json.JSONObject):0 -> onResponse
    11:11:java.util.Map com.truid.android.api.Report.access$getMOCRResults$p():0:0 -> onResponse
    11:11:void onResponse(org.json.JSONObject):0 -> onResponse
    12:12:java.util.Map com.truid.android.api.Report.access$getMVerificationStatuses$p():0:0 -> onResponse
    12:12:void onResponse(org.json.JSONObject):0 -> onResponse
    13:13:com.truid.android.api.Report$VerificationStatus com.truid.android.api.Report.getMVerified():0:0 -> onResponse
    13:13:void onResponse(org.json.JSONObject):0 -> onResponse
    14:14:void onResponse(org.json.JSONObject):0:0 -> onResponse
com.truid.android.api.Session -> b.y:
# {"id":"sourceFile","fileName":"Session.kt"}
    java.util.Map customConfig -> a
    java.lang.String APIToken -> b
    java.lang.String sessionID -> c
    android.graphics.Bitmap clientLogo -> d
    boolean onDeviceLivenessRequired -> e
    boolean passiveLiveness -> f
    boolean passiveAgentLiveness -> g
    boolean idToSelfieMatchingRequired -> h
    boolean localOCRForSmartCNICRequired -> i
    boolean authenticityRequired -> j
    boolean backFrameRequired -> k
    boolean fingerprintSelectionRequired -> l
    boolean enableISO -> m
    boolean enableJPEG -> n
    boolean enableWSQ -> o
    java.util.List steps -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    void <clinit>() -> <clinit>
    1:1:void access$setClientLogo$p(android.graphics.Bitmap):0:0 -> a
    2:2:java.lang.String com.truid.android.api.Session.getCustomConfigJSON():0:0 -> a
    2:2:void createSession(java.lang.String,android.location.Location,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/location/Location;Lb/u;Lb/v;)V"}
    3:3:void createSession(java.lang.String,android.location.Location,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):0:0 -> a
    4:4:java.lang.String com.truid.android.api.Session.getCustomConfigJSON():0:0 -> a
    4:4:void createSession(java.lang.String,android.location.Location,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):0 -> a
    5:5:void createSession(java.lang.String,android.location.Location,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):0:0 -> a
    6:6:void extractTypes$sdk_release(org.json.JSONArray):0:0 -> a
    7:7:java.lang.String getAPIToken():0:0 -> a
    8:8:void getClientLogo(java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lb/w;Lb/x;)V"}
    9:9:java.lang.String getNextStep$sdk_release(java.lang.String):0:0 -> a
    10:10:void com.truid.android.api.Interceptor.RetryInterceptor.<init>(int,long,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> a
    10:10:void initialize$sdk_release(android.content.Context,java.lang.String,com.truid.android.api.Interceptor.NetworkErrorInterceptor,android.location.Location,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Lc/a;Landroid/location/Location;Lcom/truid/android/TruIDLaunchActivity$q;Lcom/truid/android/TruIDLaunchActivity$r;)V"}
    11:11:void initialize$sdk_release(android.content.Context,java.lang.String,com.truid.android.api.Interceptor.NetworkErrorInterceptor,android.location.Location,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
    12:12:void reset$sdk_release(boolean):0:0 -> a
    boolean getEnableISO() -> b
    boolean getEnableJPEG() -> c
    boolean getEnableWSQ() -> d
    int getNumSteps$sdk_release() -> e
    boolean getPassiveAgentLiveness() -> f
    boolean getPassiveLiveness() -> g
    java.lang.String getSessionID() -> h
    java.util.List getSteps() -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ljava/util/ArrayList;"}
com.truid.android.api.Session$createSession$1 -> b.s:
# {"id":"sourceFile","fileName":"Session.kt"}
    kotlin.jvm.functions.Function1 $onError -> a
    kotlin.jvm.functions.Function1 $onSuccess -> b
    void <init>(kotlin.jvm.functions.Function1,java.lang.String,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb/v;Lb/u;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.Session$getClientLogo$1 -> b.t:
# {"id":"sourceFile","fileName":"Session.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb/w;Lb/x;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.Session$initialize$1 -> b.w:
# {"id":"sourceFile","fileName":"Session.kt"}
    java.lang.String $token -> a
    android.location.Location $location -> b
    kotlin.jvm.functions.Function0 $onSuccess -> c
    kotlin.jvm.functions.Function1 $onError -> d
    void <init>(java.lang.String,android.location.Location,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/location/Location;Lcom/truid/android/TruIDLaunchActivity$q;Lcom/truid/android/TruIDLaunchActivity$r;)V"}
    1:1:void com.truid.android.api.Session$initialize$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.api.Session.access$createSession(com.truid.android.api.Session,java.lang.String,android.location.Location,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):0:0 -> invoke
    2:2:void com.truid.android.api.Session$initialize$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:java.lang.Object invoke():0:0 -> invoke
com.truid.android.api.Session$initialize$1$1 -> b.u:
# {"id":"sourceFile","fileName":"Session.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.api.Session$initialize$1$1.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.api.Session.access$setSessionID$p(java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.api.Session$initialize$1$1.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.api.Session$initialize$1$1.invoke(java.lang.String):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.api.Session$initialize$1$2 -> b.v:
# {"id":"sourceFile","fileName":"Session.kt"}
    kotlin.jvm.functions.Function1 $onError -> a
    void <init>(kotlin.jvm.functions.Function1) -> <init>
    1:1:void com.truid.android.api.Session$initialize$1$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.api.Session$initialize$2 -> b.x:
# {"id":"sourceFile","fileName":"Session.kt"}
    kotlin.jvm.functions.Function1 $onError -> a
    void <init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity$r;)V"}
    1:1:void com.truid.android.api.Session$initialize$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.api.Undertaking -> b.b0:
# {"id":"sourceFile","fileName":"Undertaking.kt"}
    1:1:void getUndertaking$sdk_release(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lkotlin/jvm/functions/Function1;Lw/b$c;)V"}
    2:2:void postUndertaking$sdk_release(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/c;Lw/d;)V"}
com.truid.android.api.Undertaking$getUndertaking$3 -> b.z:
# {"id":"sourceFile","fileName":"Undertaking.kt"}
    kotlin.jvm.functions.Function1 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lkotlin/jvm/functions/Function1;Lw/b$c;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.Undertaking$postUndertaking$3 -> b.a0:
# {"id":"sourceFile","fileName":"Undertaking.kt"}
    kotlin.jvm.functions.Function0 $onSuccess -> a
    kotlin.jvm.functions.Function1 $onError -> b
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/c;Lw/d;)V"}
    void onError(com.androidnetworking.error.ANError) -> onError
    void onResponse(org.json.JSONObject) -> onResponse
com.truid.android.api.utils.APIEndpoints -> R8$$REMOVED$$CLASS$$1:
# {"id":"sourceFile","fileName":"APIEndpoints.kt"}
com.truid.android.api.utils.APIEndpoints$Companion -> d.a:
# {"id":"sourceFile","fileName":"APIEndpoints.kt"}
    1:1:java.lang.String com.truid.android.api.utils.APIEndpoints.access$getBaseUrl$cp():0:0 -> a
    1:1:java.lang.String getBaseUrl():0 -> a
com.truid.android.api.utils.APIEndpoints$EnumUnboxingLocalUtility -> d.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String com.truid.android.api.utils.APIEndpoints.baseUrl -> a
    java.lang.String com.truid.android.api.utils.APIEndpoints.getUrl() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ljava/lang/String;"}
    java.lang.String getPath(int) -> b
      # {"id":"com.android.tools.r8.synthesized"}
com.truid.android.api.utils.APIEndpoints$EnumUnboxingSharedUtility -> d.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    int ordinal(int) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.truid.android.ui.agent.AgentFaceDetectionScreenKt -> e.b:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    1:1:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/g;Lx/b;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V"}
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":53,"2":54,"3":55,"4":56,"5":57},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    53:53:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    54:54:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    55:55:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    56:56:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    57:57:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":58,"2":59,"3":60,"4":61,"5":62},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    58:58:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    59:59:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    60:60:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    61:61:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    62:62:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":63,"2":64,"3":65},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    63:63:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    64:64:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    65:65:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    6:6:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    7:7:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    8:8:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    9:9:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    10:10:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    11:11:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    12:12:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    13:13:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:boolean com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    14:14:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    15:15:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:boolean com.truid.android.api.Session.getPassiveAgentLiveness():0:0 -> a
    16:16:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    17:17:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    18:18:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    19:19:boolean com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$7(androidx.compose.runtime.MutableState):0:0 -> a
    19:19:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    20:20:java.util.List com.truid.android.api.Session.getSteps():0:0 -> a
    20:20:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    21:21:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:boolean com.truid.android.api.Session.getAuthenticityRequired():0:0 -> a
    22:22:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    23:23:boolean com.truid.android.api.DocumentCapture.getAuthenticationStatus():0:0 -> a
    23:23:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    24:24:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    25:25:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$8(androidx.compose.runtime.MutableState,boolean):0:0 -> a
    25:25:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    26:26:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    27:27:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    28:28:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:boolean com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$7(androidx.compose.runtime.MutableState):0:0 -> a
    29:29:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    30:30:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$8(androidx.compose.runtime.MutableState,boolean):0:0 -> a
    30:30:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    31:31:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    32:32:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    33:33:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    34:34:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    35:35:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    36:36:com.truid.android.Agent com.truid.android.UserData.getAgent():0:0 -> a
    36:36:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    37:37:android.graphics.Bitmap com.truid.android.Agent.getFaceImage():0:0 -> a
    37:37:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    38:38:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    39:39:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    40:40:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    41:41:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    41:41:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    42:42:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    43:43:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    43:43:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    44:44:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    45:45:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    45:45:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    46:46:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    47:47:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    47:47:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    48:48:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    49:49:com.truid.android.vision.AgentFaceLiveness$DetectionStatus com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    49:49:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    50:50:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    51:51:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":66,"2":67,"3":68,"4":69,"5":70,"6":71,"7":72},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    66:66:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    67:67:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    68:68:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    69:69:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    70:70:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    71:71:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    72:72:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    52:52:void AgentFaceDetectionBody(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    73:73:kotlin.jvm.functions.Function2 com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt.getLambda-5$sdk_release():0:0 -> a
    73:73:void ManualVerificationDialog(kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int):0 -> a
    74:74:void ManualVerificationDialog(kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int):0:0 -> a
    75:75:void OvalOverlay-sW7UJKQ(com.truid.android.ui.utils.LayoutViewModel,long,boolean,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;JZLkotlin/jvm/functions/Function2;Landroidx/compose/runtime/Composer;II)V"}
    76:76:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":85,"2":86,"3":87},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    85:85:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    86:86:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    87:87:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    77:77:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    78:78:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":88,"2":89,"3":90,"4":91,"5":92},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    88:88:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    89:89:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    90:90:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    91:91:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    92:92:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    79:79:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    80:80:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":93,"2":94,"3":95,"4":96,"5":97},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    93:93:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    94:94:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    95:95:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    96:96:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    97:97:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    81:81:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":98,"2":99,"3":100},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    98:98:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    99:99:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    100:100:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    82:82:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    83:83:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":101,"2":102,"3":103,"4":104,"5":105,"6":106,"7":107},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    101:101:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    102:102:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    103:103:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    104:104:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    105:105:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    106:106:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    107:107:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    84:84:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    108:108:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":117,"2":118,"3":119},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    117:117:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    118:118:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    119:119:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    109:109:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    110:110:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":120,"2":121,"3":122,"4":123,"5":124},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    120:120:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    121:121:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    122:122:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    123:123:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    124:124:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    111:111:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    112:112:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":125,"2":126,"3":127,"4":128,"5":129},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    125:125:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    126:126:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    127:127:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    128:128:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    129:129:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    113:113:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":130,"2":131,"3":132},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    130:130:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    131:131:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    132:132:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    114:114:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    115:115:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":133,"2":134,"3":135,"4":136,"5":137,"6":138,"7":139},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    133:133:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    134:134:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    135:135:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    136:136:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    137:137:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    138:138:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    139:139:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    116:116:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    140:140:void ScaffoldOverlay(com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.vision.AgentFaceLiveness$DetectionStatus,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Ly/g$a;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V"}
    141:141:kotlin.jvm.functions.Function2 com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt.getLambda-2$sdk_release():0:0 -> a
    141:141:void TryAgainDialog(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    142:142:void TryAgainDialog(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$1 -> e.b$a:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.vision.AgentFaceLiveness $agentFaceLiveness -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g;"}
    androidx.compose.runtime.MutableState $detectionStatus$delegate -> b
    void <init>(com.truid.android.vision.AgentFaceLiveness,androidx.compose.runtime.MutableState) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/g;Landroidx/compose/runtime/MutableState;)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$1$1 -> e.a:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    androidx.compose.runtime.MutableState $detectionStatus$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$1$1.invoke(com.truid.android.vision.AgentFaceLiveness$DetectionStatus,java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$2(androidx.compose.runtime.MutableState,com.truid.android.vision.AgentFaceLiveness$DetectionStatus):0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt.access$AgentFaceDetectionBody$lambda$2(androidx.compose.runtime.MutableState,com.truid.android.vision.AgentFaceLiveness$DetectionStatus):0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$1$1.invoke(com.truid.android.vision.AgentFaceLiveness$DetectionStatus,java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$2 -> e.b$b:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.vision.AgentFaceLiveness $agentFaceLiveness -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g;"}
    void <init>(com.truid.android.vision.AgentFaceLiveness) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/g;)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$2.invoke(androidx.compose.ui.layout.LayoutCoordinates):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$3$1 -> e.b$c:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    androidx.compose.runtime.MutableState $completed$delegate -> b
    void <init>(kotlin.jvm.functions.Function0,androidx.compose.runtime.MutableState) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$3$1.invoke(boolean):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$3$1$1 -> e.c:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    androidx.compose.runtime.MutableState $completed$delegate -> b
    void <init>(kotlin.jvm.functions.Function0,androidx.compose.runtime.MutableState) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$3$1$1.invoke(boolean):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$8(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt.access$AgentFaceDetectionBody$lambda$8(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$3$1$1.invoke(boolean):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$3$1$1.invoke(boolean):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$3$1$2 -> e.d:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$3$1$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le/d;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$3$1$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$5$1 -> e.b$d:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onTryAgain -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$5$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$6 -> e.b$e:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.vision.AgentFaceLiveness $agentFaceLiveness -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g;"}
    void <init>(com.truid.android.vision.AgentFaceLiveness) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/g;)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$6.invoke-0a9Yr6o(long,long):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$7$1 -> e.b$f:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    androidx.compose.runtime.MutableState $startAnalysis$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$7$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt.AgentFaceDetectionBody$lambda$5(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt.access$AgentFaceDetectionBody$lambda$5(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$1$7$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$2 -> e.b$g:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.vision.AgentFaceLiveness $agentFaceLiveness -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g;"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    kotlin.jvm.functions.Function0 $onNextClick -> c
    kotlin.jvm.functions.Function0 $onTryAgain -> d
    kotlin.jvm.functions.Function0 $onHelp -> e
    int $$changed -> f
    void <init>(com.truid.android.vision.AgentFaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/g;Lx/b;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;I)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$AgentFaceDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$1$1 -> e.b$h:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function1 $onDismiss -> a
    void <init>(kotlin.jvm.functions.Function1) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$2 -> e.b$i:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function1 $onDismiss -> a
    void <init>(kotlin.jvm.functions.Function1,int) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:kotlin.jvm.functions.Function3 com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt.getLambda-3$sdk_release():0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$2.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$2$1$1 -> e.e:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function1 $onDismiss -> a
    void <init>(kotlin.jvm.functions.Function1) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$2$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$3 -> e.b$j:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function1 $onDismiss -> a
    void <init>(kotlin.jvm.functions.Function1,int) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:kotlin.jvm.functions.Function3 com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt.getLambda-4$sdk_release():0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$3.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$3$1$1 -> e.f:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function1 $onDismiss -> a
    void <init>(kotlin.jvm.functions.Function1) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$3$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$4 -> e.b$k:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function1 $onDismiss -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function1,int) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ManualVerificationDialog$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$1 -> e.b$l:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    int label -> a
    androidx.compose.animation.core.Animatable $factorAnimatable -> b
    void <init>(androidx.compose.animation.core.Animatable,kotlin.coroutines.Continuation) -> <init>
    kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    1:1:kotlin.coroutines.Continuation com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$1.create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> invoke
    1:1:java.lang.Object com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$1.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$1.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$2 -> e.b$m:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    androidx.compose.animation.core.Animatable $factorAnimatable -> a
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    long $ovalColor -> c
    kotlin.jvm.functions.Function2 $onGloballyPositioned -> d
    void <init>(androidx.compose.animation.core.Animatable,com.truid.android.ui.utils.LayoutViewModel,long,kotlin.jvm.functions.Function2) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/animation/core/Animatable;Lx/b;JLkotlin/jvm/functions/Function2;)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:float com.truid.android.ui.utils.LayoutViewModel.getScaffoldTopBarBottom():0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:float com.truid.android.ui.utils.LayoutViewModel.getScaffoldTopBarBottom():0:0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:float com.truid.android.ui.utils.LayoutViewModel.getBottomContentTop():0:0 -> invoke
    5:5:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:float com.truid.android.ui.utils.LayoutViewModel.getBottomContentTop():0:0 -> invoke
    6:6:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:float com.truid.android.ui.utils.LayoutViewModel.getScaffoldTopBarBottom():0:0 -> invoke
    8:8:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:java.lang.Object invoke(java.lang.Object):0 -> invoke
    9:9:float com.truid.android.ui.utils.LayoutViewModel.getScaffoldTopBarBottom():0:0 -> invoke
    9:9:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$3 -> e.b$n:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    long $ovalColor -> b
    boolean $closeOval -> c
    kotlin.jvm.functions.Function2 $onGloballyPositioned -> d
    int $$changed -> e
    int $$default -> f
    void <init>(com.truid.android.ui.utils.LayoutViewModel,long,boolean,kotlin.jvm.functions.Function2,int,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;JZLkotlin/jvm/functions/Function2;II)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$OvalOverlay$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$PoseArrow$2 -> e.b$o:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    java.lang.String $direction -> a
    int $$changed -> b
    int $$default -> c
    void <init>(java.lang.String,int,int) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$PoseArrow$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ProgressDialog$2 -> e.b$p:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    int $$changed -> a
    void <init>(int) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ProgressDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$1 -> e.b$q:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onHelp -> a
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    int $$dirty -> c
    void <init>(kotlin.jvm.functions.Function0,com.truid.android.ui.utils.LayoutViewModel,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lkotlin/jvm/functions/Function0;Lx/b;I)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:int com.truid.android.api.Session.getCurrentStepIndex$sdk_release(java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2 -> e.b$r:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    kotlin.jvm.functions.Function0 $onGloballyPositioned -> b
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus $detectionStatus -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    void <init>(com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,int,com.truid.android.vision.AgentFaceLiveness$DetectionStatus) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lkotlin/jvm/functions/Function0;ILy/g$a;)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":12,"2":13,"3":14},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    12:12:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    13:13:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    15:15:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    17:17:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    18:18:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    20:20:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    25:25:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    27:27:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":28,"2":29,"3":30,"4":31,"5":32,"6":33,"7":34},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    28:28:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    30:30:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    32:32:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    33:33:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    34:34:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2$$ExternalSyntheticOutline0 -> e.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:7:boolean com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2$$InternalSyntheticOutline$21$3b55b85c6c3d214de97835b11b2cb115b16a46c781f59e7fb4ffb4bbdb555cff$0.m(androidx.compose.runtime.Composer):0:6 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.outline"}
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2$1$1$1 -> e.h:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    kotlin.jvm.functions.Function0 $onGloballyPositioned -> b
    void <init>(com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2$1$1$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.utils.LayoutViewModel.setBottomContentTop(float):0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2$1$1$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.utils.LayoutViewModel.setBottomContentTop(float):0:0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2$1$1$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2$1$1$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0:0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2$1$2 -> e.i:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus $detectionStatus -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    void <init>(com.truid.android.vision.AgentFaceLiveness$DetectionStatus) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/g$a;)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2$1$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.String com.truid.android.vision.AgentFaceLiveness$DetectionStatus.getMessage():0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2$1$2.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$2$1$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$3 -> e.b$s:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    kotlin.jvm.functions.Function0 $onNext -> b
    kotlin.jvm.functions.Function0 $onHelp -> c
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus $detectionStatus -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    kotlin.jvm.functions.Function0 $onGloballyPositioned -> e
    int $$changed -> f
    void <init>(com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.vision.AgentFaceLiveness$DetectionStatus,kotlin.jvm.functions.Function0,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Ly/g$a;Lkotlin/jvm/functions/Function0;I)V"}
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$ScaffoldOverlay$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$TryAgainDialog$1 -> e.b$t:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onDismiss -> a
    int $$dirty -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$TryAgainDialog$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:kotlin.jvm.functions.Function3 com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt.getLambda-1$sdk_release():0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$TryAgainDialog$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$TryAgainDialog$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentFaceDetectionScreenKt$TryAgainDialog$2 -> e.b$u:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onDismiss -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.agent.AgentFaceDetectionScreenKt$TryAgainDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt -> e.j:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    1:1:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":19,"2":20,"3":21},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    19:19:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    20:20:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    21:21:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    2:2:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":22,"2":23,"3":24,"4":25,"5":26},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    22:22:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    23:23:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    24:24:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    25:25:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    26:26:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    4:4:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    5:5:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":27,"2":28,"3":29,"4":30,"5":31},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    27:27:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    28:28:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    29:29:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    30:30:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    31:31:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    6:6:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":32,"2":33,"3":34},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    32:32:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    33:33:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    34:34:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    7:7:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    8:8:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":35,"2":36,"3":37},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    35:35:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    36:36:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    37:37:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    9:9:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    10:10:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":38,"2":39,"3":40,"4":41,"5":42},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    38:38:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    39:39:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    40:40:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    41:41:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    42:42:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    11:11:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    12:12:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":43,"2":44,"3":45,"4":46,"5":47},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    43:43:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    44:44:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    45:45:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    46:46:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    47:47:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    13:13:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":48,"2":49,"3":50},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    48:48:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    49:49:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    50:50:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    14:14:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    15:15:java.lang.String com.truid.android.ui.agent.AgentSelectionScreenKt.AgentSelection$lambda$7(androidx.compose.runtime.MutableState):0:0 -> a
    15:15:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0 -> a
    16:16:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    17:17:boolean com.truid.android.ui.agent.AgentSelectionScreenKt.AgentSelection$lambda$10(androidx.compose.runtime.MutableState):0:0 -> a
    17:17:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0 -> a
    18:18:void AgentSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    51:51:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":67,"2":68,"3":69},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    67:67:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    68:68:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    69:69:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    52:52:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    53:53:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":70,"2":71,"3":72,"4":73,"5":74},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    70:70:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    71:71:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    72:72:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    73:73:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    74:74:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    54:54:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    55:55:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":75,"2":76,"3":77,"4":78,"5":79},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    75:75:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    76:76:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    77:77:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    78:78:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    79:79:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    56:56:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":80,"2":81,"3":82},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    80:80:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    81:81:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    82:82:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    57:57:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    58:58:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":83,"2":84,"3":85},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    83:83:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    84:84:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    85:85:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    59:59:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    60:60:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":86,"2":87,"3":88,"4":89,"5":90},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    86:86:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    87:87:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    88:88:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    89:89:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    90:90:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    61:61:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    62:62:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":91,"2":92,"3":93,"4":94,"5":95},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    91:91:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    92:92:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    93:93:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    94:94:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    95:95:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    63:63:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":96,"2":97,"3":98},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    96:96:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    97:97:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    98:98:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    64:64:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    65:65:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":99,"2":100,"3":101,"4":102,"5":103,"6":104,"7":105},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    99:99:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    100:100:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    101:101:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    102:102:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    103:103:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    104:104:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    105:105:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    66:66:void AgentSelectionBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$1 -> e.j$a:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le/j$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$1.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$1$1 -> e.j$b:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    androidx.compose.runtime.MutableState $expanded$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:boolean com.truid.android.ui.agent.AgentSelectionScreenKt.AgentSelection$lambda$10(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:boolean com.truid.android.ui.agent.AgentSelectionScreenKt.access$AgentSelection$lambda$10(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$1$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentSelectionScreenKt.AgentSelection$lambda$11(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentSelectionScreenKt.access$AgentSelection$lambda$11(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$1$1.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$1$1 -> e.j$c:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    androidx.compose.runtime.MutableState $expanded$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentSelectionScreenKt.AgentSelection$lambda$11(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentSelectionScreenKt.access$AgentSelection$lambda$11(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$1$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$2 -> e.j$d:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    java.util.List $agentNames -> a
    androidx.compose.runtime.MutableState $expanded$delegate -> b
    androidx.compose.runtime.MutableState $agentName$delegate -> c
    kotlin.jvm.functions.Function1 $onSelection -> d
    void <init>(java.util.List,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,kotlin.jvm.functions.Function1) -> <init>
    1:1:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$2.invoke(androidx.compose.foundation.layout.ColumnScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$2$1$1$1 -> e.k:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    java.lang.String $agent -> a
    kotlin.jvm.functions.Function1 $onSelection -> b
    androidx.compose.runtime.MutableState $expanded$delegate -> c
    androidx.compose.runtime.MutableState $agentName$delegate -> d
    void <init>(java.lang.String,kotlin.jvm.functions.Function1,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$2$1$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentSelectionScreenKt.AgentSelection$lambda$11(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentSelectionScreenKt.access$AgentSelection$lambda$11(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$2$1$1$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$2$1$1$1.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.agent.AgentSelectionScreenKt.AgentSelection$lambda$8(androidx.compose.runtime.MutableState,java.lang.String):0:0 -> invoke
    4:4:void com.truid.android.ui.agent.AgentSelectionScreenKt.access$AgentSelection$lambda$8(androidx.compose.runtime.MutableState,java.lang.String):0 -> invoke
    4:4:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$2$1$1$1.invoke():0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$2$1$1$1.invoke():0:0 -> invoke
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:java.lang.String com.truid.android.ui.agent.AgentSelectionScreenKt.AgentSelection$lambda$7(androidx.compose.runtime.MutableState):0:0 -> invoke
    6:6:java.lang.String com.truid.android.ui.agent.AgentSelectionScreenKt.access$AgentSelection$lambda$7(androidx.compose.runtime.MutableState):0 -> invoke
    6:6:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$2$1$1$1.invoke():0 -> invoke
    6:6:java.lang.Object invoke():0 -> invoke
    7:7:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$2$1$1$1.invoke():0:0 -> invoke
    7:7:java.lang.Object invoke():0 -> invoke
    8:8:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$2$1$2 -> e.l:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    java.lang.String $agent -> a
    void <init>(java.lang.String) -> <init>
    1:1:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$2$2$2$1$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$3 -> e.j$e:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    java.util.List $agentNames -> a
    kotlin.jvm.functions.Function1 $onSelection -> b
    int $$changed -> c
    int $$default -> d
    void <init>(java.util.List,kotlin.jvm.functions.Function1,int,int) -> <init>
    1:1:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelection$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1 -> e.j$f:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    androidx.compose.runtime.MutableState $chosenAgent$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    10:10:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    12:12:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15,"4":16,"5":17},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    13:13:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    15:15:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    17:17:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20,"4":21,"5":22},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    18:18:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    20:20:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    23:23:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    25:25:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1$$ExternalSyntheticOutline0 -> e.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:3:androidx.compose.ui.layout.MeasurePolicy com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1$$InternalSyntheticOutline$21$b8aa5bc4e208745f7f948c94115df02a43f1c2f9c93a70f717029da846c3c1cf$0.m(androidx.compose.ui.Alignment$Companion,androidx.compose.foundation.layout.Arrangement$Vertical,androidx.compose.runtime.Composer,int,int):0:2 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.outline"}
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1$1$1$1 -> e.n:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    androidx.compose.runtime.MutableState $chosenAgent$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1$1$1$1.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentSelectionScreenKt.AgentSelectionBody$lambda$2(androidx.compose.runtime.MutableState,java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentSelectionScreenKt.access$AgentSelectionBody$lambda$2(androidx.compose.runtime.MutableState,java.lang.String):0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$1$1$1$1$1.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$2$1 -> e.j$g:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    androidx.compose.runtime.MutableState $chosenAgent$delegate -> b
    void <init>(kotlin.jvm.functions.Function0,androidx.compose.runtime.MutableState) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.ui.agent.AgentSelectionScreenKt.AgentSelectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:java.lang.String com.truid.android.ui.agent.AgentSelectionScreenKt.access$AgentSelectionBody$lambda$1(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$2$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$2$1.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$2$1$1 -> e.o:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$2$1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le/o;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke() -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$2$1$2 -> e.p:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$2$1$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le/p;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$1$2$1$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$2 -> e.j$h:
# {"id":"sourceFile","fileName":"AgentSelectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.agent.AgentSelectionScreenKt$AgentSelectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt -> e.q:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function3 lambda-1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-2 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function3 lambda-3 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function3 lambda-4 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-5 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    void <clinit>() -> <clinit>
com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-1$1 -> e.q$a:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le/q$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-1$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-2$1 -> e.q$b:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le/q$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-3$1 -> e.q$c:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-3$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le/q$c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-3$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-4$1 -> e.q$d:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-4$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le/q$d;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-4$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-5$1 -> e.q$e:
# {"id":"sourceFile","fileName":"AgentFaceDetectionScreen.kt"}
    com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-5$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le/q$e;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.agent.ComposableSingletons$AgentFaceDetectionScreenKt$lambda-5$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.CardDetectionScreenKt -> f.b:
# {"id":"sourceFile","fileName":"CardDetectionScreen.kt"}
    1:1:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lf/g;Landroidx/compose/runtime/Composer;II)V"}
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":19,"2":20,"3":21,"4":22,"5":23},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    19:19:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    20:20:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    21:21:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    22:22:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    23:23:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    2:2:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":24,"2":25,"3":26,"4":27,"5":28},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    24:24:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    25:25:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    26:26:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    27:27:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    28:28:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    4:4:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":29,"2":30,"3":31},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    29:29:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    30:30:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    31:31:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    5:5:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    6:6:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getShowProgressAnimation():0:0 -> a
    6:6:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getShowProgressAnimation():0:0 -> a
    7:7:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    8:8:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getShowScanCardBacksideDialog():0:0 -> a
    8:8:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    9:9:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getShowValidationErrorDialog():0:0 -> a
    9:9:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    10:10:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    11:11:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getEnableFlash():0:0 -> a
    11:11:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    12:12:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    13:13:int com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getRoiPositionOffset():0:0 -> a
    13:13:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    14:14:long com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getIndicatorColor-0d7_KjU():0:0 -> a
    14:14:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    15:15:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    16:16:java.lang.String com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getUserPromptMessage():0:0 -> a
    16:16:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    17:17:java.lang.String com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getUserPromptMessage():0:0 -> a
    17:17:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    18:18:void CardDetectionBody(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1 -> f.b$a:
# {"id":"sourceFile","fileName":"CardDetectionScreen.kt"}
    com.truid.android.vision.CardDetectionHandler $cardDetectionHandler -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    com.truid.android.ui.carddetection.CardDetectionScreenViewModel $viewModel -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lf/g;"}
    void <init>(com.truid.android.vision.CardDetectionHandler,com.truid.android.ui.carddetection.CardDetectionScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;Lf/g;)V"}
    1:1:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getScanningBackSide():0:0 -> invoke
    2:2:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1.invoke(androidx.camera.core.ImageProxy):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getScanningBackSide():0:0 -> invoke
    3:3:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1.invoke(androidx.camera.core.ImageProxy):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1 -> f.a:
# {"id":"sourceFile","fileName":"CardDetectionScreen.kt"}
    com.truid.android.ui.carddetection.CardDetectionScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lf/g;"}
    void <init>(com.truid.android.ui.carddetection.CardDetectionScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/g;)V"}
    1:1:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    2:2:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getShowScanCardBacksideDialog():0:0 -> invoke
    3:3:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    3:3:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getShowValidationErrorDialog():0:0 -> invoke
    4:4:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    4:4:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:boolean com.truid.android.vision.CardDetectionHandler$DetectionProgress.getEnableFlash():0:0 -> invoke
    5:5:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setEnableFlash(boolean):0:0 -> invoke
    6:6:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    6:6:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:int com.truid.android.vision.CardDetectionHandler$DetectionProgress.getProgress():0:0 -> invoke
    7:7:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    7:7:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setProgress(int):0:0 -> invoke
    8:8:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    8:8:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    9:9:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setDone(boolean):0:0 -> invoke
    10:10:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    10:10:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    11:11:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    12:12:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setShowProgressAnimation(boolean):0:0 -> invoke
    12:12:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    12:12:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    13:13:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    13:13:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setShowScanCardBacksideDialog(boolean):0:0 -> invoke
    14:14:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    14:14:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    15:15:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    15:15:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setShowValidationErrorDialog(boolean):0:0 -> invoke
    16:16:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    16:16:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    17:17:int com.truid.android.vision.CardDetectionHandler$DetectionProgress.getRoiPosition():0:0 -> invoke
    17:17:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    17:17:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    18:18:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setRoiPositionOffset(int):0:0 -> invoke
    18:18:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    18:18:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    19:19:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    20:20:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    20:20:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    20:20:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    21:21:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setIndicatorColor-8_81llA(long):0:0 -> invoke
    22:22:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    22:22:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    23:23:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    24:24:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    24:24:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    25:25:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    25:25:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    26:26:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    26:26:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    27:27:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    27:27:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    28:28:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    28:28:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    28:28:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    29:29:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    30:30:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    30:30:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    30:30:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    31:31:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    32:32:androidx.camera.core.Camera com.truid.android.ui.components.CameraPreviewKt.getCamera():0:0 -> invoke
    32:32:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    32:32:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    33:33:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    33:33:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    34:34:androidx.camera.view.PreviewView com.truid.android.ui.components.CameraPreviewKt.getPreviewViewGlobal():0:0 -> invoke
    34:34:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    34:34:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    35:35:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    35:35:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    36:36:androidx.camera.view.PreviewView com.truid.android.ui.components.CameraPreviewKt.getPreviewViewGlobal():0:0 -> invoke
    36:36:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    36:36:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    36:36:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    37:37:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    37:37:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    37:37:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    38:38:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    38:38:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    38:38:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    38:38:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    39:39:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    39:39:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    39:39:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    40:40:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    40:40:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    40:40:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    41:41:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    41:41:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    41:41:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    42:42:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    42:42:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    42:42:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    42:42:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    43:43:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    43:43:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    43:43:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    44:44:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    44:44:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    44:44:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    44:44:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    45:45:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    45:45:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    45:45:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    46:46:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    46:46:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    46:46:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    46:46:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    47:47:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.update(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0:0 -> invoke
    47:47:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$1$1.invoke(com.truid.android.vision.CardDetectionHandler$DetectionProgress,com.truid.android.vision.CardDetectionHandler$UserPrompt):0 -> invoke
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    48:48:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$1$2 -> f.b$b:
# {"id":"sourceFile","fileName":"CardDetectionScreen.kt"}
    float $screenPixelDensity -> a
    com.truid.android.vision.CardDetectionHandler $cardDetectionHandler -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    com.truid.android.ui.carddetection.CardDetectionScreenViewModel $viewModel -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lf/g;"}
    void <init>(float,com.truid.android.vision.CardDetectionHandler,com.truid.android.ui.carddetection.CardDetectionScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FLy/h;Lf/g;)V"}
    void invoke-0a9Yr6o(long,long) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2 -> f.b$c:
# {"id":"sourceFile","fileName":"CardDetectionScreen.kt"}
    com.truid.android.ui.carddetection.CardDetectionScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lf/g;"}
    kotlin.jvm.functions.Function0 $startNextStep -> b
    com.truid.android.vision.CardDetectionHandler $cardDetectionHandler -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    void <init>(com.truid.android.ui.carddetection.CardDetectionScreenViewModel,kotlin.jvm.functions.Function0,com.truid.android.vision.CardDetectionHandler) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/g;Lkotlin/jvm/functions/Function0;Ly/h;)V"}
    1:1:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":29,"2":30,"3":31,"4":32,"5":33},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    29:29:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    30:30:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    32:32:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    33:33:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":34,"2":35,"3":36,"4":37,"5":38},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    34:34:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    35:35:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    36:36:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    36:36:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    37:37:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    37:37:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    38:38:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    38:38:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":39,"2":40,"3":41},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    39:39:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    39:39:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    40:40:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    41:41:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    41:41:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:int com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getProgress():0:0 -> invoke
    7:7:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:int com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getProgress():0:0 -> invoke
    8:8:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    10:10:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getShowScanCardBacksideDialog():0:0 -> invoke
    10:10:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    12:12:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getShowProgressAnimation():0:0 -> invoke
    12:12:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    13:13:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getShowProgressAnimation():0:0 -> invoke
    13:13:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":42,"2":43,"3":44},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    42:42:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    42:42:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    43:43:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    43:43:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    44:44:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    44:44:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":45,"2":46,"3":47,"4":48,"5":49},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    45:45:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    45:45:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    46:46:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    46:46:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    47:47:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    48:48:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    48:48:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    49:49:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    49:49:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    18:18:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":50,"2":51,"3":52,"4":53,"5":54},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    50:50:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    50:50:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    51:51:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    51:51:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    52:52:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    52:52:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    53:53:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    53:53:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    54:54:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    54:54:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":55,"2":56,"3":57},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    55:55:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    55:55:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    56:56:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    56:56:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    57:57:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    57:57:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    22:22:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getDone():0:0 -> invoke
    22:22:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    23:23:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getDone():0:0 -> invoke
    23:23:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    25:25:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getShowValidationErrorDialog():0:0 -> invoke
    25:25:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    26:26:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getShowValidationErrorDialog():0:0 -> invoke
    26:26:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    27:27:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$1$1 -> f.c:
# {"id":"sourceFile","fileName":"CardDetectionScreen.kt"}
    com.truid.android.ui.carddetection.CardDetectionScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lf/g;"}
    void <init>(com.truid.android.ui.carddetection.CardDetectionScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/g;)V"}
    1:1:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setShowScanCardBacksideDialog(boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.scanCardBacksideConfirmed():0 -> invoke
    2:2:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$1$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setShowScanCardBacksideDialog(boolean):0:0 -> invoke
    3:3:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.scanCardBacksideConfirmed():0 -> invoke
    3:3:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$1$1.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setScanningBackSide(boolean):0:0 -> invoke
    4:4:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.scanCardBacksideConfirmed():0 -> invoke
    4:4:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$1$1.invoke():0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$2$1 -> f.d:
# {"id":"sourceFile","fileName":"CardDetectionScreen.kt"}
    com.truid.android.ui.carddetection.CardDetectionScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lf/g;"}
    kotlin.jvm.functions.Function0 $startNextStep -> b
    void <init>(com.truid.android.ui.carddetection.CardDetectionScreenViewModel,kotlin.jvm.functions.Function0) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/g;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getNextStepStarted():0:0 -> invoke
    2:2:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$2$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:boolean com.truid.android.ui.carddetection.CardDetectionScreenViewModel.getNextStepStarted():0:0 -> invoke
    3:3:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$2$1.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$2$1.invoke():0:0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setNextStepStarted(boolean):0:0 -> invoke
    5:5:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$2$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setNextStepStarted(boolean):0:0 -> invoke
    6:6:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$2$1.invoke():0 -> invoke
    6:6:java.lang.Object invoke():0 -> invoke
    7:7:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$2$1.invoke():0:0 -> invoke
    7:7:java.lang.Object invoke():0 -> invoke
    8:8:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3 -> f.e:
# {"id":"sourceFile","fileName":"CardDetectionScreen.kt"}
    com.truid.android.vision.CardDetectionHandler $cardDetectionHandler -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    com.truid.android.ui.carddetection.CardDetectionScreenViewModel $viewModel -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lf/g;"}
    void <init>(com.truid.android.vision.CardDetectionHandler,com.truid.android.ui.carddetection.CardDetectionScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;Lf/g;)V"}
    1:1:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.vision.CardDetectionHandler.reset():0:0 -> invoke
    2:2:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setEnableFlash(boolean):0:0 -> invoke
    4:4:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0 -> invoke
    4:4:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setEnableFlash(boolean):0:0 -> invoke
    5:5:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0 -> invoke
    5:5:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setShowProgressAnimation(boolean):0:0 -> invoke
    6:6:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0 -> invoke
    6:6:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    6:6:java.lang.Object invoke():0 -> invoke
    7:7:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setDone(boolean):0:0 -> invoke
    7:7:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0 -> invoke
    7:7:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    7:7:java.lang.Object invoke():0 -> invoke
    8:8:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setProgress(int):0:0 -> invoke
    8:8:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0 -> invoke
    8:8:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    8:8:java.lang.Object invoke():0 -> invoke
    9:9:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setNextStepStarted(boolean):0:0 -> invoke
    9:9:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0 -> invoke
    9:9:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    9:9:java.lang.Object invoke():0 -> invoke
    10:10:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0:0 -> invoke
    10:10:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    10:10:java.lang.Object invoke():0 -> invoke
    11:11:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setIndicatorColor-8_81llA(long):0:0 -> invoke
    11:11:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0 -> invoke
    11:11:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    11:11:java.lang.Object invoke():0 -> invoke
    12:12:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0:0 -> invoke
    12:12:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    12:12:java.lang.Object invoke():0 -> invoke
    13:13:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    13:13:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0 -> invoke
    13:13:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    13:13:java.lang.Object invoke():0 -> invoke
    14:14:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setRoiPositionOffset(int):0:0 -> invoke
    14:14:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0 -> invoke
    14:14:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    14:14:java.lang.Object invoke():0 -> invoke
    15:15:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setShowScanCardBacksideDialog(boolean):0:0 -> invoke
    15:15:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0 -> invoke
    15:15:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    15:15:java.lang.Object invoke():0 -> invoke
    16:16:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setScanningBackSide(boolean):0:0 -> invoke
    16:16:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0 -> invoke
    16:16:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    16:16:java.lang.Object invoke():0 -> invoke
    17:17:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.setShowValidationErrorDialog(boolean):0:0 -> invoke
    17:17:void com.truid.android.ui.carddetection.CardDetectionScreenViewModel.reset():0 -> invoke
    17:17:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$2$3.invoke():0 -> invoke
    17:17:java.lang.Object invoke():0 -> invoke
    18:18:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$3 -> f.b$d:
# {"id":"sourceFile","fileName":"CardDetectionScreen.kt"}
    com.truid.android.vision.CardDetectionHandler $cardDetectionHandler -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    kotlin.jvm.functions.Function0 $onPassportSelected -> b
    kotlin.jvm.functions.Function0 $startNextStep -> c
    com.truid.android.ui.carddetection.CardDetectionScreenViewModel $viewModel -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lf/g;"}
    int $$changed -> e
    int $$default -> f
    void <init>(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.ui.carddetection.CardDetectionScreenViewModel,int,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lf/g;II)V"}
    1:1:void com.truid.android.ui.carddetection.CardDetectionScreenKt$CardDetectionBody$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.CardDetectionScreenViewModel -> f.g:
# {"id":"sourceFile","fileName":"CardDetectionScreenViewModel.kt"}
    androidx.compose.runtime.MutableState enableFlash$delegate -> a
    androidx.compose.runtime.MutableState progress$delegate -> b
    androidx.compose.runtime.MutableState showProgressAnimation$delegate -> c
    androidx.compose.runtime.MutableState done$delegate -> d
    androidx.compose.runtime.MutableState nextStepStarted$delegate -> e
    androidx.compose.runtime.MutableState indicatorColor$delegate -> f
    androidx.compose.runtime.MutableState userPromptMessage$delegate -> g
    androidx.compose.runtime.MutableState roiPositionOffset$delegate -> h
    androidx.compose.runtime.MutableState showScanCardBacksideDialog$delegate -> i
    androidx.compose.runtime.MutableState scanningBackSide$delegate -> j
    androidx.compose.runtime.MutableState showValidationErrorDialog$delegate -> k
    void <init>() -> <init>
    1:1:int getRoiPositionOffset():0:0 -> a
    2:2:void setPositionOfPassportButton-_kEHs6E(androidx.compose.ui.geometry.Offset):0:0 -> a
com.truid.android.ui.carddetection.CardDetectionScreenViewModel$update$1 -> f.f:
# {"id":"sourceFile","fileName":"CardDetectionScreenViewModel.kt"}
    com.truid.android.ui.carddetection.CardDetectionScreenViewModel$update$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lf/f;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.ui.carddetection.components.ComposableSingletons$UserPromptsKt -> g.a:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    kotlin.jvm.functions.Function2 lambda-1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-2 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    void <clinit>() -> <clinit>
com.truid.android.ui.carddetection.components.ComposableSingletons$UserPromptsKt$lambda-1$1 -> g.a$a:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    com.truid.android.ui.carddetection.components.ComposableSingletons$UserPromptsKt$lambda-1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lg/a$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.carddetection.components.ComposableSingletons$UserPromptsKt$lambda-1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.ComposableSingletons$UserPromptsKt$lambda-2$1 -> g.a$b:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    com.truid.android.ui.carddetection.components.ComposableSingletons$UserPromptsKt$lambda-2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lg/a$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.carddetection.components.ComposableSingletons$UserPromptsKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:int com.truid.android.api.Session.getCurrentStepIndex$sdk_release(java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.ui.carddetection.components.ComposableSingletons$UserPromptsKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.carddetection.components.ComposableSingletons$UserPromptsKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.OverlayKt -> g.b:
# {"id":"sourceFile","fileName":"Overlay.kt"}
    void Overlay-iJQMabo(int,long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int) -> a
com.truid.android.ui.carddetection.components.OverlayKt$Overlay$1$1 -> g.b$a:
# {"id":"sourceFile","fileName":"Overlay.kt"}
    int $verticalOffset -> a
    kotlin.jvm.functions.Function2 $onGloballyPositioned -> b
    long $indicatorColor -> c
    void <init>(int,kotlin.jvm.functions.Function2,long) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJLkotlin/jvm/functions/Function2;)V"}
    1:1:void com.truid.android.ui.carddetection.components.OverlayKt$Overlay$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.OverlayKt$Overlay$2 -> g.b$b:
# {"id":"sourceFile","fileName":"Overlay.kt"}
    int $verticalOffset -> a
    long $indicatorColor -> b
    kotlin.jvm.functions.Function2 $onGloballyPositioned -> c
    int $$changed -> d
    void <init>(int,long,kotlin.jvm.functions.Function2,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.OverlayKt$Overlay$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.PopupDialogKt -> g.c:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    void PopupDialog(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int) -> a
com.truid.android.ui.carddetection.components.PopupDialogKt$PopupDialog$1$1 -> g.c$a:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    kotlin.jvm.functions.Function0 $onConfirm -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.PopupDialogKt$PopupDialog$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.carddetection.components.PopupDialogKt$PopupDialog$2 -> g.c$b:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    kotlin.jvm.functions.Function0 $onConfirm -> a
    int $$dirty -> b
    java.lang.String $confirmButtonText -> c
    void <init>(kotlin.jvm.functions.Function0,int,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.carddetection.components.PopupDialogKt$PopupDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.PopupDialogKt$PopupDialog$2$1$1 -> g.d:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    kotlin.jvm.functions.Function0 $onConfirm -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.PopupDialogKt$PopupDialog$2$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.carddetection.components.PopupDialogKt$PopupDialog$2$2 -> g.e:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    java.lang.String $confirmButtonText -> a
    int $$dirty -> b
    void <init>(java.lang.String,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.PopupDialogKt$PopupDialog$2$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.PopupDialogKt$PopupDialog$3 -> g.c$c:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    java.lang.String $message -> a
    int $$dirty -> b
    void <init>(java.lang.String,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.PopupDialogKt$PopupDialog$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.PopupDialogKt$PopupDialog$4 -> g.c$d:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    java.lang.String $message -> a
    java.lang.String $confirmButtonText -> b
    kotlin.jvm.functions.Function0 $onConfirm -> c
    int $$changed -> d
    int $$default -> e
    void <init>(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,int,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.PopupDialogKt$PopupDialog$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.ProgressAnimationKt -> g.f:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    1:1:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15,"4":16,"5":17},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    13:13:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    14:14:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    15:15:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    16:16:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    17:17:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    2:2:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20,"4":21,"5":22},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    18:18:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    19:19:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    20:20:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    21:21:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    22:22:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    4:4:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    23:23:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    24:24:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    25:25:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    5:5:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    6:6:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":26,"2":27,"3":28,"4":29,"5":30},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    26:26:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    27:27:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    28:28:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    29:29:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    30:30:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    7:7:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    8:8:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":31,"2":32,"3":33,"4":34,"5":35},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    31:31:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    32:32:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    33:33:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    34:34:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    35:35:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    9:9:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":36,"2":37,"3":38},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    36:36:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    37:37:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    38:38:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    10:10:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    11:11:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":39,"2":40,"3":41,"4":42,"5":43,"6":44,"7":45},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    39:39:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    40:40:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    41:41:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    42:42:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    43:43:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    44:44:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    45:45:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    12:12:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$1 -> g.f$a:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lg/f$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke() -> invoke
com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$2$1 -> g.f$b:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    int label -> a
    int $index -> b
    androidx.compose.animation.core.Animatable $animatable -> c
    void <init>(int,androidx.compose.animation.core.Animatable,kotlin.coroutines.Continuation) -> <init>
    kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    1:1:kotlin.coroutines.Continuation com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$2$1.create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> invoke
    1:1:java.lang.Object com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$2$1.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$2$1.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$2$1$1 -> g.f$b$a:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$2$1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lg/f$b$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$2$1$1.invoke(androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$3 -> g.f$c:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    int label -> a
    androidx.compose.animation.core.Animatable $completionAnimatable -> b
    void <init>(androidx.compose.animation.core.Animatable,kotlin.coroutines.Continuation) -> <init>
    kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    1:1:kotlin.coroutines.Continuation com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$3.create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> invoke
    1:1:java.lang.Object com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$3.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$3.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$4$1 -> g.f$d:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    int label -> a
    int $index -> b
    androidx.compose.animation.core.Animatable $animatable -> c
    void <init>(int,androidx.compose.animation.core.Animatable,kotlin.coroutines.Continuation) -> <init>
    kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    1:1:kotlin.coroutines.Continuation com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$4$1.create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> invoke
    1:1:java.lang.Object com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$4$1.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$4$1.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$5$1$1$1 -> g.f$e:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    float $value -> a
    float $distance -> b
    void <init>(float,float) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$5$1$1$1.invoke(androidx.compose.ui.graphics.GraphicsLayerScope):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$6 -> g.f$f:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    float $circleSize -> a
    long $circleColor -> b
    float $spaceBetween -> c
    float $travelDistance -> d
    boolean $completed -> e
    kotlin.jvm.functions.Function0 $onAnimationComplete -> f
    int $$changed -> g
    int $$default -> h
    void <init>(float,long,float,float,boolean,kotlin.jvm.functions.Function0,int,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.ProgressAnimationKt$ProgressAnimation$6.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.ProgressBarKt -> g.g:
# {"id":"sourceFile","fileName":"ProgressBar.kt"}
    1:1:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    17:17:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    20:20:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27,"4":28,"5":29},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    25:25:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    28:28:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":30,"2":31,"3":32},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    30:30:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    31:31:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void com.truid.android.ui.carddetection.components.ProgressBarKt.CardDetectionProgressBar$lambda$4$lambda$2(androidx.compose.runtime.MutableState,int):0:0 -> a
    8:8:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    9:9:int com.truid.android.ui.carddetection.components.ProgressBarKt.CardDetectionProgressBar$lambda$4$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    9:9:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    10:10:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:float com.truid.android.ui.carddetection.components.ProgressBarKt.CardDetectionProgressBar$lambda$4$lambda$3(androidx.compose.runtime.State):0:0 -> a
    11:11:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    12:12:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:int com.truid.android.ui.carddetection.components.ProgressBarKt.CardDetectionProgressBar$lambda$4$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    13:13:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    14:14:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    15:15:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":33,"2":34,"3":35,"4":36,"5":37,"6":38,"7":39},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    33:33:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    36:36:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    38:38:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void CardDetectionProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.carddetection.components.ProgressBarKt$CardDetectionProgressBar$1$progressState$2$1 -> g.g$a:
# {"id":"sourceFile","fileName":"ProgressBar.kt"}
    int $scanProgress -> a
    void <init>(int) -> <init>
    1:1:androidx.compose.runtime.MutableState com.truid.android.ui.carddetection.components.ProgressBarKt$CardDetectionProgressBar$1$progressState$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
com.truid.android.ui.carddetection.components.ProgressBarKt$CardDetectionProgressBar$2 -> g.g$b:
# {"id":"sourceFile","fileName":"ProgressBar.kt"}
    int $scanProgress -> a
    int $$changed -> b
    void <init>(int,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.ProgressBarKt$CardDetectionProgressBar$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.TopBarKt -> g.h:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    1:1:void com.truid.android.ui.carddetection.components.TopBarKt.ProgressBar$lambda$3(androidx.compose.runtime.MutableState,int):0:0 -> a
    1:1:void ProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    2:2:int com.truid.android.ui.carddetection.components.TopBarKt.ProgressBar$lambda$2(androidx.compose.runtime.MutableState):0:0 -> a
    2:2:void ProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    3:3:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    15:15:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20,"4":21,"5":22},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    18:18:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    20:20:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25,"4":26,"5":27},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    23:23:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    25:25:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":28,"2":29,"3":30},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    28:28:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:float com.truid.android.ui.carddetection.components.TopBarKt.ProgressBar$lambda$4(androidx.compose.runtime.State):0:0 -> a
    11:11:void ProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    12:12:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":31,"2":32,"3":33,"4":34,"5":35,"6":36,"7":37},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    31:31:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    36:36:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    1:1:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":12,"2":13,"3":14},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    12:12:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    13:13:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    14:14:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    2:2:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    3:3:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    15:15:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    16:16:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    17:17:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    18:18:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    19:19:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    4:4:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    5:5:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    20:20:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    21:21:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    22:22:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    23:23:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    24:24:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    6:6:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    25:25:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    26:26:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    27:27:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    7:7:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    8:8:android.graphics.Bitmap com.truid.android.api.Session.getClientLogo():0:0 -> b
    8:8:void TopBar(int,androidx.compose.runtime.Composer,int):0 -> b
    9:9:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    10:10:android.graphics.Bitmap com.truid.android.api.Session.getClientLogo():0:0 -> b
    10:10:void TopBar(int,androidx.compose.runtime.Composer,int):0 -> b
    11:11:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
com.truid.android.ui.carddetection.components.TopBarKt$ProgressBar$2 -> g.h$a:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    int $progress -> a
    int $$changed -> b
    void <init>(int,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.TopBarKt$ProgressBar$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.TopBarKt$ProgressBar$progressState$2$1 -> g.h$b:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    int $progress -> a
    void <init>(int) -> <init>
    1:1:androidx.compose.runtime.MutableState com.truid.android.ui.carddetection.components.TopBarKt$ProgressBar$progressState$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
com.truid.android.ui.carddetection.components.TopBarKt$TopBar$2 -> g.h$c:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    int $progress -> a
    int $$changed -> b
    void <init>(int,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.TopBarKt$TopBar$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.UserPromptsKt -> g.j:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    1:1:kotlin.jvm.functions.Function2 com.truid.android.ui.carddetection.components.ComposableSingletons$UserPromptsKt.getLambda-1$sdk_release():0:0 -> a
    1:1:void UserPrompts(java.lang.String,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0 -> a
    2:2:void UserPrompts(java.lang.String,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:kotlin.jvm.functions.Function2 com.truid.android.ui.carddetection.components.ComposableSingletons$UserPromptsKt.getLambda-2$sdk_release():0:0 -> a
    3:3:void UserPrompts(java.lang.String,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0 -> a
    4:4:void UserPrompts(java.lang.String,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$1 -> g.j$a:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    java.lang.String $bottomBarPrompt -> a
    int $$dirty -> b
    void <init>(java.lang.String,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$1$1 -> g.i:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    java.lang.String $bottomBarPrompt -> a
    int $$dirty -> b
    void <init>(java.lang.String,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2 -> g.j$b:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    kotlin.jvm.functions.Function2 $bodyContent -> a
    int $$dirty -> b
    void <init>(kotlin.jvm.functions.Function2,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    10:10:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    11:11:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    12:12:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15,"4":16,"5":17},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    13:13:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    15:15:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    17:17:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20,"4":21,"5":22},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    18:18:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    20:20:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    23:23:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    25:25:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$3 -> g.j$c:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    java.lang.String $bottomBarPrompt -> a
    kotlin.jvm.functions.Function2 $bodyContent -> b
    int $$changed -> c
    int $$default -> d
    void <init>(java.lang.String,kotlin.jvm.functions.Function2,int,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.components.UserPromptsKt$UserPrompts$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.help.CardDetectionHelpScreenKt -> h.a:
# {"id":"sourceFile","fileName":"CardDetectionHelpScreen.kt"}
    1:1:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":8,"2":9,"3":10},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    8:8:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":11,"2":12,"3":13,"4":14,"5":15},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    11:11:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    15:15:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":16,"2":17,"3":18,"4":19,"5":20},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    16:16:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    20:20:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":21,"2":22,"3":23},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    21:21:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void CardDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":31,"2":32,"3":33,"4":34,"5":35},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    31:31:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    25:25:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":36,"2":37,"3":38,"4":39,"5":40},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    36:36:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    38:38:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    40:40:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":41,"2":42,"3":43},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    41:41:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    42:42:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    43:43:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    28:28:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":44,"2":45,"3":46,"4":47,"5":48,"6":49,"7":50},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    44:44:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    45:45:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    46:46:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    47:47:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    48:48:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    49:49:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    50:50:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:void CardDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.carddetection.help.CardDetectionHelpScreenKt$CardDetectionHelpAnimations$2 -> h.a$a:
# {"id":"sourceFile","fileName":"CardDetectionHelpScreen.kt"}
    androidx.compose.ui.Modifier $modifier -> a
    int $$changed -> b
    void <init>(androidx.compose.ui.Modifier,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.help.CardDetectionHelpScreenKt$CardDetectionHelpAnimations$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.carddetection.help.CardDetectionHelpScreenKt$CardDetectionHelpBody$2 -> h.a$b:
# {"id":"sourceFile","fileName":"CardDetectionHelpScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.carddetection.help.CardDetectionHelpScreenKt$CardDetectionHelpBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.ActionButtonKt -> i.a:
# {"id":"sourceFile","fileName":"ActionButton.kt"}
    1:1:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    1:1:void ActionButton-hYmLsZ8(androidx.compose.ui.Modifier,java.lang.String,androidx.compose.ui.graphics.painter.Painter,long,boolean,kotlin.jvm.functions.Function0,boolean,androidx.compose.runtime.Composer,int,int):0 -> a
    2:2:void ActionButton-hYmLsZ8(androidx.compose.ui.Modifier,java.lang.String,androidx.compose.ui.graphics.painter.Painter,long,boolean,kotlin.jvm.functions.Function0,boolean,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:long com.truid.android.ui.theme.ColorKt.getDisabledContentColor():0:0 -> a
    3:3:void ActionButton-hYmLsZ8(androidx.compose.ui.Modifier,java.lang.String,androidx.compose.ui.graphics.painter.Painter,long,boolean,kotlin.jvm.functions.Function0,boolean,androidx.compose.runtime.Composer,int,int):0 -> a
    4:4:void ActionButton-hYmLsZ8(androidx.compose.ui.Modifier,java.lang.String,androidx.compose.ui.graphics.painter.Painter,long,boolean,kotlin.jvm.functions.Function0,boolean,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.components.ActionButtonKt$ActionButton$1 -> i.a$a:
# {"id":"sourceFile","fileName":"ActionButton.kt"}
    com.truid.android.ui.components.ActionButtonKt$ActionButton$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li/a$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke() -> invoke
com.truid.android.ui.components.ActionButtonKt$ActionButton$2 -> i.a$b:
# {"id":"sourceFile","fileName":"ActionButton.kt"}
    java.lang.String $text -> a
    int $$dirty -> b
    androidx.compose.ui.graphics.painter.Painter $painter -> c
    boolean $supportRtl -> d
    void <init>(java.lang.String,int,androidx.compose.ui.graphics.painter.Painter,boolean) -> <init>
    1:1:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12,"4":13,"5":14},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    10:10:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    11:11:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    12:12:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    13:13:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    15:15:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    17:17:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    18:18:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    20:20:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    6:6:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25,"4":26,"5":27,"6":28,"7":29},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    23:23:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    25:25:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    27:27:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    28:28:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.components.ActionButtonKt$ActionButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.ActionButtonKt$ActionButton$3 -> i.a$c:
# {"id":"sourceFile","fileName":"ActionButton.kt"}
    androidx.compose.ui.Modifier $modifier -> a
    java.lang.String $text -> b
    androidx.compose.ui.graphics.painter.Painter $painter -> c
    long $color -> d
    boolean $enabled -> e
    kotlin.jvm.functions.Function0 $onClick -> f
    boolean $supportRtl -> g
    int $$changed -> h
    int $$default -> i
    void <init>(androidx.compose.ui.Modifier,java.lang.String,androidx.compose.ui.graphics.painter.Painter,long,boolean,kotlin.jvm.functions.Function0,boolean,int,int) -> <init>
    1:1:void com.truid.android.ui.components.ActionButtonKt$ActionButton$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.CameraPreviewKt -> i.b:
# {"id":"sourceFile","fileName":"CameraPreview.kt"}
    androidx.camera.core.Camera camera -> a
    androidx.camera.view.PreviewView previewViewGlobal -> b
    boolean isFocusing -> c
    java.util.concurrent.Executor executorSingleThread -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/concurrent/ExecutorService;"}
    int screenHeight -> e
    int screenWidth -> f
    int imageProxyWidth -> g
    int imageProxyHeight -> h
    boolean isFocusRunnig -> i
    void <clinit>() -> <clinit>
    1:1:void CameraPreview(androidx.compose.ui.Modifier,float,androidx.camera.core.CameraSelector,boolean,boolean,int,android.util.Size,float,androidx.camera.view.PreviewView$ScaleType,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int,int):0:0 -> a
    2:2:void enableAutoFocus(androidx.camera.core.Camera,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/camera/core/Camera;)V"}
    3:3:androidx.camera.core.Camera getCamera():0:0 -> a
    4:4:void setFocusing(boolean):0:0 -> a
    5:5:androidx.camera.core.ImageAnalysis setupImageAnalysis(java.util.concurrent.Executor,int,android.util.Size,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/ExecutorService;ILandroid/util/Size;Lkotlin/jvm/functions/Function1;)Landroidx/camera/core/ImageAnalysis;"}
    6:6:void setupImageAnalysis$lambda$1$lambda$0(kotlin.jvm.functions.Function1,androidx.camera.core.ImageProxy):0:0 -> a
    7:7:void startFocusing(androidx.camera.core.Camera,int,int,float,float,kotlin.jvm.functions.Function1):0:0 -> a
    int getImageProxyHeight() -> b
    int getImageProxyWidth() -> c
    androidx.camera.view.PreviewView getPreviewViewGlobal() -> d
    void setFocusRunnig(boolean) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
com.truid.android.ui.components.CameraPreviewKt$CameraPreview$1 -> i.b$a:
# {"id":"sourceFile","fileName":"CameraPreview.kt"}
    com.truid.android.ui.components.CameraPreviewKt$CameraPreview$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li/b$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.components.CameraPreviewKt$CameraPreview$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.CameraPreviewKt$CameraPreview$2 -> i.b$b:
# {"id":"sourceFile","fileName":"CameraPreview.kt"}
    com.truid.android.ui.components.CameraPreviewKt$CameraPreview$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li/b$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.components.CameraPreviewKt$CameraPreview$2.invoke(androidx.compose.ui.layout.LayoutCoordinates):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.CameraPreviewKt$CameraPreview$3 -> i.b$c:
# {"id":"sourceFile","fileName":"CameraPreview.kt"}
    com.truid.android.ui.components.CameraPreviewKt$CameraPreview$3 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li/b$c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.components.CameraPreviewKt$CameraPreview$3.invoke(android.util.Size):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.CameraPreviewKt$CameraPreview$4 -> i.b$d:
# {"id":"sourceFile","fileName":"CameraPreview.kt"}
    android.content.Context $context -> a
    void <init>(android.content.Context) -> <init>
    1:1:void com.truid.android.ui.components.CameraPreviewKt$CameraPreview$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.CameraPreviewKt$CameraPreview$4$1 -> i.c:
# {"id":"sourceFile","fileName":"CameraPreview.kt"}
    android.content.Context $context -> a
    void <init>(android.content.Context) -> <init>
    1:1:void com.truid.android.ui.components.CameraPreviewKt$CameraPreview$4$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.components.CameraPreviewKt$CameraPreview$5 -> i.b$e:
# {"id":"sourceFile","fileName":"CameraPreview.kt"}
    androidx.compose.ui.Modifier $modifier -> a
    kotlin.jvm.functions.Function1 $dimensionsSetCallback -> b
    float $zoomRatio -> c
    boolean $enableFlash -> d
    android.content.Context $context -> e
    androidx.camera.view.PreviewView$ScaleType $previewScaleType -> f
    android.util.Size $resolution -> g
    int $imageAnalysisFormat -> h
    float $imageAnalysisResolutionFactor -> i
    kotlin.jvm.functions.Function1 $imageAnalysisCallback -> j
    androidx.camera.core.CameraSelector $cameraSelector -> k
    kotlin.jvm.functions.Function1 $resolutionSetCallback -> l
    boolean $enableAutoFocus -> m
    void <init>(androidx.compose.ui.Modifier,kotlin.jvm.functions.Function1,float,boolean,android.content.Context,androidx.camera.view.PreviewView$ScaleType,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,boolean) -> <init>
    1:1:void com.truid.android.ui.components.CameraPreviewKt$CameraPreview$5.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:androidx.camera.core.Camera com.truid.android.ui.components.CameraPreviewKt.getCamera():0:0 -> invoke
    2:2:void com.truid.android.ui.components.CameraPreviewKt$CameraPreview$5.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.components.CameraPreviewKt$CameraPreview$5.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.components.CameraPreviewKt.toggleFlash(boolean):0:0 -> invoke
    4:4:void com.truid.android.ui.components.CameraPreviewKt$CameraPreview$5.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.components.CameraPreviewKt$CameraPreview$5.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.CameraPreviewKt$CameraPreview$5$1 -> i.d:
# {"id":"sourceFile","fileName":"CameraPreview.kt"}
    androidx.camera.view.PreviewView$ScaleType $previewScaleType -> a
    com.google.common.util.concurrent.ListenableFuture $cameraProviderFuture -> b
    android.util.Size $resolution -> c
    int $imageAnalysisFormat -> d
    float $imageAnalysisResolutionFactor -> e
    kotlin.jvm.functions.Function1 $imageAnalysisCallback -> f
    androidx.lifecycle.LifecycleOwner $lifecycleOwner -> g
    androidx.camera.core.CameraSelector $cameraSelector -> h
    kotlin.jvm.functions.Function1 $resolutionSetCallback -> i
    float $zoomRatio -> j
    boolean $enableAutoFocus -> k
    boolean $enableFlash -> l
    void <init>(androidx.camera.view.PreviewView$ScaleType,com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean) -> <init>
    1:1:androidx.camera.view.PreviewView invoke(android.content.Context):0:0 -> a
    2:2:java.util.concurrent.Executor com.truid.android.ui.components.CameraPreviewKt.getExecutorSingleThread():0:0 -> a
    2:2:void invoke$lambda$1(com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean,androidx.camera.view.PreviewView):0 -> a
    3:3:void invoke$lambda$1(com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean,androidx.camera.view.PreviewView):0:0 -> a
    4:4:androidx.camera.core.ImageAnalysis com.truid.android.ui.components.CameraPreviewKt.access$setupImageAnalysis(java.util.concurrent.Executor,int,android.util.Size,kotlin.jvm.functions.Function1):0:0 -> a
    4:4:void invoke$lambda$1(com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean,androidx.camera.view.PreviewView):0 -> a
    5:5:void invoke$lambda$1(com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean,androidx.camera.view.PreviewView):0:0 -> a
    6:6:void com.truid.android.ui.components.CameraPreviewKt.setCamera(androidx.camera.core.Camera):0:0 -> a
    6:6:void invoke$lambda$1(com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean,androidx.camera.view.PreviewView):0 -> a
    7:7:void invoke$lambda$1(com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean,androidx.camera.view.PreviewView):0:0 -> a
    8:8:androidx.camera.core.Camera com.truid.android.ui.components.CameraPreviewKt.getCamera():0:0 -> a
    8:8:void invoke$lambda$1(com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean,androidx.camera.view.PreviewView):0 -> a
    9:9:void invoke$lambda$1(com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean,androidx.camera.view.PreviewView):0:0 -> a
    10:10:androidx.camera.core.Camera com.truid.android.ui.components.CameraPreviewKt.getCamera():0:0 -> a
    10:10:void invoke$lambda$1(com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean,androidx.camera.view.PreviewView):0 -> a
    11:11:void invoke$lambda$1(com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean,androidx.camera.view.PreviewView):0:0 -> a
    12:12:void com.truid.android.ui.components.CameraPreviewKt.toggleFlash(boolean):0:0 -> a
    12:12:void invoke$lambda$1(com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean,androidx.camera.view.PreviewView):0 -> a
    13:13:void com.truid.android.ui.components.CameraPreviewKt.setPreviewViewGlobal(androidx.camera.view.PreviewView):0:0 -> a
    13:13:void invoke$lambda$1(com.google.common.util.concurrent.ListenableFuture,android.util.Size,int,float,kotlin.jvm.functions.Function1,androidx.lifecycle.LifecycleOwner,androidx.camera.core.CameraSelector,kotlin.jvm.functions.Function1,float,boolean,boolean,androidx.camera.view.PreviewView):0 -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.ui.components.CameraPreviewKt$CameraPreview$6 -> i.b$f:
# {"id":"sourceFile","fileName":"CameraPreview.kt"}
    androidx.compose.ui.Modifier $modifier -> a
    float $zoomRatio -> b
    androidx.camera.core.CameraSelector $cameraSelector -> c
    boolean $enableAutoFocus -> d
    boolean $enableFlash -> e
    int $imageAnalysisFormat -> f
    android.util.Size $resolution -> g
    float $imageAnalysisResolutionFactor -> h
    androidx.camera.view.PreviewView$ScaleType $previewScaleType -> i
    kotlin.jvm.functions.Function1 $imageAnalysisCallback -> j
    kotlin.jvm.functions.Function1 $dimensionsSetCallback -> k
    kotlin.jvm.functions.Function1 $resolutionSetCallback -> l
    int $$changed -> m
    int $$changed1 -> n
    int $$default -> o
    void <init>(androidx.compose.ui.Modifier,float,androidx.camera.core.CameraSelector,boolean,boolean,int,android.util.Size,float,androidx.camera.view.PreviewView$ScaleType,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,int,int) -> <init>
    1:1:void com.truid.android.ui.components.CameraPreviewKt$CameraPreview$6.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.CameraPreviewKt$startFocusing$1 -> i.b$g:
# {"id":"sourceFile","fileName":"CameraPreview.kt"}
    kotlin.jvm.functions.Function1 $focusCallback -> a
    void <init>(kotlin.jvm.functions.Function1) -> <init>
    void onSuccess(androidx.camera.core.FocusMeteringResult) -> a
    void onFailure(java.lang.Throwable) -> onFailure
    void onSuccess(java.lang.Object) -> onSuccess
com.truid.android.ui.components.CardWithBackdropKt -> i.e:
# {"id":"sourceFile","fileName":"CardWithBackdrop.kt"}
    1:1:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    15:15:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    20:20:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    25:25:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    6:6:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0 -> a
    7:7:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":28,"2":29,"3":30},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    28:28:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":31,"2":32,"3":33,"4":34,"5":35},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    31:31:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":36,"2":37,"3":38,"4":39,"5":40},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    36:36:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    38:38:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    40:40:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":41,"2":42,"3":43},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    41:41:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    42:42:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    43:43:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.components.CardWithBackdropKt$CardWithBackdrop$1$1$1 -> i.e$a:
# {"id":"sourceFile","fileName":"CardWithBackdrop.kt"}
    long $backgroundColor -> a
    void <init>(long) -> <init>
    1:1:void com.truid.android.ui.components.CardWithBackdropKt$CardWithBackdrop$1$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> invoke
    2:2:void com.truid.android.ui.components.CardWithBackdropKt$CardWithBackdrop$1$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.components.CardWithBackdropKt$CardWithBackdrop$1$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.CardWithBackdropKt$CardWithBackdrop$1$2$1 -> i.e$b:
# {"id":"sourceFile","fileName":"CardWithBackdrop.kt"}
    kotlin.jvm.functions.Function2 $content -> a
    int $$dirty -> b
    void <init>(kotlin.jvm.functions.Function2,int) -> <init>
    1:1:void com.truid.android.ui.components.CardWithBackdropKt$CardWithBackdrop$1$2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.CardWithBackdropKt$CardWithBackdrop$2 -> i.e$c:
# {"id":"sourceFile","fileName":"CardWithBackdrop.kt"}
    kotlin.jvm.functions.Function2 $content -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function2,int) -> <init>
    1:1:void com.truid.android.ui.components.CardWithBackdropKt$CardWithBackdrop$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.ChoiceButtonKt -> i.f:
# {"id":"sourceFile","fileName":"ChoiceButton.kt"}
    1:1:long com.truid.android.ui.theme.ColorKt.getHighlightColor():0:0 -> a
    1:1:void ChoiceButton(java.lang.String,boolean,androidx.compose.ui.Modifier,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0 -> a
    2:2:void ChoiceButton(java.lang.String,boolean,androidx.compose.ui.Modifier,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    3:3:void ChoiceButton(java.lang.String,boolean,androidx.compose.ui.Modifier,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0 -> a
    4:4:void ChoiceButton(java.lang.String,boolean,androidx.compose.ui.Modifier,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.components.ChoiceButtonKt$ChoiceButton$1 -> i.f$a:
# {"id":"sourceFile","fileName":"ChoiceButton.kt"}
    com.truid.android.ui.components.ChoiceButtonKt$ChoiceButton$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li/f$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke() -> invoke
com.truid.android.ui.components.ChoiceButtonKt$ChoiceButton$2 -> i.f$b:
# {"id":"sourceFile","fileName":"ChoiceButton.kt"}
    java.lang.String $text -> a
    int $$dirty -> b
    void <init>(java.lang.String,int) -> <init>
    1:1:void com.truid.android.ui.components.ChoiceButtonKt$ChoiceButton$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.ChoiceButtonKt$ChoiceButton$3 -> i.f$c:
# {"id":"sourceFile","fileName":"ChoiceButton.kt"}
    java.lang.String $text -> a
    boolean $selected -> b
    androidx.compose.ui.Modifier $modifier -> c
    kotlin.jvm.functions.Function0 $onClick -> d
    int $$changed -> e
    int $$default -> f
    void <init>(java.lang.String,boolean,androidx.compose.ui.Modifier,kotlin.jvm.functions.Function0,int,int) -> <init>
    1:1:void com.truid.android.ui.components.ChoiceButtonKt$ChoiceButton$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.ComposableSingletons$TopBarKt -> i.g:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    kotlin.jvm.functions.Function2 lambda-1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-2 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    void <clinit>() -> <clinit>
    kotlin.jvm.functions.Function2 getLambda-1$sdk_release() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 getLambda-2$sdk_release() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/compose/runtime/internal/ComposableLambda;"}
com.truid.android.ui.components.ComposableSingletons$TopBarKt$lambda-1$1 -> i.g$a:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    com.truid.android.ui.components.ComposableSingletons$TopBarKt$lambda-1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li/g$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.components.ComposableSingletons$TopBarKt$lambda-1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.ComposableSingletons$TopBarKt$lambda-2$1 -> i.g$b:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    com.truid.android.ui.components.ComposableSingletons$TopBarKt$lambda-2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li/g$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.components.ComposableSingletons$TopBarKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:android.graphics.Bitmap com.truid.android.api.Session.getClientLogo():0:0 -> invoke
    2:2:void com.truid.android.ui.components.ComposableSingletons$TopBarKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.components.ComposableSingletons$TopBarKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:android.graphics.Bitmap com.truid.android.api.Session.getClientLogo():0:0 -> invoke
    4:4:void com.truid.android.ui.components.ComposableSingletons$TopBarKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.components.ComposableSingletons$TopBarKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.HeaderKt -> i.h:
# {"id":"sourceFile","fileName":"Header.kt"}
    1:1:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    1:1:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0 -> a
    2:2:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":12,"2":13,"3":14},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    12:12:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    15:15:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    20:20:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    25:25:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":28,"2":29,"3":30,"4":31,"5":32,"6":33,"7":34},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    28:28:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    31:31:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void Header(java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.components.HeaderKt$Header$2 -> i.h$a:
# {"id":"sourceFile","fileName":"Header.kt"}
    java.lang.String $text -> a
    int $$changed -> b
    void <init>(java.lang.String,int) -> <init>
    1:1:void com.truid.android.ui.components.HeaderKt$Header$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.HelpButtonKt -> i.i:
# {"id":"sourceFile","fileName":"HelpButton.kt"}
    1:1:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    1:1:void HelpButton(java.lang.String,androidx.compose.ui.Modifier,androidx.compose.ui.graphics.painter.Painter,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0 -> a
    2:2:void HelpButton(java.lang.String,androidx.compose.ui.Modifier,androidx.compose.ui.graphics.painter.Painter,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.components.HelpButtonKt$HelpButton$1 -> i.i$a:
# {"id":"sourceFile","fileName":"HelpButton.kt"}
    java.lang.String $text -> a
    int $$dirty -> b
    androidx.compose.ui.graphics.painter.Painter $painter -> c
    void <init>(java.lang.String,int,androidx.compose.ui.graphics.painter.Painter) -> <init>
    1:1:void com.truid.android.ui.components.HelpButtonKt$HelpButton$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.HelpButtonKt$HelpButton$2 -> i.i$b:
# {"id":"sourceFile","fileName":"HelpButton.kt"}
    java.lang.String $text -> a
    androidx.compose.ui.Modifier $modifier -> b
    androidx.compose.ui.graphics.painter.Painter $painter -> c
    kotlin.jvm.functions.Function0 $onClick -> d
    int $$changed -> e
    int $$default -> f
    void <init>(java.lang.String,androidx.compose.ui.Modifier,androidx.compose.ui.graphics.painter.Painter,kotlin.jvm.functions.Function0,int,int) -> <init>
    1:1:void com.truid.android.ui.components.HelpButtonKt$HelpButton$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.TopBarKt -> i.j:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    1:1:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;JZILx/b;Landroidx/compose/runtime/Composer;II)V"}
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":27,"2":28,"3":29},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    27:27:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    28:28:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    29:29:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    2:2:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":30,"2":31,"3":32,"4":33,"5":34},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    30:30:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    31:31:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    32:32:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    33:33:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    34:34:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    4:4:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    5:5:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":35,"2":36,"3":37,"4":38,"5":39},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    35:35:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    36:36:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    37:37:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    38:38:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    39:39:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    6:6:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":40,"2":41,"3":42},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    40:40:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    41:41:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    42:42:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    7:7:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    8:8:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":43,"2":44,"3":45,"4":46,"5":47},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    43:43:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    44:44:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    45:45:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    46:46:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    47:47:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    9:9:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    10:10:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":48,"2":49,"3":50,"4":51,"5":52},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    48:48:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    49:49:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    50:50:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    51:51:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    52:52:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    11:11:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":53,"2":54,"3":55},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    53:53:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    54:54:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    55:55:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    12:12:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    13:13:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":56,"2":57,"3":58},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    56:56:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    57:57:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    58:58:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    14:14:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    15:15:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":59,"2":60,"3":61,"4":62,"5":63},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    59:59:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    60:60:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    61:61:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    62:62:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    63:63:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    16:16:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    17:17:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":64,"2":65,"3":66,"4":67,"5":68},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    64:64:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    65:65:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    66:66:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    67:67:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    68:68:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    18:18:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":69,"2":70,"3":71},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    69:69:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    70:70:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    71:71:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    19:19:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    20:20:void com.truid.android.ui.components.TopBarKt.TopBar_FU0evQE$lambda$7$lambda$6$lambda$4(androidx.compose.runtime.MutableState,int):0:0 -> a
    20:20:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    21:21:int com.truid.android.ui.components.TopBarKt.TopBar_FU0evQE$lambda$7$lambda$6$lambda$3(androidx.compose.runtime.MutableState):0:0 -> a
    21:21:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    22:22:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    23:23:float com.truid.android.ui.components.TopBarKt.TopBar_FU0evQE$lambda$7$lambda$6$lambda$5(androidx.compose.runtime.State):0:0 -> a
    23:23:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    24:24:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    25:25:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":72,"2":73,"3":74,"4":75,"5":76,"6":77,"7":78},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    72:72:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    73:73:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    74:74:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    75:75:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    76:76:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    77:77:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    78:78:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    26:26:void TopBar-FU0evQE(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.components.TopBarKt$TopBar$1 -> i.j$a:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    com.truid.android.ui.components.TopBarKt$TopBar$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Li/j$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke() -> invoke
com.truid.android.ui.components.TopBarKt$TopBar$2$1 -> i.j$b:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    void <init>(com.truid.android.ui.utils.LayoutViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;)V"}
    1:1:void com.truid.android.ui.components.TopBarKt$TopBar$2$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.utils.LayoutViewModel.setScaffoldTopBarBottom(float):0:0 -> invoke
    2:2:void com.truid.android.ui.components.TopBarKt$TopBar$2$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.utils.LayoutViewModel.setScaffoldTopBarBottom(float):0:0 -> invoke
    3:3:void com.truid.android.ui.components.TopBarKt$TopBar$2$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.components.TopBarKt$TopBar$2$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0:0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.utils.LayoutViewModel.setScaffoldWidth(float):0:0 -> invoke
    5:5:void com.truid.android.ui.components.TopBarKt$TopBar$2$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:void com.truid.android.ui.utils.LayoutViewModel.setScaffoldWidth(float):0:0 -> invoke
    6:6:void com.truid.android.ui.components.TopBarKt$TopBar$2$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.components.TopBarKt$TopBar$3$2$progressState$2$1 -> i.j$c:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    int $progress -> a
    void <init>(int) -> <init>
    1:1:androidx.compose.runtime.MutableState com.truid.android.ui.components.TopBarKt$TopBar$3$2$progressState$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
com.truid.android.ui.components.TopBarKt$TopBar$4 -> i.j$d:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    kotlin.jvm.functions.Function0 $onNavigateUp -> a
    kotlin.jvm.functions.Function0 $onHelp -> b
    long $backgroundColor -> c
    boolean $progressVisible -> d
    int $progress -> e
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    int $$changed -> g
    int $$default -> h
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,long,boolean,int,com.truid.android.ui.utils.LayoutViewModel,int,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;JZILx/b;II)V"}
    1:1:void com.truid.android.ui.components.TopBarKt$TopBar$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.ComposableSingletons$FaceDetectionScreenKt -> j.a:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function3 lambda-1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-2 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    void <clinit>() -> <clinit>
com.truid.android.ui.facedetection.ComposableSingletons$FaceDetectionScreenKt$lambda-1$1 -> j.a$a:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    com.truid.android.ui.facedetection.ComposableSingletons$FaceDetectionScreenKt$lambda-1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/a$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.facedetection.ComposableSingletons$FaceDetectionScreenKt$lambda-1$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.ComposableSingletons$FaceDetectionScreenKt$lambda-2$1 -> j.a$b:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    com.truid.android.ui.facedetection.ComposableSingletons$FaceDetectionScreenKt$lambda-2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/a$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.facedetection.ComposableSingletons$FaceDetectionScreenKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt -> j.c:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    1:1:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/j0;Lx/b;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V"}
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":41,"2":42,"3":43,"4":44,"5":45},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    41:41:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    42:42:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    43:43:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    44:44:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    45:45:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":46,"2":47,"3":48,"4":49,"5":50},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    46:46:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    47:47:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    48:48:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    49:49:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    50:50:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":51,"2":52,"3":53},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    51:51:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    52:52:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    53:53:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:com.truid.android.vision.FaceLiveness$DetectionStatus com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    6:6:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    7:7:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:com.truid.android.vision.FaceLiveness$DetectionStatus com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    8:8:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    9:9:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:boolean com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$7(androidx.compose.runtime.MutableState):0:0 -> a
    10:10:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    11:11:boolean com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$13(androidx.compose.runtime.MutableState):0:0 -> a
    11:11:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    12:12:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:boolean com.truid.android.api.Session.getPassiveLiveness():0:0 -> a
    13:13:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    14:14:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    15:15:com.truid.android.vision.FaceLiveness$DetectionStatus com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    15:15:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    16:16:boolean com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$10(androidx.compose.runtime.MutableState):0:0 -> a
    16:16:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    17:17:void com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$11(androidx.compose.runtime.MutableState,boolean):0:0 -> a
    17:17:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    18:18:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:com.truid.android.vision.FaceLiveness$DetectionStatus com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    19:19:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    20:20:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:com.truid.android.vision.FaceLiveness$DetectionStatus com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    21:21:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    22:22:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:com.truid.android.Face com.truid.android.UserData.getFace():0:0 -> a
    23:23:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    24:24:android.graphics.Bitmap com.truid.android.Face.getFaceImage():0:0 -> a
    24:24:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    25:25:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:boolean com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$13(androidx.compose.runtime.MutableState):0:0 -> a
    26:26:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    27:27:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    28:28:com.truid.android.vision.FaceLiveness$DetectionStatus com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    28:28:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    29:29:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:com.truid.android.vision.FaceLiveness$DetectionStatus com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    30:30:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    31:31:java.lang.String com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    31:31:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    32:32:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:com.truid.android.vision.FaceLiveness$DetectionStatus com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    33:33:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    34:34:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:com.truid.android.vision.FaceLiveness$DetectionStatus com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    35:35:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    36:36:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:com.truid.android.vision.FaceLiveness$DetectionStatus com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    37:37:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    38:38:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":54,"2":55,"3":56,"4":57,"5":58,"6":59,"7":60},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    54:54:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    55:55:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    56:56:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    57:57:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    58:58:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    59:59:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    60:60:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    40:40:void FaceDetectionBody(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    61:61:void OvalOverlay-sW7UJKQ(com.truid.android.ui.utils.LayoutViewModel,long,boolean,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;JZLkotlin/jvm/functions/Function2;Landroidx/compose/runtime/Composer;II)V"}
    62:62:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":71,"2":72,"3":73},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    71:71:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    72:72:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    73:73:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    63:63:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    64:64:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":74,"2":75,"3":76,"4":77,"5":78},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    74:74:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    75:75:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    76:76:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    77:77:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    78:78:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    65:65:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    66:66:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":79,"2":80,"3":81,"4":82,"5":83},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    79:79:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    80:80:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    81:81:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    82:82:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    83:83:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    67:67:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":84,"2":85,"3":86},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    84:84:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    85:85:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    86:86:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    68:68:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    69:69:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":87,"2":88,"3":89,"4":90,"5":91,"6":92,"7":93},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    87:87:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    88:88:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    89:89:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    90:90:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    91:91:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    92:92:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    93:93:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    70:70:void PoseArrow(java.lang.String,androidx.compose.runtime.Composer,int,int):0:0 -> a
    94:94:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":103,"2":104,"3":105},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    103:103:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    104:104:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    105:105:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    95:95:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    96:96:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":106,"2":107,"3":108,"4":109,"5":110},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    106:106:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    107:107:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    108:108:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    109:109:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    110:110:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    97:97:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    98:98:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":111,"2":112,"3":113,"4":114,"5":115},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    111:111:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    112:112:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    113:113:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    114:114:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    115:115:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    99:99:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":116,"2":117,"3":118},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    116:116:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    117:117:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    118:118:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    100:100:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    101:101:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":119,"2":120,"3":121,"4":122,"5":123,"6":124,"7":125},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    119:119:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    120:120:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    121:121:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    122:122:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    123:123:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    124:124:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    125:125:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    102:102:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    126:126:void ScaffoldOverlay(com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.vision.FaceLiveness$DetectionStatus,java.lang.String,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Ly/j0$a;Ljava/lang/String;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V"}
    127:127:kotlin.jvm.functions.Function2 com.truid.android.ui.facedetection.ComposableSingletons$FaceDetectionScreenKt.getLambda-2$sdk_release():0:0 -> a
    127:127:void TryAgainDialog(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    128:128:void TryAgainDialog(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$1 -> j.c$a:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    com.truid.android.vision.FaceLiveness $faceLiveness -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0;"}
    androidx.compose.runtime.MutableState $detectionStatus$delegate -> b
    androidx.compose.runtime.MutableState $showingPrompt$delegate -> c
    void <init>(com.truid.android.vision.FaceLiveness,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/j0;Landroidx/compose/runtime/MutableState;Landroidx/compose/runtime/MutableState;)V"}
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$1$1 -> j.b:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    androidx.compose.runtime.MutableState $detectionStatus$delegate -> a
    androidx.compose.runtime.MutableState $showingPrompt$delegate -> b
    void <init>(androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$1$1.invoke(com.truid.android.vision.FaceLiveness$DetectionStatus,java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$5(androidx.compose.runtime.MutableState,com.truid.android.vision.FaceLiveness$DetectionStatus):0:0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt.access$FaceDetectionBody$lambda$5(androidx.compose.runtime.MutableState,com.truid.android.vision.FaceLiveness$DetectionStatus):0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$1$1.invoke(com.truid.android.vision.FaceLiveness$DetectionStatus,java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$1$1.invoke(com.truid.android.vision.FaceLiveness$DetectionStatus,java.lang.String):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:boolean com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$13(androidx.compose.runtime.MutableState):0:0 -> invoke
    4:4:boolean com.truid.android.ui.facedetection.FaceDetectionScreenKt.access$FaceDetectionBody$lambda$13(androidx.compose.runtime.MutableState):0 -> invoke
    4:4:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$1$1.invoke(com.truid.android.vision.FaceLiveness$DetectionStatus,java.lang.String):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$1$1.invoke(com.truid.android.vision.FaceLiveness$DetectionStatus,java.lang.String):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:com.truid.android.vision.FaceLiveness$DetectionStatus com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> invoke
    6:6:com.truid.android.vision.FaceLiveness$DetectionStatus com.truid.android.ui.facedetection.FaceDetectionScreenKt.access$FaceDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0 -> invoke
    6:6:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$1$1.invoke(com.truid.android.vision.FaceLiveness$DetectionStatus,java.lang.String):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$1$1.invoke(com.truid.android.vision.FaceLiveness$DetectionStatus,java.lang.String):0:0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$14(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    8:8:void com.truid.android.ui.facedetection.FaceDetectionScreenKt.access$FaceDetectionBody$lambda$14(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    8:8:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$1$1.invoke(com.truid.android.vision.FaceLiveness$DetectionStatus,java.lang.String):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$2 -> j.c$b:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    com.truid.android.vision.FaceLiveness $faceLiveness -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0;"}
    void <init>(com.truid.android.vision.FaceLiveness) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/j0;)V"}
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$2.invoke(androidx.compose.ui.layout.LayoutCoordinates):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$5$1 -> j.c$c:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    androidx.compose.runtime.MutableState $showingPrompt$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$5$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$14(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt.access$FaceDetectionBody$lambda$14(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$5$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$6 -> j.c$d:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    com.truid.android.vision.FaceLiveness $faceLiveness -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0;"}
    void <init>(com.truid.android.vision.FaceLiveness) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/j0;)V"}
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$6.invoke-0a9Yr6o(long,long):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$7$1 -> j.c$e:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    androidx.compose.runtime.MutableState $startAnalysis$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$7$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt.FaceDetectionBody$lambda$8(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt.access$FaceDetectionBody$lambda$8(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$1$7$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$2 -> j.c$f:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    com.truid.android.vision.FaceLiveness $faceLiveness -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0;"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    kotlin.jvm.functions.Function0 $onNext -> c
    kotlin.jvm.functions.Function0 $onHelp -> d
    int $$changed -> e
    void <init>(com.truid.android.vision.FaceLiveness,com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/j0;Lx/b;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;I)V"}
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$FaceDetectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$1 -> j.c$g:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    int label -> a
    androidx.compose.animation.core.Animatable $factorAnimatable -> b
    void <init>(androidx.compose.animation.core.Animatable,kotlin.coroutines.Continuation) -> <init>
    kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    1:1:kotlin.coroutines.Continuation com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$1.create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> invoke
    1:1:java.lang.Object com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$1.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$1.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$2 -> j.c$h:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    androidx.compose.animation.core.Animatable $factorAnimatable -> a
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    long $ovalColor -> c
    kotlin.jvm.functions.Function2 $onGloballyPositioned -> d
    void <init>(androidx.compose.animation.core.Animatable,com.truid.android.ui.utils.LayoutViewModel,long,kotlin.jvm.functions.Function2) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/animation/core/Animatable;Lx/b;JLkotlin/jvm/functions/Function2;)V"}
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:float com.truid.android.ui.utils.LayoutViewModel.getScaffoldTopBarBottom():0:0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:float com.truid.android.ui.utils.LayoutViewModel.getScaffoldTopBarBottom():0:0 -> invoke
    3:3:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:float com.truid.android.ui.utils.LayoutViewModel.getBottomContentTop():0:0 -> invoke
    5:5:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:float com.truid.android.ui.utils.LayoutViewModel.getBottomContentTop():0:0 -> invoke
    6:6:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:float com.truid.android.ui.utils.LayoutViewModel.getScaffoldTopBarBottom():0:0 -> invoke
    8:8:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:java.lang.Object invoke(java.lang.Object):0 -> invoke
    9:9:float com.truid.android.ui.utils.LayoutViewModel.getScaffoldTopBarBottom():0:0 -> invoke
    9:9:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$2.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$3 -> j.c$i:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    long $ovalColor -> b
    boolean $closeOval -> c
    kotlin.jvm.functions.Function2 $onGloballyPositioned -> d
    int $$changed -> e
    int $$default -> f
    void <init>(com.truid.android.ui.utils.LayoutViewModel,long,boolean,kotlin.jvm.functions.Function2,int,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;JZLkotlin/jvm/functions/Function2;II)V"}
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$OvalOverlay$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$PoseArrow$2 -> j.c$j:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    java.lang.String $direction -> a
    int $$changed -> b
    int $$default -> c
    void <init>(java.lang.String,int,int) -> <init>
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$PoseArrow$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$ProgressDialog$2 -> j.c$k:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    int $$changed -> a
    void <init>(int) -> <init>
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ProgressDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$1 -> j.c$l:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onHelp -> a
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    int $$dirty -> c
    void <init>(kotlin.jvm.functions.Function0,com.truid.android.ui.utils.LayoutViewModel,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lkotlin/jvm/functions/Function0;Lx/b;I)V"}
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:int com.truid.android.api.Session.getCurrentStepIndex$sdk_release(java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2 -> j.c$m:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    kotlin.jvm.functions.Function0 $onGloballyPositioned -> b
    com.truid.android.vision.FaceLiveness$DetectionStatus $detectionStatus -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    java.lang.String $debugString -> d
    void <init>(com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,int,com.truid.android.vision.FaceLiveness$DetectionStatus,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lkotlin/jvm/functions/Function0;ILy/j0$a;Ljava/lang/String;)V"}
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":12,"2":13,"3":14},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    12:12:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    13:13:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    15:15:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    17:17:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    18:18:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    20:20:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    25:25:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    27:27:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":28,"2":29,"3":30,"4":31,"5":32,"6":33,"7":34},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    28:28:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    30:30:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    32:32:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    33:33:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    34:34:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2$1$1$1 -> j.d:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    kotlin.jvm.functions.Function0 $onGloballyPositioned -> b
    void <init>(com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2$1$1$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.utils.LayoutViewModel.setBottomContentTop(float):0:0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2$1$1$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.utils.LayoutViewModel.setBottomContentTop(float):0:0 -> invoke
    3:3:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2$1$1$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2$1$1$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0:0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$2$1$2 -> j.e:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    com.truid.android.vision.FaceLiveness$DetectionStatus $detectionStatus -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    java.lang.String $debugString -> b
    void <init>(com.truid.android.vision.FaceLiveness$DetectionStatus,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/j0$a;Ljava/lang/String;)V"}
    void invoke(androidx.compose.runtime.Composer,int) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$3 -> j.c$n:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    kotlin.jvm.functions.Function0 $onNext -> b
    kotlin.jvm.functions.Function0 $onHelp -> c
    com.truid.android.vision.FaceLiveness$DetectionStatus $detectionStatus -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    java.lang.String $debugString -> e
    kotlin.jvm.functions.Function0 $onGloballyPositioned -> f
    int $$changed -> g
    void <init>(com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,com.truid.android.vision.FaceLiveness$DetectionStatus,java.lang.String,kotlin.jvm.functions.Function0,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Ly/j0$a;Ljava/lang/String;Lkotlin/jvm/functions/Function0;I)V"}
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$ScaffoldOverlay$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$TryAgainDialog$1 -> j.c$o:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onDismiss -> a
    int $$dirty -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$TryAgainDialog$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:kotlin.jvm.functions.Function3 com.truid.android.ui.facedetection.ComposableSingletons$FaceDetectionScreenKt.getLambda-1$sdk_release():0:0 -> invoke
    2:2:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$TryAgainDialog$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$TryAgainDialog$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.FaceDetectionScreenKt$TryAgainDialog$2 -> j.c$p:
# {"id":"sourceFile","fileName":"FaceDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onDismiss -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.facedetection.FaceDetectionScreenKt$TryAgainDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.help.FaceDetectionHelpScreenKt -> k.a:
# {"id":"sourceFile","fileName":"FaceDetectionHelpScreen.kt"}
    1:1:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    13:13:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    15:15:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":16,"2":17,"3":18,"4":19,"5":20},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    16:16:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    20:20:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":21,"2":22,"3":23,"4":24,"5":25},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    21:21:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    25:25:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":26,"2":27,"3":28},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    26:26:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    28:28:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":29,"2":30,"3":31,"4":32,"5":33},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    29:29:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    31:31:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":34,"2":35,"3":36,"4":37,"5":38},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    34:34:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    36:36:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    38:38:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":39,"2":40,"3":41},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    39:39:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    40:40:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    41:41:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void FaceDetectionHelpAnimations(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int):0:0 -> a
    42:42:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":49,"2":50,"3":51,"4":52,"5":53},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    49:49:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    50:50:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    51:51:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    52:52:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    53:53:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    43:43:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    44:44:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":54,"2":55,"3":56,"4":57,"5":58},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    54:54:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    55:55:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    56:56:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    57:57:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    58:58:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    45:45:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":59,"2":60,"3":61},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    59:59:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    60:60:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    61:61:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    46:46:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    47:47:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":62,"2":63,"3":64,"4":65,"5":66,"6":67,"7":68},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    62:62:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    63:63:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    64:64:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    65:65:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    66:66:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    67:67:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    68:68:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    48:48:void FaceDetectionHelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.facedetection.help.FaceDetectionHelpScreenKt$FaceDetectionHelpAnimations$1$1 -> k.a$a:
# {"id":"sourceFile","fileName":"FaceDetectionHelpScreen.kt"}
    androidx.compose.ui.Modifier $modifier -> a
    void <init>(androidx.compose.ui.Modifier) -> <init>
    1:1:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":8,"2":9,"3":10,"4":11,"5":12},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    8:8:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15,"4":16,"5":17},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    13:13:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    15:15:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    18:18:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    20:20:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":21,"2":22,"3":23,"4":24,"5":25,"6":26,"7":27},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    21:21:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    25:25:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void invoke(com.google.accompanist.pager.PagerScope,int,androidx.compose.runtime.Composer,int):0:0 -> a
    java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
com.truid.android.ui.facedetection.help.FaceDetectionHelpScreenKt$FaceDetectionHelpAnimations$1$2$checked$2 -> k.a$b:
# {"id":"sourceFile","fileName":"FaceDetectionHelpScreen.kt"}
    com.truid.android.ui.facedetection.help.FaceDetectionHelpScreenKt$FaceDetectionHelpAnimations$1$2$checked$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/a$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:androidx.compose.runtime.MutableState com.truid.android.ui.facedetection.help.FaceDetectionHelpScreenKt$FaceDetectionHelpAnimations$1$2$checked$2.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
com.truid.android.ui.facedetection.help.FaceDetectionHelpScreenKt$FaceDetectionHelpAnimations$2 -> k.a$c:
# {"id":"sourceFile","fileName":"FaceDetectionHelpScreen.kt"}
    androidx.compose.ui.Modifier $modifier -> a
    int $$changed -> b
    void <init>(androidx.compose.ui.Modifier,int) -> <init>
    1:1:void com.truid.android.ui.facedetection.help.FaceDetectionHelpScreenKt$FaceDetectionHelpAnimations$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.facedetection.help.FaceDetectionHelpScreenKt$FaceDetectionHelpBody$2 -> k.a$d:
# {"id":"sourceFile","fileName":"FaceDetectionHelpScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.facedetection.help.FaceDetectionHelpScreenKt$FaceDetectionHelpBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt -> l.a:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    kotlin.jvm.functions.Function3 lambda-1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function3 lambda-2 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-3 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function3 lambda-4 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    void <clinit>() -> <clinit>
    kotlin.jvm.functions.Function3 getLambda-1$sdk_release() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/compose/runtime/internal/ComposableLambda;"}
com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt$lambda-1$1 -> l.a$a:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt$lambda-1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/a$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt$lambda-1$1.invoke(androidx.compose.animation.AnimatedVisibilityScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt$lambda-2$1 -> l.a$b:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt$lambda-2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/a$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt$lambda-2$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt$lambda-3$1 -> l.a$c:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt$lambda-3$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/a$c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt$lambda-3$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt$lambda-4$1 -> l.a$d:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt$lambda-4$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/a$d;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt$lambda-4$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt -> l.b:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    kotlin.jvm.functions.Function2 lambda-1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-2 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    void <clinit>() -> <clinit>
com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt$lambda-1$1 -> l.b$a:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt$lambda-1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/b$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt$lambda-1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt$lambda-2$1 -> l.b$b:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt$lambda-2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/b$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:android.graphics.Bitmap com.truid.android.api.Session.getClientLogo():0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:android.graphics.Bitmap com.truid.android.api.Session.getClientLogo():0:0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt -> l.c:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    float upperBound -> a
    float lowerBound -> b
    float heightofOval -> c
    1:1:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":12,"2":13,"3":14},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    12:12:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    15:15:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    20:20:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    25:25:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:long com.truid.android.ui.theme.ColorKt.getPassedColor():0:0 -> a
    8:8:void CompletionTick(androidx.compose.runtime.Composer,int):0 -> a
    9:9:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":28,"2":29,"3":30,"4":31,"5":32,"6":33,"7":34},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    28:28:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    31:31:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void CompletionTick(androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/vision/FingerprintDetectionHandler$b;Lcom/truid/android/vision/FingersToScan;FLandroidx/compose/runtime/Composer;I)V"}
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":42,"2":43,"3":44},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    42:42:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    43:43:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    44:44:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    36:36:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":45,"2":46,"3":47,"4":48,"5":49},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    45:45:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    46:46:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    47:47:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    48:48:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    49:49:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    38:38:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":50,"2":51,"3":52,"4":53,"5":54},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    50:50:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    51:51:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    52:52:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    53:53:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    54:54:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    40:40:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":55,"2":56,"3":57},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    55:55:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    56:56:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    57:57:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    41:41:void DistanceScreen(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,androidx.compose.runtime.Composer,int):0:0 -> a
    58:58:boolean com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$16(androidx.compose.runtime.MutableState):0:0 -> a
    58:58:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lcom/truid/android/vision/FingerprintDetectionHandler;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V"}
    59:59:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    60:60:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    60:60:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    61:61:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    62:62:boolean com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$37(androidx.compose.runtime.MutableState):0:0 -> a
    62:62:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    63:63:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    64:64:boolean com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$28(androidx.compose.runtime.MutableState):0:0 -> a
    64:64:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    65:65:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$29(androidx.compose.runtime.MutableState,boolean):0:0 -> a
    65:65:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    66:66:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    67:67:boolean com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$28(androidx.compose.runtime.MutableState):0:0 -> a
    67:67:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    68:68:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$29(androidx.compose.runtime.MutableState,boolean):0:0 -> a
    68:68:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    69:69:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    70:70:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    70:70:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    71:71:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    72:72:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    72:72:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    73:73:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    74:74:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    74:74:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    75:75:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    76:76:boolean com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$22(androidx.compose.runtime.MutableState):0:0 -> a
    76:76:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    77:77:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    77:77:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    78:78:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    79:79:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":143,"2":144,"3":145},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    143:143:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    144:144:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    145:145:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    80:80:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    81:81:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":146,"2":147,"3":148,"4":149,"5":150},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    146:146:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    147:147:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    148:148:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    149:149:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    150:150:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    82:82:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    83:83:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":151,"2":152,"3":153,"4":154,"5":155},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    151:151:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    152:152:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    153:153:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    154:154:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    155:155:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    84:84:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":156,"2":157,"3":158},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    156:156:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    157:157:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    158:158:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    85:85:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    86:86:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":159,"2":160,"3":161,"4":162,"5":163},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    159:159:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    160:160:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    161:161:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    162:162:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    163:163:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    87:87:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    88:88:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":164,"2":165,"3":166,"4":167,"5":168},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    164:164:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    165:165:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    166:166:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    167:167:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    168:168:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    89:89:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":169,"2":170,"3":171},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    169:169:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    170:170:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    171:171:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    90:90:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    91:91:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    91:91:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    92:92:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    93:93:boolean com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$25(androidx.compose.runtime.MutableState):0:0 -> a
    93:93:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    94:94:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    95:98:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    95:98:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    99:99:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    100:100:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    100:100:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    101:101:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    102:102:androidx.compose.ui.geometry.Rect com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    102:102:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    103:103:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    104:104:androidx.compose.ui.geometry.Rect com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    104:104:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    105:105:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    106:106:androidx.compose.ui.geometry.Rect com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$13(androidx.compose.runtime.MutableState):0:0 -> a
    106:106:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    107:107:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    108:108:androidx.compose.ui.geometry.Rect com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$13(androidx.compose.runtime.MutableState):0:0 -> a
    108:108:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    109:109:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    110:110:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    110:110:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    111:111:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    112:112:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$26(androidx.compose.runtime.MutableState,boolean):0:0 -> a
    112:112:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    113:113:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    114:114:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    114:114:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    115:115:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    116:116:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$26(androidx.compose.runtime.MutableState,boolean):0:0 -> a
    116:116:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    117:117:boolean com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$28(androidx.compose.runtime.MutableState):0:0 -> a
    117:117:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    118:118:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$29(androidx.compose.runtime.MutableState,boolean):0:0 -> a
    118:118:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    119:119:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    120:120:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    120:120:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    121:121:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    122:122:float com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$19(androidx.compose.runtime.MutableState):0:0 -> a
    122:122:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    123:123:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    124:124:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    124:124:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    125:125:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    126:126:float com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$19(androidx.compose.runtime.MutableState):0:0 -> a
    126:126:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    127:127:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    127:127:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    128:128:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    129:129:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    129:129:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    130:130:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    131:131:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    131:131:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    132:132:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    133:134:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    133:134:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    135:135:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    136:136:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    136:136:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    137:137:boolean com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$37(androidx.compose.runtime.MutableState):0:0 -> a
    137:137:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    138:138:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    139:139:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    139:139:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    140:140:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    141:141:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> a
    141:141:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    142:142:void FingerprintDetectionBody(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    172:172:void OvalOverlay-3IgeMak(com.truid.android.ui.utils.LayoutViewModel,long,com.truid.android.vision.FingersToScan,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;JLcom/truid/android/vision/FingersToScan;Landroidx/compose/runtime/Composer;II)V"}
    173:173:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":187,"2":188,"3":189},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    187:187:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    188:188:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    189:189:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    174:174:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    175:175:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":190,"2":191,"3":192,"4":193,"5":194},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    190:190:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    191:191:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    192:192:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    193:193:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    194:194:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    176:176:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    177:177:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":195,"2":196,"3":197,"4":198,"5":199},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    195:195:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    196:196:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    197:197:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    198:198:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    199:199:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    178:178:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":200,"2":201,"3":202},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    200:200:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    201:201:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    202:202:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    179:179:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    180:180:com.truid.android.Fingers com.truid.android.UserData.getFingers():0:0 -> a
    180:180:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    181:181:android.graphics.Bitmap com.truid.android.Fingers.getFingersCaptureFrame():0:0 -> a
    181:181:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    182:182:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    183:183:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    183:183:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0 -> a
    184:184:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    185:185:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":203,"2":204,"3":205,"4":206,"5":207,"6":208,"7":209},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    203:203:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    204:204:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    205:205:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    206:206:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    207:207:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    208:208:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    209:209:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    186:186:void ProgressDialog(int,androidx.compose.runtime.Composer,int):0:0 -> a
    210:210:void ScaffoldOverlay(com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,int,kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lkotlin/jvm/functions/Function0;ILkotlin/jvm/functions/Function0;Lcom/truid/android/vision/FingerprintDetectionHandler$b;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;I)V"}
    211:211:void ScanThumbDialog(java.lang.String,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    212:212:kotlin.jvm.functions.Function2 com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt.getLambda-3$sdk_release():0:0 -> a
    212:212:void TryAgainDialog(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    213:213:void TryAgainDialog(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    214:214:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/vision/FingerprintDetectionHandler$b;FLandroidx/compose/runtime/Composer;I)V"}
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":242,"2":243,"3":244},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    242:242:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    243:243:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    244:244:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    215:215:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    216:216:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":245,"2":246,"3":247,"4":248,"5":249},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    245:245:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    246:246:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    247:247:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    248:248:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    249:249:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    217:217:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    218:218:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":250,"2":251,"3":252,"4":253,"5":254},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    250:250:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    251:251:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    252:252:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    253:253:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    254:254:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    219:219:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":255,"2":256,"3":257},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    255:255:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    256:256:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    257:257:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    220:220:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    221:221:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":258,"2":259,"3":260},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    258:258:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    259:259:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    260:260:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    222:222:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    223:223:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":261,"2":262,"3":263,"4":264,"5":265},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    261:261:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    262:262:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    263:263:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    264:264:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    265:265:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    224:224:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    225:225:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":266,"2":267,"3":268,"4":269,"5":270},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    266:266:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    267:267:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    268:268:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    269:269:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    270:270:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    226:226:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":271,"2":272,"3":273},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    271:271:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    272:272:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    273:273:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    227:227:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    228:228:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":274,"2":275,"3":276,"4":277,"5":278},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    274:274:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    275:275:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    276:276:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    277:277:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    278:278:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    229:229:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    230:230:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":279,"2":280,"3":281,"4":282,"5":283},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    279:279:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    280:280:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    281:281:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    282:282:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    283:283:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    231:231:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":284,"2":285,"3":286},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    284:284:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    285:285:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    286:286:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    232:232:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    233:233:float com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.VerticalScaleIndicator$lambda$52(androidx.compose.runtime.State):0:0 -> a
    233:233:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0 -> a
    234:234:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    235:235:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":287,"2":288,"3":289},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    287:287:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    288:288:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    289:289:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    236:236:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    237:237:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":290,"2":291,"3":292,"4":293,"5":294},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    290:290:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    291:291:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    292:292:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    293:293:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    294:294:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    238:238:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    239:239:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":295,"2":296,"3":297,"4":298,"5":299},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    295:295:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    296:296:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    297:297:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    298:298:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    299:299:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    240:240:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":300,"2":301,"3":302},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    300:300:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    301:301:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    302:302:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    241:241:void VerticalScaleIndicator(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,androidx.compose.runtime.Composer,int):0:0 -> a
    303:303:int com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$31(androidx.compose.runtime.MutableState):0:0 -> a
    303:303:int access$FingerprintDetectionBody$lambda$31(androidx.compose.runtime.MutableState):0 -> a
    304:304:float getHeightofOval():0:0 -> a
    305:305:androidx.compose.ui.geometry.Rect scaleBox(androidx.compose.ui.geometry.Rect,float,float,float):0:0 -> a
    306:306:void setHeightofOval(float):0:0 -> a
    1:1:int com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$34(androidx.compose.runtime.MutableState):0:0 -> b
    1:1:int access$FingerprintDetectionBody$lambda$34(androidx.compose.runtime.MutableState):0 -> b
    2:2:float getLowerBound():0:0 -> b
    3:3:void setLowerBound(float):0:0 -> b
    1:1:float getUpperBound():0:0 -> c
    2:2:void setUpperBound(float):0:0 -> c
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$CompletionTick$2 -> l.c$a:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    int $$changed -> a
    void <init>(int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$CompletionTick$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$DistanceScreen$2 -> l.c$b:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus $detectionStatus -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingersToScan $fingersToScan -> b
    float $sliderValue -> c
    int $$changed -> d
    void <init>(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,com.truid.android.vision.FingersToScan,float,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/vision/FingerprintDetectionHandler$b;Lcom/truid/android/vision/FingersToScan;FI)V"}
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$DistanceScreen$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$1$1 -> l.c$c:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    androidx.compose.runtime.MutableState $startScanning$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$17(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$17(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$1$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2 -> l.c$d:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> a
    androidx.compose.runtime.MutableState $captureStatus$delegate -> b
    androidx.compose.runtime.MutableState $processing$delegate -> c
    void <init>(com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$41(androidx.compose.runtime.MutableState,com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus):0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$41(androidx.compose.runtime.MutableState,com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.String com.truid.android.vision.FingerprintDetectionHandler.getPositionString():0:0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0:0 -> invoke
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> invoke
    6:6:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0 -> invoke
    6:6:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
    6:6:java.lang.Object invoke():0 -> invoke
    7:7:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0:0 -> invoke
    7:7:java.lang.Object invoke():0 -> invoke
    8:8:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> invoke
    8:8:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0 -> invoke
    8:8:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
    8:8:java.lang.Object invoke():0 -> invoke
    9:9:java.lang.String com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus.getMessage():0:0 -> invoke
    9:9:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:java.lang.Object invoke():0 -> invoke
    10:10:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0:0 -> invoke
    10:10:java.lang.Object invoke():0 -> invoke
    11:11:void com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus.setMessage(java.lang.String):0:0 -> invoke
    11:11:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
    11:11:java.lang.Object invoke():0 -> invoke
    12:12:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0:0 -> invoke
    12:12:java.lang.Object invoke():0 -> invoke
    13:13:java.lang.String com.truid.android.vision.FingerprintDetectionHandler.getPositionString():0:0 -> invoke
    13:13:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:13:java.lang.Object invoke():0 -> invoke
    14:14:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0:0 -> invoke
    14:14:java.lang.Object invoke():0 -> invoke
    15:15:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> invoke
    15:15:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0 -> invoke
    15:15:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
    15:15:java.lang.Object invoke():0 -> invoke
    16:16:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0:0 -> invoke
    16:16:java.lang.Object invoke():0 -> invoke
    17:17:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> invoke
    17:17:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0 -> invoke
    17:17:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
    17:17:java.lang.Object invoke():0 -> invoke
    18:18:java.lang.String com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus.getMessage():0:0 -> invoke
    18:18:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:18:java.lang.Object invoke():0 -> invoke
    19:19:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0:0 -> invoke
    19:19:java.lang.Object invoke():0 -> invoke
    20:20:void com.truid.android.ui.components.CameraPreviewKt.setFocusing(boolean):0:0 -> invoke
    20:20:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
    20:20:java.lang.Object invoke():0 -> invoke
    21:21:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0:0 -> invoke
    21:21:java.lang.Object invoke():0 -> invoke
    22:22:void com.truid.android.vision.FingerprintDetectionHandler.setUploading(boolean):0:0 -> invoke
    22:22:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    22:22:java.lang.Object invoke():0 -> invoke
    23:23:void com.truid.android.vision.FingerprintDetectionHandler.setFrameFocused(boolean):0:0 -> invoke
    23:23:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    23:23:java.lang.Object invoke():0 -> invoke
    24:24:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0:0 -> invoke
    24:24:java.lang.Object invoke():0 -> invoke
    25:25:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$26(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    25:25:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$26(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    25:25:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$2.invoke():0 -> invoke
    25:25:java.lang.Object invoke():0 -> invoke
    26:26:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3 -> l.c$e:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> a
    androidx.compose.runtime.MutableState $sliderValue$delegate -> b
    androidx.compose.runtime.MutableState $captureStatus$delegate -> c
    androidx.compose.runtime.MutableState $bothCaptured$delegate -> d
    androidx.compose.runtime.MutableState $processing$delegate -> e
    void <init>(com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$20(androidx.compose.runtime.MutableState,float):0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$20(androidx.compose.runtime.MutableState,float):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$41(androidx.compose.runtime.MutableState,com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus):0:0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$41(androidx.compose.runtime.MutableState,com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus):0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void com.truid.android.ui.components.CameraPreviewKt.setFocusing(boolean):0:0 -> invoke
    5:5:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0 -> invoke
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0:0 -> invoke
    6:6:java.lang.Object invoke():0 -> invoke
    7:7:void com.truid.android.vision.FingerprintDetectionHandler.setUploading(boolean):0:0 -> invoke
    7:7:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:java.lang.Object invoke():0 -> invoke
    8:8:void com.truid.android.vision.FingerprintDetectionHandler.setFrameFocused(boolean):0:0 -> invoke
    8:8:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:java.lang.Object invoke():0 -> invoke
    9:9:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0:0 -> invoke
    9:9:java.lang.Object invoke():0 -> invoke
    10:10:void com.truid.android.vision.FingerprintDetectionHandler.setPositionString(java.lang.String):0:0 -> invoke
    10:10:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0 -> invoke
    10:10:java.lang.Object invoke():0 -> invoke
    11:11:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0:0 -> invoke
    11:11:java.lang.Object invoke():0 -> invoke
    12:12:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> invoke
    12:12:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0 -> invoke
    12:12:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0 -> invoke
    12:12:java.lang.Object invoke():0 -> invoke
    13:13:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0:0 -> invoke
    13:13:java.lang.Object invoke():0 -> invoke
    14:14:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> invoke
    14:14:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0 -> invoke
    14:14:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0 -> invoke
    14:14:java.lang.Object invoke():0 -> invoke
    15:15:java.lang.String com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus.getMessage():0:0 -> invoke
    15:15:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:15:java.lang.Object invoke():0 -> invoke
    16:16:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0:0 -> invoke
    16:16:java.lang.Object invoke():0 -> invoke
    17:17:void com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus.setMessage(java.lang.String):0:0 -> invoke
    17:17:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0 -> invoke
    17:17:java.lang.Object invoke():0 -> invoke
    18:18:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0:0 -> invoke
    18:18:java.lang.Object invoke():0 -> invoke
    19:19:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$38(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    19:19:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$38(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    19:19:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0 -> invoke
    19:19:java.lang.Object invoke():0 -> invoke
    20:20:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0:0 -> invoke
    20:20:java.lang.Object invoke():0 -> invoke
    21:21:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$26(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    21:21:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$26(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    21:21:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$3.invoke():0 -> invoke
    21:21:java.lang.Object invoke():0 -> invoke
    22:22:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1 -> l.c$f:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> a
    androidx.compose.runtime.MutableState $startScanning$delegate -> b
    androidx.compose.runtime.MutableState $captureStatus$delegate -> c
    androidx.compose.runtime.MutableState $resolutionWidth$delegate -> d
    androidx.compose.runtime.MutableState $resolutionHeight$delegate -> e
    androidx.compose.runtime.MutableState $finger1BoundingBox$delegate -> f
    androidx.compose.runtime.MutableState $finger2BoundingBox$delegate -> g
    androidx.compose.runtime.MutableState $finger3BoundingBox$delegate -> h
    androidx.compose.runtime.MutableState $finger4BoundingBox$delegate -> i
    androidx.compose.runtime.MutableState $thumbBoundingBox$delegate -> j
    androidx.compose.runtime.MutableState $sliderValue$delegate -> k
    void <init>(com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:boolean com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$16(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:boolean com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$16(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1.invoke(androidx.camera.core.ImageProxy):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> invoke
    4:4:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1.invoke(androidx.camera.core.ImageProxy):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> invoke
    6:6:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0 -> invoke
    6:6:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1.invoke(androidx.camera.core.ImageProxy):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> invoke
    8:8:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0 -> invoke
    8:8:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1.invoke(androidx.camera.core.ImageProxy):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object):0 -> invoke
    9:9:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object):0 -> invoke
    10:10:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> invoke
    10:10:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0 -> invoke
    10:10:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1.invoke(androidx.camera.core.ImageProxy):0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object):0 -> invoke
    11:11:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1 -> l.d:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    androidx.compose.runtime.MutableState $captureStatus$delegate -> a
    androidx.compose.runtime.MutableState $resolutionWidth$delegate -> b
    androidx.compose.runtime.MutableState $resolutionHeight$delegate -> c
    androidx.compose.runtime.MutableState $finger1BoundingBox$delegate -> d
    androidx.compose.runtime.MutableState $finger2BoundingBox$delegate -> e
    androidx.compose.runtime.MutableState $finger3BoundingBox$delegate -> f
    androidx.compose.runtime.MutableState $finger4BoundingBox$delegate -> g
    androidx.compose.runtime.MutableState $thumbBoundingBox$delegate -> h
    void <init>(androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$41(androidx.compose.runtime.MutableState,com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus):0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$41(androidx.compose.runtime.MutableState,com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:int com.truid.android.ui.components.CameraPreviewKt.getImageProxyWidth():0:0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:int com.truid.android.ui.components.CameraPreviewKt.getImageProxyHeight():0:0 -> invoke
    6:6:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$2(androidx.compose.runtime.MutableState,androidx.compose.ui.geometry.Rect):0:0 -> invoke
    8:8:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$2(androidx.compose.runtime.MutableState,androidx.compose.ui.geometry.Rect):0 -> invoke
    8:8:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    10:10:int com.truid.android.ui.components.CameraPreviewKt.getImageProxyWidth():0:0 -> invoke
    10:10:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    12:12:int com.truid.android.ui.components.CameraPreviewKt.getImageProxyHeight():0:0 -> invoke
    12:12:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    13:13:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$5(androidx.compose.runtime.MutableState,androidx.compose.ui.geometry.Rect):0:0 -> invoke
    14:14:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$5(androidx.compose.runtime.MutableState,androidx.compose.ui.geometry.Rect):0 -> invoke
    14:14:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    15:15:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:int com.truid.android.ui.components.CameraPreviewKt.getImageProxyWidth():0:0 -> invoke
    16:16:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    17:17:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    18:18:int com.truid.android.ui.components.CameraPreviewKt.getImageProxyHeight():0:0 -> invoke
    18:18:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    20:20:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$8(androidx.compose.runtime.MutableState,androidx.compose.ui.geometry.Rect):0:0 -> invoke
    20:20:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$8(androidx.compose.runtime.MutableState,androidx.compose.ui.geometry.Rect):0 -> invoke
    20:20:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    22:22:int com.truid.android.ui.components.CameraPreviewKt.getImageProxyWidth():0:0 -> invoke
    22:22:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:int com.truid.android.ui.components.CameraPreviewKt.getImageProxyHeight():0:0 -> invoke
    24:24:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    25:25:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$11(androidx.compose.runtime.MutableState,androidx.compose.ui.geometry.Rect):0:0 -> invoke
    26:26:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$11(androidx.compose.runtime.MutableState,androidx.compose.ui.geometry.Rect):0 -> invoke
    26:26:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    27:27:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    28:28:int com.truid.android.ui.components.CameraPreviewKt.getImageProxyWidth():0:0 -> invoke
    28:28:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    30:30:int com.truid.android.ui.components.CameraPreviewKt.getImageProxyHeight():0:0 -> invoke
    30:30:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    32:32:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$14(androidx.compose.runtime.MutableState,androidx.compose.ui.geometry.Rect):0:0 -> invoke
    32:32:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$14(androidx.compose.runtime.MutableState,androidx.compose.ui.geometry.Rect):0 -> invoke
    32:32:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$1.invoke(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,java.util.List):0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$2 -> l.f:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    androidx.compose.runtime.MutableState $sliderValue$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$2.invoke(float):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$20(androidx.compose.runtime.MutableState,float):0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$20(androidx.compose.runtime.MutableState,float):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$2.invoke(float):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$1$2$invoke$$inlined$schedule$1 -> l.e:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    float $value$inlined -> a
    androidx.compose.runtime.MutableState $sliderValue$delegate$inlined -> b
    void <init>(float,androidx.compose.runtime.MutableState) -> <init>
    1:1:float com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$19(androidx.compose.runtime.MutableState):0:0 -> run
    1:1:float com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$19(androidx.compose.runtime.MutableState):0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$20(androidx.compose.runtime.MutableState,float):0:0 -> run
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$20(androidx.compose.runtime.MutableState,float):0 -> run
    3:3:void run():0 -> run
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$2 -> l.c$g:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    double $cameraHeightPixels -> b
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> c
    androidx.compose.runtime.MutableState $resolutionWidth$delegate -> d
    androidx.compose.runtime.MutableState $resolutionHeight$delegate -> e
    void <init>(com.truid.android.ui.utils.LayoutViewModel,double,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;DLcom/truid/android/vision/FingerprintDetectionHandler;Landroidx/compose/runtime/MutableState;Landroidx/compose/runtime/MutableState;)V"}
    void invoke(androidx.compose.ui.layout.LayoutCoordinates) -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$3$1 -> l.c$h:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    androidx.compose.runtime.MutableState $resolutionHeight$delegate -> a
    androidx.compose.runtime.MutableState $resolutionWidth$delegate -> b
    void <init>(androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$3$1.invoke(android.util.Size):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$32(androidx.compose.runtime.MutableState,int):0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$32(androidx.compose.runtime.MutableState,int):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$3$1.invoke(android.util.Size):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$3$1.invoke(android.util.Size):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$35(androidx.compose.runtime.MutableState,int):0:0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$35(androidx.compose.runtime.MutableState,int):0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$4$1$3$1.invoke(android.util.Size):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$5 -> l.c$i:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> a
    void <init>(com.truid.android.vision.FingerprintDetectionHandler) -> <init>
    void invoke(boolean) -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$6 -> l.c$j:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> a
    void <init>(com.truid.android.vision.FingerprintDetectionHandler) -> <init>
    void invoke(boolean) -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$7$1 -> l.c$k:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    androidx.compose.runtime.MutableState $captureStatus$delegate -> a
    androidx.compose.runtime.MutableState $startCamera$delegate -> b
    void <init>(androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$7$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$40(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$7$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$7$1.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$23(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$23(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$7$1.invoke():0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$8 -> l.c$l:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> a
    androidx.compose.runtime.MutableState $processing$delegate -> b
    androidx.compose.runtime.MutableState $captureStatus$delegate -> c
    void <init>(com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$8.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$26(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$26(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$8.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$8.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.FingerprintDetectionBody$lambda$41(androidx.compose.runtime.MutableState,com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus):0:0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt.access$FingerprintDetectionBody$lambda$41(androidx.compose.runtime.MutableState,com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus):0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$8.invoke():0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$8.invoke():0:0 -> invoke
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:void com.truid.android.vision.FingerprintDetectionHandler.setFrameFocused(boolean):0:0 -> invoke
    6:6:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$8.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:java.lang.Object invoke():0 -> invoke
    7:7:void com.truid.android.ui.components.CameraPreviewKt.setFocusing(boolean):0:0 -> invoke
    7:7:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$8.invoke():0 -> invoke
    7:7:java.lang.Object invoke():0 -> invoke
    8:8:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$9 -> l.c$m:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> b
    kotlin.jvm.functions.Function0 $onHelp -> c
    kotlin.jvm.functions.Function0 $onNext -> d
    int $$changed -> e
    void <init>(com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lcom/truid/android/vision/FingerprintDetectionHandler;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;I)V"}
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$FingerprintDetectionBody$9.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$OvalOverlay$1 -> l.c$n:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$OvalOverlay$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/c$n;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void invoke(androidx.compose.ui.layout.LayoutCoordinates) -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$OvalOverlay$2$1 -> l.c$o:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    com.truid.android.vision.FingersToScan $fingersToScan -> b
    long $ovalColor -> c
    void <init>(float,com.truid.android.ui.utils.LayoutViewModel,com.truid.android.vision.FingersToScan,long) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lcom/truid/android/vision/FingersToScan;J)V"}
    void invoke(androidx.compose.ui.graphics.drawscope.DrawScope) -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$OvalOverlay$3 -> l.c$p:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    long $ovalColor -> b
    com.truid.android.vision.FingersToScan $fingersToScan -> c
    int $$changed -> d
    int $$default -> e
    void <init>(com.truid.android.ui.utils.LayoutViewModel,long,com.truid.android.vision.FingersToScan,int,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;JLcom/truid/android/vision/FingersToScan;II)V"}
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$OvalOverlay$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ProgressDialog$2 -> l.c$q:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    int $height -> a
    int $$changed -> b
    void <init>(int,int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ProgressDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$1 -> l.c$r:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onHelp -> a
    int $progress -> b
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    int $$dirty -> d
    void <init>(kotlin.jvm.functions.Function0,int,com.truid.android.ui.utils.LayoutViewModel,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lkotlin/jvm/functions/Function0;ILx/b;I)V"}
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2 -> l.c$s:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    kotlin.jvm.functions.Function0 $onGloballyPositioned -> b
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus $detectionStatus -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    void <init>(com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,int,com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lkotlin/jvm/functions/Function0;ILcom/truid/android/vision/FingerprintDetectionHandler$b;)V"}
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":19,"2":20,"3":21},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    19:19:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    20:20:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":22,"2":23,"3":24,"4":25,"5":26},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    22:22:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    25:25:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":27,"2":28,"3":29,"4":30,"5":31},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    27:27:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    28:28:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    30:30:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":32,"2":33,"3":34},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    32:32:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    33:33:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    34:34:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":35,"2":36,"3":37},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    35:35:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    36:36:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    36:36:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    37:37:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    37:37:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":38,"2":39,"3":40,"4":41,"5":42},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    38:38:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    38:38:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    39:39:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    39:39:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    40:40:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    41:41:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    41:41:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    42:42:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    42:42:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    12:12:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":43,"2":44,"3":45,"4":46,"5":47},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    43:43:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    43:43:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    44:44:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    44:44:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    45:45:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    45:45:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    46:46:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    46:46:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    47:47:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":48,"2":49,"3":50},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    48:48:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    48:48:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    49:49:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    49:49:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    50:50:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    50:50:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    15:15:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    16:16:java.lang.String com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus.getMessage():0:0 -> invoke
    16:16:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    17:17:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2$1$1$1 -> l.g:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    kotlin.jvm.functions.Function0 $onGloballyPositioned -> b
    void <init>(com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2$1$1$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.utils.LayoutViewModel.setBottomContentTop(float):0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2$1$1$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.utils.LayoutViewModel.setBottomContentTop(float):0:0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2$1$1$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$2$1$1$1.invoke(androidx.compose.ui.layout.LayoutCoordinates):0:0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$3 -> l.c$t:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.utils.LayoutViewModel $layoutViewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/b;"}
    kotlin.jvm.functions.Function0 $onNext -> b
    int $progress -> c
    kotlin.jvm.functions.Function0 $onHelp -> d
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus $detectionStatus -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    kotlin.jvm.functions.Function0 $onGloballyPositioned -> f
    int $$changed -> g
    void <init>(com.truid.android.ui.utils.LayoutViewModel,kotlin.jvm.functions.Function0,int,kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,kotlin.jvm.functions.Function0,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/b;Lkotlin/jvm/functions/Function0;ILkotlin/jvm/functions/Function0;Lcom/truid/android/vision/FingerprintDetectionHandler$b;Lkotlin/jvm/functions/Function0;I)V"}
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScaffoldOverlay$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScanThumbDialog$1 -> l.c$u:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScanThumbDialog$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/c$u;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke() -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScanThumbDialog$2 -> l.c$v:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onDismiss -> a
    int $$dirty -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScanThumbDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:kotlin.jvm.functions.Function3 com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt.getLambda-4$sdk_release():0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScanThumbDialog$2.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScanThumbDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScanThumbDialog$3 -> l.c$w:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    java.lang.String $message -> a
    int $$dirty -> b
    void <init>(java.lang.String,int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScanThumbDialog$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScanThumbDialog$4 -> l.c$x:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    java.lang.String $message -> a
    kotlin.jvm.functions.Function0 $onDismiss -> b
    int $$changed -> c
    void <init>(java.lang.String,kotlin.jvm.functions.Function0,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$ScanThumbDialog$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$TryAgainDialog$1 -> l.c$y:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onDismiss -> a
    int $$dirty -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$TryAgainDialog$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:kotlin.jvm.functions.Function3 com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintDetectionScreenKt.getLambda-2$sdk_release():0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$TryAgainDialog$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$TryAgainDialog$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$TryAgainDialog$2 -> l.c$z:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onDismiss -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$TryAgainDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$VerticalScaleIndicator$2 -> l.c$a0:
# {"id":"sourceFile","fileName":"FingerprintDetectionScreen.kt"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus $distanceState -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    float $targetValue -> b
    int $$changed -> c
    void <init>(com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus,float,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/vision/FingerprintDetectionHandler$b;FI)V"}
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintDetectionScreenKt$VerticalScaleIndicator$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt -> l.h:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    1:1:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    15:15:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    20:20:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    25:25:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    6:6:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0 -> a
    7:7:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":28,"2":29,"3":30},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    28:28:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":31,"2":32,"3":33,"4":34,"5":35},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    31:31:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":36,"2":37,"3":38,"4":39,"5":40},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    36:36:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    38:38:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    40:40:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":41,"2":42,"3":43},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    41:41:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    42:42:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    43:43:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    44:44:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":51,"2":52,"3":53},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    51:51:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    52:52:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    53:53:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    45:45:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    46:46:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":54,"2":55,"3":56,"4":57,"5":58},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    54:54:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    55:55:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    56:56:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    57:57:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    58:58:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    47:47:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    48:48:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":59,"2":60,"3":61,"4":62,"5":63},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    59:59:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    60:60:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    61:61:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    62:62:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    63:63:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    49:49:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":64,"2":65,"3":66},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    64:64:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    65:65:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    66:66:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    50:50:void Fingerprint(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,androidx.compose.runtime.Composer,int):0:0 -> a
    67:67:android.graphics.Bitmap com.truid.android.Fingers.getFingersCaptureFrame():0:0 -> a
    67:67:void FingerprintResultBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    68:68:void FingerprintResultBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    69:69:android.graphics.Bitmap com.truid.android.Fingers.getIndexFingerImage():0:0 -> a
    69:69:void FingerprintResultBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    70:70:void FingerprintResultBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    71:71:android.graphics.Bitmap com.truid.android.Fingers.getThumbImage():0:0 -> a
    71:71:void FingerprintResultBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    72:72:void FingerprintResultBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    73:73:kotlin.jvm.functions.Function2 com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt.getLambda-1$sdk_release():0:0 -> a
    73:73:void FingerprintResultBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    74:74:void FingerprintResultBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    75:75:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    75:75:void StatusHeader(androidx.compose.runtime.Composer,int):0 -> a
    76:76:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    77:77:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":86,"2":87,"3":88},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    86:86:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    87:87:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    88:88:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    78:78:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    79:79:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":89,"2":90,"3":91,"4":92,"5":93},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    89:89:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    90:90:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    91:91:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    92:92:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    93:93:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    80:80:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    81:81:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":94,"2":95,"3":96,"4":97,"5":98},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    94:94:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    95:95:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    96:96:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    97:97:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    98:98:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    82:82:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":99,"2":100,"3":101},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    99:99:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    100:100:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    101:101:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    83:83:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    84:84:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":102,"2":103,"3":104,"4":105,"5":106,"6":107,"7":108},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    102:102:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    103:103:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    104:104:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    105:105:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    106:106:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    107:107:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    108:108:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    85:85:void StatusHeader(androidx.compose.runtime.Composer,int):0:0 -> a
    1:1:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> b
    1:1:void TopBar(androidx.compose.runtime.Composer,int):0 -> b
    2:2:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    3:3:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":12,"2":13,"3":14,"4":15,"5":16},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    12:12:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    13:13:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    14:14:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    15:15:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    16:16:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    4:4:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    5:5:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    17:17:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    18:18:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    19:19:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    20:20:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    21:21:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    6:6:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":22,"2":23,"3":24},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    22:22:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    23:23:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    24:24:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    7:7:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    8:8:kotlin.jvm.functions.Function2 com.truid.android.ui.fingerprintdetection.ComposableSingletons$FingerprintResultScreenKt.getLambda-2$sdk_release():0:0 -> b
    8:8:void TopBar(androidx.compose.runtime.Composer,int):0 -> b
    9:9:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    10:10:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27,"4":28,"5":29,"6":30,"7":31},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    25:25:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    26:26:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    27:27:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    28:28:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    29:29:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    30:30:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    31:31:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    11:11:void TopBar(androidx.compose.runtime.Composer,int):0:0 -> b
    1:1:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":22,"2":23,"3":24,"4":25,"5":26},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    22:22:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    23:23:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    24:24:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    25:25:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    26:26:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    2:2:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    3:3:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":27,"2":28,"3":29,"4":30,"5":31},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    27:27:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    28:28:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    29:29:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    30:30:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    31:31:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    4:4:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":32,"2":33,"3":34},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    32:32:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    33:33:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    34:34:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    5:5:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    6:6:android.graphics.Bitmap com.truid.android.Fingers.getIndexFingerImage():0:0 -> c
    6:6:void handScans(androidx.compose.runtime.Composer,int):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    8:8:java.lang.Integer com.truid.android.Fingers.getIndexFingerScore():0:0 -> c
    8:8:void handScans(androidx.compose.runtime.Composer,int):0 -> c
    9:9:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    10:10:android.graphics.Bitmap com.truid.android.Fingers.getMiddleFingerImage():0:0 -> c
    10:10:void handScans(androidx.compose.runtime.Composer,int):0 -> c
    11:11:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    12:12:java.lang.Integer com.truid.android.Fingers.getMiddleFingerScore():0:0 -> c
    12:12:void handScans(androidx.compose.runtime.Composer,int):0 -> c
    13:13:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    14:14:android.graphics.Bitmap com.truid.android.Fingers.getRingFingerImage():0:0 -> c
    14:14:void handScans(androidx.compose.runtime.Composer,int):0 -> c
    15:15:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    16:16:java.lang.Integer com.truid.android.Fingers.getRingFingerScore():0:0 -> c
    16:16:void handScans(androidx.compose.runtime.Composer,int):0 -> c
    17:17:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    18:18:android.graphics.Bitmap com.truid.android.Fingers.getPinkyFingerImage():0:0 -> c
    18:18:void handScans(androidx.compose.runtime.Composer,int):0 -> c
    19:19:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    20:20:java.lang.Integer com.truid.android.Fingers.getPinkyFingerScore():0:0 -> c
    20:20:void handScans(androidx.compose.runtime.Composer,int):0 -> c
    21:21:void handScans(androidx.compose.runtime.Composer,int):0:0 -> c
    1:1:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12,"4":13,"5":14},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    10:10:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    11:11:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    12:12:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    13:13:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    14:14:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    2:2:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    3:3:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    15:15:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    16:16:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    17:17:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    18:18:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    19:19:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    4:4:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    20:20:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    21:21:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    22:22:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    5:5:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    6:6:android.graphics.Bitmap com.truid.android.Fingers.getThumbImage():0:0 -> d
    6:6:void thumbScans(androidx.compose.runtime.Composer,int):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
    8:8:java.lang.Integer com.truid.android.Fingers.getThumbScore():0:0 -> d
    8:8:void thumbScans(androidx.compose.runtime.Composer,int):0 -> d
    9:9:void thumbScans(androidx.compose.runtime.Composer,int):0:0 -> d
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$CardWithBackdrop$1$1$1 -> l.h$a:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    long $backgroundColor -> a
    void <init>(long) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$CardWithBackdrop$1$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$CardWithBackdrop$1$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$CardWithBackdrop$1$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$CardWithBackdrop$1$2$1 -> l.h$b:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    kotlin.jvm.functions.Function2 $content -> a
    int $$dirty -> b
    void <init>(kotlin.jvm.functions.Function2,int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$CardWithBackdrop$1$2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$CardWithBackdrop$2 -> l.h$c:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    long $backgroundColor -> a
    kotlin.jvm.functions.Function2 $content -> b
    int $$changed -> c
    void <init>(long,kotlin.jvm.functions.Function2,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJLkotlin/jvm/functions/Function2;)V"}
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$CardWithBackdrop$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$Fingerprint$2 -> l.h$d:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    androidx.compose.ui.Modifier $modifier -> a
    android.graphics.Bitmap $bitmap -> b
    int $score -> c
    int $$changed -> d
    void <init>(androidx.compose.ui.Modifier,android.graphics.Bitmap,int,int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$Fingerprint$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$1 -> l.h$e:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2 -> l.h$f:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    int $$dirty -> b
    android.graphics.Bitmap $indexFingerImage -> c
    android.graphics.Bitmap $thumbImage -> d
    void <init>(kotlin.jvm.functions.Function0,int,android.graphics.Bitmap,android.graphics.Bitmap) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    17:17:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    18:18:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    20:20:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":22,"2":23,"3":24,"4":25,"5":26},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    22:22:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    25:25:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":27,"2":28,"3":29},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    27:27:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    28:28:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    6:6:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":30,"2":31,"3":32},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    30:30:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    32:32:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":33,"2":34,"3":35,"4":36,"5":37},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    33:33:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    34:34:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    35:35:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    36:36:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    36:36:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    37:37:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    37:37:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":38,"2":39,"3":40,"4":41,"5":42},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    38:38:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    38:38:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    39:39:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    39:39:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    40:40:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    41:41:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    41:41:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    42:42:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    42:42:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":43,"2":44,"3":45},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    43:43:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    43:43:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    44:44:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    44:44:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    45:45:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    45:45:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    13:13:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":46,"2":47,"3":48,"4":49,"5":50,"6":51,"7":52},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    46:46:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    46:46:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    47:47:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    48:48:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    48:48:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    49:49:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    49:49:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    50:50:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    50:50:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    51:51:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    51:51:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    52:52:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    52:52:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    15:15:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1 -> l.i:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    android.graphics.Bitmap $indexFingerImage -> a
    android.graphics.Bitmap $thumbImage -> b
    void <init>(android.graphics.Bitmap,android.graphics.Bitmap) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":14,"2":15,"3":16},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    14:14:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    15:15:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    17:17:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    18:18:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    20:20:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":22,"2":23,"3":24,"4":25,"5":26},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    22:22:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    25:25:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":27,"2":28,"3":29},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    27:27:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    28:28:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:android.graphics.Bitmap com.truid.android.Fingers.getFingersCaptureFrame():0:0 -> invoke
    9:9:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":30,"2":31,"3":32,"4":33,"5":34,"6":35,"7":36},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    30:30:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    32:32:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    33:33:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    34:34:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    35:35:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    36:36:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    36:36:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    12:12:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$2$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$3 -> l.h$g:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$FingerprintResultBody$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$StatusHeader$2 -> l.h$h:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    int $$changed -> a
    void <init>(int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$StatusHeader$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$TopBar$2 -> l.h$i:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    int $$changed -> a
    void <init>(int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$TopBar$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$handScans$2 -> l.h$j:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    int $$changed -> a
    void <init>(int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$handScans$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$thumbScans$2 -> l.h$k:
# {"id":"sourceFile","fileName":"FingerprintResultScreen.kt"}
    int $$changed -> a
    void <init>(int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingerprintResultScreenKt$thumbScans$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt -> l.j:
# {"id":"sourceFile","fileName":"FingersSelectionScreen.kt"}
    1:1:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":19,"2":20,"3":21},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    19:19:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    20:20:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    21:21:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    2:2:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":22,"2":23,"3":24,"4":25,"5":26},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    22:22:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    23:23:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    24:24:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    25:25:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    26:26:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    4:4:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    5:5:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":27,"2":28,"3":29,"4":30,"5":31},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    27:27:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    28:28:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    29:29:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    30:30:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    31:31:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    6:6:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":32,"2":33,"3":34},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    32:32:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    33:33:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    34:34:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    7:7:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    8:8:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":35,"2":36,"3":37},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    35:35:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    36:36:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    37:37:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    9:9:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    10:10:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":38,"2":39,"3":40,"4":41,"5":42},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    38:38:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    39:39:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    40:40:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    41:41:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    42:42:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    11:11:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    12:12:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":43,"2":44,"3":45,"4":46,"5":47},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    43:43:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    44:44:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    45:45:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    46:46:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    47:47:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    13:13:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":48,"2":49,"3":50},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    48:48:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    49:49:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    50:50:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    14:14:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    15:15:java.lang.String com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.FingersSelection$lambda$6(androidx.compose.runtime.MutableState):0:0 -> a
    15:15:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0 -> a
    16:16:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    17:17:boolean com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.FingersSelection$lambda$9(androidx.compose.runtime.MutableState):0:0 -> a
    17:17:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0 -> a
    18:18:void FingersSelection(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    51:51:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":67,"2":68,"3":69},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    67:67:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    68:68:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    69:69:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    52:52:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    53:53:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":70,"2":71,"3":72,"4":73,"5":74},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    70:70:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    71:71:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    72:72:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    73:73:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    74:74:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    54:54:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    55:55:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":75,"2":76,"3":77,"4":78,"5":79},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    75:75:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    76:76:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    77:77:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    78:78:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    79:79:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    56:56:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":80,"2":81,"3":82},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    80:80:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    81:81:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    82:82:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    57:57:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    58:58:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":83,"2":84,"3":85},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    83:83:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    84:84:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    85:85:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    59:59:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    60:60:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":86,"2":87,"3":88,"4":89,"5":90},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    86:86:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    87:87:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    88:88:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    89:89:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    90:90:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    61:61:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    62:62:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":91,"2":92,"3":93,"4":94,"5":95},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    91:91:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    92:92:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    93:93:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    94:94:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    95:95:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    63:63:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":96,"2":97,"3":98},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    96:96:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    97:97:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    98:98:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    64:64:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    65:65:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":99,"2":100,"3":101,"4":102,"5":103,"6":104,"7":105},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    99:99:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    100:100:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    101:101:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    102:102:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    103:103:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    104:104:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    105:105:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    66:66:void FingersSelectionBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$1 -> l.j$a:
# {"id":"sourceFile","fileName":"FingersSelectionScreen.kt"}
    com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/j$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$1.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$1$1 -> l.j$b:
# {"id":"sourceFile","fileName":"FingersSelectionScreen.kt"}
    androidx.compose.runtime.MutableState $expanded$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:boolean com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.FingersSelection$lambda$9(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:boolean com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.access$FingersSelection$lambda$9(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$1$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.FingersSelection$lambda$10(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.access$FingersSelection$lambda$10(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$1$1.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$1$1 -> l.j$c:
# {"id":"sourceFile","fileName":"FingersSelectionScreen.kt"}
    androidx.compose.runtime.MutableState $expanded$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.FingersSelection$lambda$10(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.access$FingersSelection$lambda$10(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$1$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$2 -> l.j$d:
# {"id":"sourceFile","fileName":"FingersSelectionScreen.kt"}
    java.util.List $fingerNames -> a
    androidx.compose.runtime.MutableState $expanded$delegate -> b
    androidx.compose.runtime.MutableState $agentName$delegate -> c
    kotlin.jvm.functions.Function1 $onSelection -> d
    void <init>(java.util.List,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,kotlin.jvm.functions.Function1) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$2.invoke(androidx.compose.foundation.layout.ColumnScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$2$1$1$1 -> l.k:
# {"id":"sourceFile","fileName":"FingersSelectionScreen.kt"}
    java.lang.String $agent -> a
    kotlin.jvm.functions.Function1 $onSelection -> b
    androidx.compose.runtime.MutableState $expanded$delegate -> c
    androidx.compose.runtime.MutableState $agentName$delegate -> d
    void <init>(java.lang.String,kotlin.jvm.functions.Function1,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$2$1$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.FingersSelection$lambda$10(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.access$FingersSelection$lambda$10(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$2$1$1$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$2$1$1$1.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.FingersSelection$lambda$7(androidx.compose.runtime.MutableState,java.lang.String):0:0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.access$FingersSelection$lambda$7(androidx.compose.runtime.MutableState,java.lang.String):0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$2$1$1$1.invoke():0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$2$1$1$1.invoke():0:0 -> invoke
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:java.lang.String com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.FingersSelection$lambda$6(androidx.compose.runtime.MutableState):0:0 -> invoke
    6:6:java.lang.String com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.access$FingersSelection$lambda$6(androidx.compose.runtime.MutableState):0 -> invoke
    6:6:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$2$1$1$1.invoke():0 -> invoke
    6:6:java.lang.Object invoke():0 -> invoke
    7:7:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$2$1$1$1.invoke():0:0 -> invoke
    7:7:java.lang.Object invoke():0 -> invoke
    8:8:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$2$1$2 -> l.l:
# {"id":"sourceFile","fileName":"FingersSelectionScreen.kt"}
    java.lang.String $agent -> a
    void <init>(java.lang.String) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$2$2$2$1$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$3 -> l.j$e:
# {"id":"sourceFile","fileName":"FingersSelectionScreen.kt"}
    java.util.List $fingerNames -> a
    kotlin.jvm.functions.Function1 $onSelection -> b
    int $$changed -> c
    int $$default -> d
    void <init>(java.util.List,kotlin.jvm.functions.Function1,int,int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelection$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1 -> l.j$f:
# {"id":"sourceFile","fileName":"FingersSelectionScreen.kt"}
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> a
    androidx.compose.runtime.MutableState $chosenfingers$delegate -> b
    void <init>(com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    10:10:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    12:12:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15,"4":16,"5":17},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    13:13:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    15:15:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    17:17:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20,"4":21,"5":22},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    18:18:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    20:20:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    23:23:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    25:25:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1$1$1 -> l.m:
# {"id":"sourceFile","fileName":"FingersSelectionScreen.kt"}
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> a
    androidx.compose.runtime.MutableState $chosenfingers$delegate -> b
    void <init>(com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1$1$1.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.FingersSelectionBody$lambda$2(androidx.compose.runtime.MutableState,java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.access$FingersSelectionBody$lambda$2(androidx.compose.runtime.MutableState,java.lang.String):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1$1$1.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1$1$1.invoke(java.lang.String):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.vision.FingerprintDetectionHandler.setCaptureBothHands(boolean):0:0 -> invoke
    4:4:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$1$1$1$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$2 -> l.j$g:
# {"id":"sourceFile","fileName":"FingersSelectionScreen.kt"}
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> a
    kotlin.jvm.functions.Function0 $onNextClick -> b
    androidx.compose.runtime.MutableState $chosenfingers$delegate -> c
    void <init>(com.truid.android.vision.FingerprintDetectionHandler,kotlin.jvm.functions.Function0,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$2.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.FingersSelectionBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:java.lang.String com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt.access$FingersSelectionBody$lambda$1(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$2.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$1$2.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$2 -> l.j$h:
# {"id":"sourceFile","fileName":"FingersSelectionScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> b
    int $$changed -> c
    void <init>(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.FingersSelectionScreenKt$FingersSelectionBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.fingerprintdetection.help.FingerprintDetectionHelpScreenKt -> m.a:
# {"id":"sourceFile","fileName":"FingerprintDetectionHelpScreen.kt"}
    1:1:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    23:23:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    25:25:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":26,"2":27,"3":28,"4":29,"5":30},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    26:26:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    28:28:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":31,"2":32,"3":33,"4":34,"5":35},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    31:31:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":36,"2":37,"3":38},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    36:36:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    38:38:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:boolean com.truid.android.vision.FingerprintDetectionHandler.getCaptureBothHands():0:0 -> a
    8:8:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":39,"2":40,"3":41},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    39:39:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    40:40:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    41:41:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":42,"2":43,"3":44,"4":45,"5":46},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    42:42:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    43:43:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    44:44:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    45:45:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    46:46:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":47,"2":48,"3":49,"4":50,"5":51},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    47:47:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    48:48:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    49:49:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    50:50:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    51:51:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    15:15:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":52,"2":53,"3":54},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    52:52:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    53:53:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    54:54:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:com.truid.android.vision.NistPosCode com.truid.android.vision.FingerprintDetectionHandler.getPositionCode():0:0 -> a
    17:17:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0 -> a
    18:18:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:com.truid.android.vision.NistPosCode com.truid.android.vision.FingerprintDetectionHandler.getPositionCode():0:0 -> a
    19:19:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0 -> a
    20:20:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":55,"2":56,"3":57,"4":58,"5":59,"6":60,"7":61},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    55:55:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    56:56:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    57:57:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    58:58:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    59:59:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    60:60:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    61:61:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void FingerprintDetectionHelpBody(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.fingerprintdetection.help.FingerprintDetectionHelpScreenKt$FingerprintDetectionHelpBody$2 -> m.a$a:
# {"id":"sourceFile","fileName":"FingerprintDetectionHelpScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    com.truid.android.vision.FingerprintDetectionHandler $fingerprintDetectionHandler -> b
    int $$changed -> c
    void <init>(kotlin.jvm.functions.Function0,com.truid.android.vision.FingerprintDetectionHandler,int) -> <init>
    1:1:void com.truid.android.ui.fingerprintdetection.help.FingerprintDetectionHelpScreenKt$FingerprintDetectionHelpBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.help.HelpScreenKt -> n.a:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    1:1:boolean com.truid.android.ui.help.HelpScreenKt.DescriptionDropDown$lambda$2(androidx.compose.runtime.MutableState):0:0 -> a
    1:1:void DescriptionDropDown(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int,int):0 -> a
    2:2:void DescriptionDropDown(androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":8,"2":9,"3":10,"4":11,"5":12},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    8:8:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15,"4":16,"5":17},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    13:13:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    15:15:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    18:18:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    20:20:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void HelpBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$1$1 -> n.a$a:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    androidx.compose.runtime.MutableState $expanded$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$1$1.invoke(boolean):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:boolean com.truid.android.ui.help.HelpScreenKt.DescriptionDropDown$lambda$2(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:boolean com.truid.android.ui.help.HelpScreenKt.access$DescriptionDropDown$lambda$2(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$1$1.invoke(boolean):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.help.HelpScreenKt.DescriptionDropDown$lambda$3(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    3:3:void com.truid.android.ui.help.HelpScreenKt.access$DescriptionDropDown$lambda$3(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    3:3:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$1$1.invoke(boolean):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2 -> n.a$b:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    androidx.compose.runtime.MutableState $selectedOptionText$delegate -> a
    androidx.compose.runtime.MutableState $expanded$delegate -> b
    java.util.List $options -> c
    void <init>(androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState,java.util.List) -> <init>
    1:1:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2.invoke(androidx.compose.material.ExposedDropdownMenuBoxScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.String com.truid.android.ui.help.HelpScreenKt.DescriptionDropDown$lambda$5(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:java.lang.String com.truid.android.ui.help.HelpScreenKt.access$DescriptionDropDown$lambda$5(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2.invoke(androidx.compose.material.ExposedDropdownMenuBoxScope,androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2.invoke(androidx.compose.material.ExposedDropdownMenuBoxScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    4:4:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> invoke
    4:4:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2.invoke(androidx.compose.material.ExposedDropdownMenuBoxScope,androidx.compose.runtime.Composer,int):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2.invoke(androidx.compose.material.ExposedDropdownMenuBoxScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$1 -> n.b:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln/b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke() -> invoke
com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$2 -> n.c:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln/c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3 -> n.d:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    androidx.compose.runtime.MutableState $expanded$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:boolean com.truid.android.ui.help.HelpScreenKt.DescriptionDropDown$lambda$2(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:boolean com.truid.android.ui.help.HelpScreenKt.access$DescriptionDropDown$lambda$2(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":12,"2":13,"3":14,"4":15,"5":16},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    12:12:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    13:13:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    15:15:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    17:17:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    18:18:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    20:20:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":22,"2":23,"3":24},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    22:22:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:float com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke$lambda$0(androidx.compose.runtime.State):0:0 -> invoke
    9:9:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4 -> n.i:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    androidx.compose.material.ExposedDropdownMenuBoxScope $this_ExposedDropdownMenuBox -> a
    androidx.compose.runtime.MutableState $expanded$delegate -> b
    java.util.List $options -> c
    androidx.compose.runtime.MutableState $selectedOptionText$delegate -> d
    void <init>(androidx.compose.material.ExposedDropdownMenuBoxScope,androidx.compose.runtime.MutableState,java.util.List,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:boolean com.truid.android.ui.help.HelpScreenKt.DescriptionDropDown$lambda$2(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:boolean com.truid.android.ui.help.HelpScreenKt.access$DescriptionDropDown$lambda$2(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4$1$1 -> n.e:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    androidx.compose.runtime.MutableState $expanded$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.help.HelpScreenKt.DescriptionDropDown$lambda$3(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.help.HelpScreenKt.access$DescriptionDropDown$lambda$3(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    2:2:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4$1$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4$2 -> n.h:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    java.util.List $options -> a
    androidx.compose.runtime.MutableState $selectedOptionText$delegate -> b
    androidx.compose.runtime.MutableState $expanded$delegate -> c
    void <init>(java.util.List,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Landroidx/compose/runtime/MutableState;Ljava/util/List;)V"}
    1:1:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4$2.invoke(androidx.compose.foundation.layout.ColumnScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4$2$1$1$1 -> n.f:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    java.lang.String $selectionOption -> a
    androidx.compose.runtime.MutableState $selectedOptionText$delegate -> b
    androidx.compose.runtime.MutableState $expanded$delegate -> c
    void <init>(java.lang.String,androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4$2$1$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.help.HelpScreenKt.DescriptionDropDown$lambda$6(androidx.compose.runtime.MutableState,java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.ui.help.HelpScreenKt.access$DescriptionDropDown$lambda$6(androidx.compose.runtime.MutableState,java.lang.String):0 -> invoke
    2:2:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4$2$1$1$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4$2$1$1$1.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.help.HelpScreenKt.DescriptionDropDown$lambda$3(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    4:4:void com.truid.android.ui.help.HelpScreenKt.access$DescriptionDropDown$lambda$3(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    4:4:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4$2$1$1$1.invoke():0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4$2$1$2 -> n.g:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    java.lang.String $selectionOption -> a
    void <init>(java.lang.String) -> <init>
    1:1:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$2$4$2$1$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$3 -> n.a$c:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    androidx.compose.ui.Modifier $modifier -> a
    int $$changed -> b
    int $$default -> c
    void <init>(androidx.compose.ui.Modifier,int,int) -> <init>
    1:1:void com.truid.android.ui.help.HelpScreenKt$DescriptionDropDown$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.help.HelpScreenKt$HelpBody$1$1 -> n.a$d:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    com.truid.android.ui.help.HelpScreenKt$HelpBody$1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln/a$d;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke() -> invoke
com.truid.android.ui.help.HelpScreenKt$HelpBody$1$2 -> n.a$e:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    com.truid.android.ui.help.HelpScreenKt$HelpBody$1$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln/a$e;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke() -> invoke
com.truid.android.ui.help.HelpScreenKt$HelpBody$2 -> n.a$f:
# {"id":"sourceFile","fileName":"HelpScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.help.HelpScreenKt$HelpBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.home.HomeScreenKt -> o.a:
# {"id":"sourceFile","fileName":"HomeScreen.kt"}
    1:1:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":14,"2":15,"3":16},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    14:14:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    15:15:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    17:17:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    20:20:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":22,"2":23,"3":24,"4":25,"5":26},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    22:22:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    25:25:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":27,"2":28,"3":29},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    27:27:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    28:28:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:android.graphics.Bitmap com.truid.android.api.Session.getClientLogo():0:0 -> a
    8:8:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    9:9:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:android.graphics.Bitmap com.truid.android.api.Session.getClientLogo():0:0 -> a
    10:10:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    11:11:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":30,"2":31,"3":32,"4":33,"5":34,"6":35,"7":36},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    30:30:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    31:31:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    36:36:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:void HomeBody(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.home.HomeScreenKt$HomeBody$2 -> o.a$a:
# {"id":"sourceFile","fileName":"HomeScreen.kt"}
    kotlin.jvm.functions.Function0 $onOpenAccount -> a
    kotlin.jvm.functions.Function0 $onHelpVideos -> b
    int $$changed -> c
    void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.home.HomeScreenKt$HomeBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.PassportCaptureScreenKt -> p.b:
# {"id":"sourceFile","fileName":"PassportCaptureScreen.kt"}
    1:1:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/n0;Lkotlin/jvm/functions/Function0;Lp/d;Landroidx/compose/runtime/Composer;II)V"}
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":31,"2":32,"3":33,"4":34,"5":35},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    31:31:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    32:32:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    33:33:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    34:34:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    35:35:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    2:2:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":36,"2":37,"3":38,"4":39,"5":40},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    36:36:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    37:37:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    38:38:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    39:39:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    40:40:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    4:4:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":41,"2":42,"3":43},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    41:41:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    42:42:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    43:43:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    5:5:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    6:6:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getShowProgressAnimation():0:0 -> a
    6:6:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getShowProgressAnimation():0:0 -> a
    7:7:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    8:8:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getShowScanCardBacksideDialog():0:0 -> a
    8:8:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    9:9:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    10:10:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getEnableFlash():0:0 -> a
    10:10:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    11:11:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    12:12:int com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getRoiPositionOffset():0:0 -> a
    12:12:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    13:13:long com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getIndicatorColor-0d7_KjU():0:0 -> a
    13:13:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    14:14:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    15:15:java.lang.String com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getUserPromptMessage():0:0 -> a
    15:15:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    16:16:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getCapturePressed():0:0 -> a
    16:16:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    17:17:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    18:18:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getShowProgressAnimation():0:0 -> a
    18:18:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    19:19:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    20:20:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":44,"2":45,"3":46},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    44:44:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    45:45:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    46:46:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    21:21:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    22:22:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":47,"2":48,"3":49,"4":50,"5":51},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    47:47:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    48:48:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    49:49:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    50:50:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    51:51:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    23:23:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    24:24:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":52,"2":53,"3":54,"4":55,"5":56},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    52:52:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    53:53:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    54:54:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    55:55:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    56:56:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    25:25:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":57,"2":58,"3":59},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    57:57:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    58:58:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    59:59:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    26:26:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    27:27:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getDone():0:0 -> a
    27:27:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0 -> a
    28:28:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    29:29:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":60,"2":61,"3":62,"4":63,"5":64,"6":65,"7":66},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    60:60:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    61:61:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    62:62:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    63:63:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    64:64:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    65:65:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    66:66:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
    30:30:void PassportCaptureBody(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1 -> p.b$a:
# {"id":"sourceFile","fileName":"PassportCaptureScreen.kt"}
    com.truid.android.vision.PassportCaptureHandler $passportCaptureHandler -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0;"}
    com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel $viewModel -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/d;"}
    void <init>(com.truid.android.vision.PassportCaptureHandler,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/n0;Lp/d;)V"}
    1:1:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getCapturePressed():0:0 -> invoke
    2:2:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1.invoke(androidx.camera.core.ImageProxy):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getCapturePressed():0:0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1.invoke(androidx.camera.core.ImageProxy):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getScanningBackSide():0:0 -> invoke
    5:5:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1.invoke(androidx.camera.core.ImageProxy):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getScanningBackSide():0:0 -> invoke
    6:6:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1.invoke(androidx.camera.core.ImageProxy):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1.invoke(androidx.camera.core.ImageProxy):0:0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1 -> p.a:
# {"id":"sourceFile","fileName":"PassportCaptureScreen.kt"}
    com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/d;"}
    void <init>(com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;)V"}
    1:1:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    2:2:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getShowProgressAnimation():0:0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    4:4:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getShowScanCardBacksideDialog():0:0 -> invoke
    5:5:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    5:5:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getCapturePressed():0:0 -> invoke
    6:6:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    6:6:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:boolean com.truid.android.vision.PassportCaptureHandler$DetectionProgress.getEnableFlash():0:0 -> invoke
    7:7:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setEnableFlash(boolean):0:0 -> invoke
    8:8:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    8:8:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:int com.truid.android.vision.PassportCaptureHandler$DetectionProgress.getProgress():0:0 -> invoke
    9:9:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    9:9:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setProgress(int):0:0 -> invoke
    10:10:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    10:10:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    11:11:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    12:12:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setDone(boolean):0:0 -> invoke
    12:12:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    12:12:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    13:13:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    13:13:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setShowProgressAnimation(boolean):0:0 -> invoke
    14:14:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    14:14:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    15:15:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    15:15:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setShowScanCardBacksideDialog(boolean):0:0 -> invoke
    16:16:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    16:16:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    17:17:int com.truid.android.vision.PassportCaptureHandler$DetectionProgress.getRoiPosition():0:0 -> invoke
    17:17:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    17:17:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    18:18:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setRoiPositionOffset(int):0:0 -> invoke
    18:18:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    18:18:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    19:19:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    20:20:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    20:20:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    20:20:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    21:21:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setIndicatorColor-8_81llA(long):0:0 -> invoke
    22:22:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    22:22:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    23:23:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    24:24:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    24:24:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    25:25:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    25:25:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    26:26:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    26:26:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    27:27:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    27:27:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    28:28:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    28:28:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    28:28:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    29:29:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    30:30:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    30:30:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    30:30:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    31:31:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    32:32:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setUserPromptMessage(java.lang.String):0:0 -> invoke
    32:32:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    32:32:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    33:33:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.update(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0:0 -> invoke
    33:33:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$1$1.invoke(com.truid.android.vision.PassportCaptureHandler$DetectionProgress,com.truid.android.vision.PassportCaptureHandler$UserPrompt):0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$2 -> p.b$b:
# {"id":"sourceFile","fileName":"PassportCaptureScreen.kt"}
    com.truid.android.vision.PassportCaptureHandler $passportCaptureHandler -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0;"}
    com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel $viewModel -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/d;"}
    void <init>(com.truid.android.vision.PassportCaptureHandler,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/n0;Lp/d;)V"}
    1:1:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$2.invoke-0a9Yr6o(long,long):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:int com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getRoiPositionOffset():0:0 -> invoke
    2:2:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$2.invoke-0a9Yr6o(long,long):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:int com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getRoiPositionOffset():0:0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$2.invoke-0a9Yr6o(long,long):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$2.invoke-0a9Yr6o(long,long):0:0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$3$1 -> p.b$c:
# {"id":"sourceFile","fileName":"PassportCaptureScreen.kt"}
    com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/d;"}
    void <init>(com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;)V"}
    1:1:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$3$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setCapturePressed(boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$3$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setCapturePressed(boolean):0:0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$3$1.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4 -> p.b$d:
# {"id":"sourceFile","fileName":"PassportCaptureScreen.kt"}
    com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/d;"}
    void <init>(com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;I)V"}
    1:1:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    15:15:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    17:17:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    18:18:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    20:20:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    25:25:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    27:27:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:int com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getProgress():0:0 -> invoke
    7:7:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:int com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getProgress():0:0 -> invoke
    8:8:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    10:10:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getShowScanCardBacksideDialog():0:0 -> invoke
    10:10:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":28,"2":29,"3":30,"4":31,"5":32,"6":33,"7":34},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    28:28:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    30:30:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    32:32:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    33:33:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    34:34:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    13:13:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4$1$1$1 -> p.c:
# {"id":"sourceFile","fileName":"PassportCaptureScreen.kt"}
    com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/d;"}
    void <init>(com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;)V"}
    1:1:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4$1$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setShowScanCardBacksideDialog(boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.scanCardBacksideConfirmed():0 -> invoke
    2:2:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4$1$1$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setShowScanCardBacksideDialog(boolean):0:0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.scanCardBacksideConfirmed():0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4$1$1$1.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setScanningBackSide(boolean):0:0 -> invoke
    4:4:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.scanCardBacksideConfirmed():0 -> invoke
    4:4:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$4$1$1$1.invoke():0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$5$1$1 -> p.b$e:
# {"id":"sourceFile","fileName":"PassportCaptureScreen.kt"}
    com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/d;"}
    kotlin.jvm.functions.Function0 $startNextStep -> b
    void <init>(com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,kotlin.jvm.functions.Function0) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$5$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getNextStepStarted():0:0 -> invoke
    2:2:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$5$1$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:boolean com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.getNextStepStarted():0:0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$5$1$1.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$5$1$1.invoke():0:0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setNextStepStarted(boolean):0:0 -> invoke
    5:5:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$5$1$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:void com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel.setNextStepStarted(boolean):0:0 -> invoke
    6:6:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$5$1$1.invoke():0 -> invoke
    6:6:java.lang.Object invoke():0 -> invoke
    7:7:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$1$5$1$1.invoke():0:0 -> invoke
    7:7:java.lang.Object invoke():0 -> invoke
    8:8:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$2 -> p.b$f:
# {"id":"sourceFile","fileName":"PassportCaptureScreen.kt"}
    com.truid.android.vision.PassportCaptureHandler $passportCaptureHandler -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0;"}
    kotlin.jvm.functions.Function0 $startNextStep -> b
    com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel $viewModel -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lp/d;"}
    int $$changed -> d
    int $$default -> e
    void <init>(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function0,com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel,int,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/n0;Lkotlin/jvm/functions/Function0;Lp/d;II)V"}
    1:1:void com.truid.android.ui.passportcapture.PassportCaptureScreenKt$PassportCaptureBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.PassportCaptureScreenViewModel -> p.d:
# {"id":"sourceFile","fileName":"PassportCaptureScreenViewModel.kt"}
    androidx.compose.runtime.MutableState enableFlash$delegate -> a
    androidx.compose.runtime.MutableState progress$delegate -> b
    androidx.compose.runtime.MutableState showProgressAnimation$delegate -> c
    androidx.compose.runtime.MutableState done$delegate -> d
    androidx.compose.runtime.MutableState nextStepStarted$delegate -> e
    androidx.compose.runtime.MutableState indicatorColor$delegate -> f
    androidx.compose.runtime.MutableState userPromptMessage$delegate -> g
    androidx.compose.runtime.MutableState roiPositionOffset$delegate -> h
    androidx.compose.runtime.MutableState showScanCardBacksideDialog$delegate -> i
    androidx.compose.runtime.MutableState scanningBackSide$delegate -> j
    androidx.compose.runtime.MutableState capturePressed$delegate -> k
    void <init>() -> <init>
com.truid.android.ui.passportcapture.components.ComposableSingletons$UserPromptsKt -> q.a:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    kotlin.jvm.functions.Function2 lambda-1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-2 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    void <clinit>() -> <clinit>
com.truid.android.ui.passportcapture.components.ComposableSingletons$UserPromptsKt$lambda-1$1 -> q.a$a:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    com.truid.android.ui.passportcapture.components.ComposableSingletons$UserPromptsKt$lambda-1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/a$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.ComposableSingletons$UserPromptsKt$lambda-1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.ComposableSingletons$UserPromptsKt$lambda-2$1 -> q.a$b:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    com.truid.android.ui.passportcapture.components.ComposableSingletons$UserPromptsKt$lambda-2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/a$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.ComposableSingletons$UserPromptsKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:int com.truid.android.api.Session.getCurrentStepIndex$sdk_release(java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.ui.passportcapture.components.ComposableSingletons$UserPromptsKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.components.ComposableSingletons$UserPromptsKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.OverlayKt -> q.b:
# {"id":"sourceFile","fileName":"Overlay.kt"}
    void Overlay-iJQMabo(int,long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int) -> a
com.truid.android.ui.passportcapture.components.OverlayKt$Overlay$1$1 -> q.b$a:
# {"id":"sourceFile","fileName":"Overlay.kt"}
    kotlin.jvm.functions.Function2 $onGloballyPositioned -> a
    long $indicatorColor -> b
    void <init>(kotlin.jvm.functions.Function2,long) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.OverlayKt$Overlay$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.OverlayKt$Overlay$2 -> q.b$b:
# {"id":"sourceFile","fileName":"Overlay.kt"}
    int $verticalOffset -> a
    long $indicatorColor -> b
    kotlin.jvm.functions.Function2 $onGloballyPositioned -> c
    int $$changed -> d
    void <init>(int,long,kotlin.jvm.functions.Function2,int) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.OverlayKt$Overlay$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.PopupDialogKt -> q.c:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    void PopupDialog(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int) -> a
com.truid.android.ui.passportcapture.components.PopupDialogKt$PopupDialog$1$1 -> q.c$a:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    kotlin.jvm.functions.Function0 $onConfirm -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.PopupDialogKt$PopupDialog$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.passportcapture.components.PopupDialogKt$PopupDialog$2 -> q.c$b:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    kotlin.jvm.functions.Function0 $onConfirm -> a
    int $$dirty -> b
    java.lang.String $confirmButtonText -> c
    void <init>(kotlin.jvm.functions.Function0,int,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.passportcapture.components.PopupDialogKt$PopupDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.PopupDialogKt$PopupDialog$2$1$1 -> q.d:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    kotlin.jvm.functions.Function0 $onConfirm -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.PopupDialogKt$PopupDialog$2$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.passportcapture.components.PopupDialogKt$PopupDialog$2$2 -> q.e:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    java.lang.String $confirmButtonText -> a
    int $$dirty -> b
    void <init>(java.lang.String,int) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.PopupDialogKt$PopupDialog$2$2.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.PopupDialogKt$PopupDialog$3 -> q.c$c:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    java.lang.String $message -> a
    int $$dirty -> b
    void <init>(java.lang.String,int) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.PopupDialogKt$PopupDialog$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.PopupDialogKt$PopupDialog$4 -> q.c$d:
# {"id":"sourceFile","fileName":"PopupDialog.kt"}
    java.lang.String $message -> a
    java.lang.String $confirmButtonText -> b
    kotlin.jvm.functions.Function0 $onConfirm -> c
    int $$changed -> d
    int $$default -> e
    void <init>(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,int,int) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.PopupDialogKt$PopupDialog$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.ProgressAnimationKt -> q.f:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    1:1:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15,"4":16,"5":17},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    13:13:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    14:14:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    15:15:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    16:16:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    17:17:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    2:2:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20,"4":21,"5":22},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    18:18:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    19:19:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    20:20:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    21:21:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    22:22:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    4:4:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    23:23:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    24:24:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    25:25:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    5:5:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    6:6:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":26,"2":27,"3":28,"4":29,"5":30},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    26:26:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    27:27:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    28:28:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    29:29:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    30:30:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    7:7:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    8:8:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":31,"2":32,"3":33,"4":34,"5":35},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    31:31:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    32:32:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    33:33:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    34:34:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    35:35:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    9:9:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":36,"2":37,"3":38},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    36:36:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    37:37:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    38:38:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    10:10:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    11:11:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":39,"2":40,"3":41,"4":42,"5":43,"6":44,"7":45},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    39:39:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    40:40:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    41:41:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    42:42:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    43:43:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    44:44:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    45:45:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    12:12:void ProgressAnimation-TXZ119U(float,long,float,float,boolean,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$1 -> q.f$a:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/f$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke() -> invoke
com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$2$1 -> q.f$b:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    int label -> a
    int $index -> b
    androidx.compose.animation.core.Animatable $animatable -> c
    void <init>(int,androidx.compose.animation.core.Animatable,kotlin.coroutines.Continuation) -> <init>
    kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    1:1:kotlin.coroutines.Continuation com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$2$1.create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> invoke
    1:1:java.lang.Object com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$2$1.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$2$1.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$2$1$1 -> q.f$b$a:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$2$1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lq/f$b$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$2$1$1.invoke(androidx.compose.animation.core.KeyframesSpec$KeyframesSpecConfig):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$3 -> q.f$c:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    int label -> a
    androidx.compose.animation.core.Animatable $completionAnimatable -> b
    void <init>(androidx.compose.animation.core.Animatable,kotlin.coroutines.Continuation) -> <init>
    kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    1:1:kotlin.coroutines.Continuation com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$3.create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> invoke
    1:1:java.lang.Object com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$3.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$3.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$4$1 -> q.f$d:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    int label -> a
    int $index -> b
    androidx.compose.animation.core.Animatable $animatable -> c
    void <init>(int,androidx.compose.animation.core.Animatable,kotlin.coroutines.Continuation) -> <init>
    kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    1:1:kotlin.coroutines.Continuation com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$4$1.create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> invoke
    1:1:java.lang.Object com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$4$1.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$4$1.invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$5$1$1$1 -> q.f$e:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    float $value -> a
    float $distance -> b
    void <init>(float,float) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$5$1$1$1.invoke(androidx.compose.ui.graphics.GraphicsLayerScope):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$6 -> q.f$f:
# {"id":"sourceFile","fileName":"ProgressAnimation.kt"}
    float $circleSize -> a
    long $circleColor -> b
    float $spaceBetween -> c
    float $travelDistance -> d
    boolean $completed -> e
    kotlin.jvm.functions.Function0 $onAnimationComplete -> f
    int $$changed -> g
    int $$default -> h
    void <init>(float,long,float,float,boolean,kotlin.jvm.functions.Function0,int,int) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.ProgressAnimationKt$ProgressAnimation$6.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.ProgressBarKt -> q.g:
# {"id":"sourceFile","fileName":"ProgressBar.kt"}
    1:1:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    17:17:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    20:20:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27,"4":28,"5":29},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    25:25:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    28:28:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":30,"2":31,"3":32},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    30:30:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    31:31:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void com.truid.android.ui.passportcapture.components.ProgressBarKt.PassportCaptureProgressBar$lambda$4$lambda$2(androidx.compose.runtime.MutableState,int):0:0 -> a
    8:8:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    9:9:int com.truid.android.ui.passportcapture.components.ProgressBarKt.PassportCaptureProgressBar$lambda$4$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    9:9:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    10:10:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:float com.truid.android.ui.passportcapture.components.ProgressBarKt.PassportCaptureProgressBar$lambda$4$lambda$3(androidx.compose.runtime.State):0:0 -> a
    11:11:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    12:12:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:int com.truid.android.ui.passportcapture.components.ProgressBarKt.PassportCaptureProgressBar$lambda$4$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    13:13:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    14:14:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    15:15:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":33,"2":34,"3":35,"4":36,"5":37,"6":38,"7":39},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    33:33:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    36:36:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    38:38:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void PassportCaptureProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.passportcapture.components.ProgressBarKt$PassportCaptureProgressBar$1$progressState$2$1 -> q.g$a:
# {"id":"sourceFile","fileName":"ProgressBar.kt"}
    int $scanProgress -> a
    void <init>(int) -> <init>
    1:1:androidx.compose.runtime.MutableState com.truid.android.ui.passportcapture.components.ProgressBarKt$PassportCaptureProgressBar$1$progressState$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
com.truid.android.ui.passportcapture.components.ProgressBarKt$PassportCaptureProgressBar$2 -> q.g$b:
# {"id":"sourceFile","fileName":"ProgressBar.kt"}
    int $scanProgress -> a
    int $$changed -> b
    void <init>(int,int) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.ProgressBarKt$PassportCaptureProgressBar$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.TopBarKt -> q.h:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    1:1:void com.truid.android.ui.passportcapture.components.TopBarKt.ProgressBar$lambda$3(androidx.compose.runtime.MutableState,int):0:0 -> a
    1:1:void ProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    2:2:int com.truid.android.ui.passportcapture.components.TopBarKt.ProgressBar$lambda$2(androidx.compose.runtime.MutableState):0:0 -> a
    2:2:void ProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    3:3:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    15:15:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20,"4":21,"5":22},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    18:18:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    20:20:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25,"4":26,"5":27},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    23:23:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    25:25:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":28,"2":29,"3":30},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    28:28:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:float com.truid.android.ui.passportcapture.components.TopBarKt.ProgressBar$lambda$4(androidx.compose.runtime.State):0:0 -> a
    11:11:void ProgressBar(int,androidx.compose.runtime.Composer,int):0 -> a
    12:12:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":31,"2":32,"3":33,"4":34,"5":35,"6":36,"7":37},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    31:31:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    36:36:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void ProgressBar(int,androidx.compose.runtime.Composer,int):0:0 -> a
    1:1:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":12,"2":13,"3":14},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    12:12:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    13:13:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    14:14:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    2:2:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    3:3:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    15:15:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    16:16:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    17:17:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    18:18:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    19:19:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    4:4:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    5:5:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    20:20:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    21:21:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    22:22:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    23:23:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    24:24:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    6:6:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    25:25:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    26:26:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    27:27:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    7:7:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    8:8:android.graphics.Bitmap com.truid.android.api.Session.getClientLogo():0:0 -> b
    8:8:void TopBar(int,androidx.compose.runtime.Composer,int):0 -> b
    9:9:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
    10:10:android.graphics.Bitmap com.truid.android.api.Session.getClientLogo():0:0 -> b
    10:10:void TopBar(int,androidx.compose.runtime.Composer,int):0 -> b
    11:11:void TopBar(int,androidx.compose.runtime.Composer,int):0:0 -> b
com.truid.android.ui.passportcapture.components.TopBarKt$ProgressBar$2 -> q.h$a:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    int $progress -> a
    int $$changed -> b
    void <init>(int,int) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.TopBarKt$ProgressBar$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.TopBarKt$ProgressBar$progressState$2$1 -> q.h$b:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    int $progress -> a
    void <init>(int) -> <init>
    1:1:androidx.compose.runtime.MutableState com.truid.android.ui.passportcapture.components.TopBarKt$ProgressBar$progressState$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
com.truid.android.ui.passportcapture.components.TopBarKt$TopBar$2 -> q.h$c:
# {"id":"sourceFile","fileName":"TopBar.kt"}
    int $progress -> a
    int $$changed -> b
    void <init>(int,int) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.TopBarKt$TopBar$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.UserPromptsKt -> q.j:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    1:1:kotlin.jvm.functions.Function2 com.truid.android.ui.passportcapture.components.ComposableSingletons$UserPromptsKt.getLambda-1$sdk_release():0:0 -> a
    1:1:void UserPrompts(java.lang.String,boolean,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0 -> a
    2:2:void UserPrompts(java.lang.String,boolean,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:kotlin.jvm.functions.Function2 com.truid.android.ui.passportcapture.components.ComposableSingletons$UserPromptsKt.getLambda-2$sdk_release():0:0 -> a
    3:3:void UserPrompts(java.lang.String,boolean,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0 -> a
    4:4:void UserPrompts(java.lang.String,boolean,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$1 -> q.j$a:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    boolean $capturePressed -> a
    kotlin.jvm.functions.Function0 $onCapturePressed -> b
    int $$dirty -> c
    java.lang.String $bottomBarPrompt -> d
    void <init>(boolean,kotlin.jvm.functions.Function0,int,java.lang.String) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$1$1 -> q.i:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    java.lang.String $bottomBarPrompt -> a
    int $$dirty -> b
    void <init>(java.lang.String,int) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2 -> q.j$b:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    kotlin.jvm.functions.Function2 $bodyContent -> a
    int $$dirty -> b
    void <init>(kotlin.jvm.functions.Function2,int) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    10:10:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    11:11:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    12:12:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15,"4":16,"5":17},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    13:13:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    15:15:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    17:17:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20,"4":21,"5":22},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    18:18:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    20:20:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    23:23:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    25:25:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$2.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$3 -> q.j$c:
# {"id":"sourceFile","fileName":"UserPrompts.kt"}
    java.lang.String $bottomBarPrompt -> a
    boolean $capturePressed -> b
    kotlin.jvm.functions.Function0 $onCapturePressed -> c
    kotlin.jvm.functions.Function2 $bodyContent -> d
    int $$changed -> e
    int $$default -> f
    void <init>(java.lang.String,boolean,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2,int,int) -> <init>
    1:1:void com.truid.android.ui.passportcapture.components.UserPromptsKt$UserPrompts$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.QuestionnaireKt -> r.a:
# {"id":"sourceFile","fileName":"Questionnaire.kt"}
    1:1:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    10:10:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    11:11:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    12:12:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    2:2:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    3:3:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15,"4":16,"5":17},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    13:13:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    14:14:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    15:15:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    16:16:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    17:17:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    4:4:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    5:5:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20,"4":21,"5":22},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    18:18:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    19:19:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    20:20:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    21:21:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    22:22:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    6:6:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    23:23:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    24:24:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    25:25:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    7:7:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
    8:8:java.lang.String com.truid.android.ui.questionnaire.QuestionnaireKt.Questionnaire$lambda$4$lambda$0(androidx.compose.runtime.MutableState):0:0 -> a
    8:8:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0 -> a
    9:9:void Questionnaire(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$1 -> r.a$a:
# {"id":"sourceFile","fileName":"Questionnaire.kt"}
    com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lr/a$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$1.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$2$1$1$1 -> r.a$b:
# {"id":"sourceFile","fileName":"Questionnaire.kt"}
    java.lang.String $choice -> a
    kotlin.jvm.functions.Function1 $selectedChoice -> b
    androidx.compose.runtime.MutableState $selection$delegate -> c
    void <init>(java.lang.String,kotlin.jvm.functions.Function1,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$2$1$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.QuestionnaireKt.Questionnaire$lambda$4$lambda$1(androidx.compose.runtime.MutableState,java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.QuestionnaireKt.access$Questionnaire$lambda$4$lambda$1(androidx.compose.runtime.MutableState,java.lang.String):0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$2$1$1$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$2$1$1$1.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.String com.truid.android.ui.questionnaire.QuestionnaireKt.Questionnaire$lambda$4$lambda$0(androidx.compose.runtime.MutableState):0:0 -> invoke
    4:4:java.lang.String com.truid.android.ui.questionnaire.QuestionnaireKt.access$Questionnaire$lambda$4$lambda$0(androidx.compose.runtime.MutableState):0 -> invoke
    4:4:void com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$2$1$1$1.invoke():0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$2$1$1$1.invoke():0:0 -> invoke
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$2$selection$2 -> r.a$c:
# {"id":"sourceFile","fileName":"Questionnaire.kt"}
    com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$2$selection$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lr/a$c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:androidx.compose.runtime.MutableState com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$2$selection$2.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$3 -> r.a$d:
# {"id":"sourceFile","fileName":"Questionnaire.kt"}
    androidx.compose.ui.Modifier $modifier -> a
    java.lang.String $question -> b
    java.util.List $choices -> c
    kotlin.jvm.functions.Function1 $selectedChoice -> d
    int $$changed -> e
    int $$default -> f
    void <init>(androidx.compose.ui.Modifier,java.lang.String,java.util.List,kotlin.jvm.functions.Function1,int,int) -> <init>
    1:1:void com.truid.android.ui.questionnaire.QuestionnaireKt$Questionnaire$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.ComposableSingletons$PhoneNumberScreenKt -> s.a:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    kotlin.jvm.functions.Function2 lambda-1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    void <clinit>() -> <clinit>
com.truid.android.ui.questionnaire.phonenumber.ComposableSingletons$PhoneNumberScreenKt$lambda-1$1 -> s.a$a:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    com.truid.android.ui.questionnaire.phonenumber.ComposableSingletons$PhoneNumberScreenKt$lambda-1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/a$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.questionnaire.phonenumber.ComposableSingletons$PhoneNumberScreenKt$lambda-1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:long com.truid.android.ui.theme.ColorKt.getDisabledStrokeColor():0:0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.phonenumber.ComposableSingletons$PhoneNumberScreenKt$lambda-1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.questionnaire.phonenumber.ComposableSingletons$PhoneNumberScreenKt$lambda-1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt -> s.b:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    1:1:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    15:15:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    20:20:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    25:25:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    6:6:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0 -> a
    7:7:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":28,"2":29,"3":30},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    28:28:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":31,"2":32,"3":33,"4":34,"5":35},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    31:31:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":36,"2":37,"3":38,"4":39,"5":40},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    36:36:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    38:38:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    40:40:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":41,"2":42,"3":43},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    41:41:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    42:42:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    43:43:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void CardWithBackdrop(kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    44:44:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    44:44:void Header(androidx.compose.runtime.Composer,int):0 -> a
    45:45:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    46:46:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":55,"2":56,"3":57},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    55:55:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    56:56:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    57:57:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    47:47:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    48:48:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":58,"2":59,"3":60,"4":61,"5":62},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    58:58:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    59:59:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    60:60:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    61:61:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    62:62:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    49:49:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    50:50:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":63,"2":64,"3":65,"4":66,"5":67},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    63:63:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    64:64:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    65:65:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    66:66:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    67:67:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    51:51:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":68,"2":69,"3":70},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    68:68:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    69:69:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    70:70:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    52:52:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    53:53:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":71,"2":72,"3":73,"4":74,"5":75,"6":76,"7":77},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    71:71:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    72:72:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    73:73:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    74:74:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    75:75:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    76:76:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    77:77:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    54:54:void Header(androidx.compose.runtime.Composer,int):0:0 -> a
    78:78:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":102,"2":103,"3":104},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    102:102:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    103:103:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    104:104:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    79:79:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    80:80:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":105,"2":106,"3":107,"4":108,"5":109},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    105:105:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    106:106:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    107:107:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    108:108:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    109:109:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    81:81:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    82:82:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":110,"2":111,"3":112,"4":113,"5":114},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    110:110:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    111:111:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    112:112:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    113:113:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    114:114:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    83:83:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":115,"2":116,"3":117},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    115:115:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    116:116:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    117:117:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    84:84:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    85:85:java.lang.String com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.PhoneNumberBody$lambda$6$lambda$0(androidx.compose.runtime.MutableState):0:0 -> a
    85:85:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    86:86:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    87:87:java.lang.String com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.PhoneNumberBody$lambda$6$lambda$0(androidx.compose.runtime.MutableState):0:0 -> a
    87:87:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    88:88:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    89:89:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.PhoneNumberBody$lambda$6$lambda$3(androidx.compose.runtime.MutableState,boolean):0:0 -> a
    89:89:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    90:90:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    91:91:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":118,"2":119,"3":120},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    118:118:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    119:119:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    120:120:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    92:92:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    93:93:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":121,"2":122,"3":123,"4":124,"5":125},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    121:121:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    122:122:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    123:123:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    124:124:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    125:125:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    94:94:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    95:95:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":126,"2":127,"3":128,"4":129,"5":130},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    126:126:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    127:127:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    128:128:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    129:129:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    130:130:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    96:96:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":131,"2":132,"3":133},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    131:131:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    132:132:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    133:133:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    97:97:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    98:98:boolean com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.PhoneNumberBody$lambda$6$lambda$2(androidx.compose.runtime.MutableState):0:0 -> a
    98:98:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    99:99:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    100:100:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":134,"2":135,"3":136,"4":137,"5":138,"6":139,"7":140},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    134:134:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    135:135:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    136:136:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    137:137:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    138:138:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    139:139:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    140:140:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    101:101:void PhoneNumberBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$CardWithBackdrop$1$1$1 -> s.b$a:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    long $backgroundColor -> a
    void <init>(long) -> <init>
    1:1:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$CardWithBackdrop$1$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$CardWithBackdrop$1$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$CardWithBackdrop$1$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$CardWithBackdrop$1$2$1 -> s.b$b:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    kotlin.jvm.functions.Function2 $content -> a
    int $$dirty -> b
    void <init>(kotlin.jvm.functions.Function2,int) -> <init>
    1:1:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$CardWithBackdrop$1$2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$CardWithBackdrop$2 -> s.b$c:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    kotlin.jvm.functions.Function2 $content -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function2,int) -> <init>
    1:1:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$CardWithBackdrop$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$Header$2 -> s.b$d:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    int $$changed -> a
    void <init>(int) -> <init>
    1:1:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$Header$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1 -> s.b$e:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    androidx.compose.runtime.MutableState $isValidPhoneNumber$delegate -> a
    kotlin.jvm.functions.Function0 $onNextClick -> b
    androidx.compose.runtime.MutableState $phoneNumber$delegate -> c
    androidx.compose.ui.platform.SoftwareKeyboardController $keyboardController -> d
    void <init>(androidx.compose.runtime.MutableState,kotlin.jvm.functions.Function0,int,androidx.compose.runtime.MutableState,androidx.compose.ui.platform.SoftwareKeyboardController) -> <init>
    1:1:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    18:18:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    20:20:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":21,"2":22,"3":23,"4":24,"5":25},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    21:21:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    25:25:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":26,"2":27,"3":28,"4":29,"5":30},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    26:26:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    27:27:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    28:28:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    30:30:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":31,"2":32,"3":33},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    31:31:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    32:32:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    33:33:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.String com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.PhoneNumberBody$lambda$6$lambda$0(androidx.compose.runtime.MutableState):0:0 -> invoke
    9:9:java.lang.String com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.access$PhoneNumberBody$lambda$6$lambda$0(androidx.compose.runtime.MutableState):0 -> invoke
    9:9:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:long com.truid.android.ui.theme.ColorKt.getDisabledStrokeColor():0:0 -> invoke
    11:11:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    12:12:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    13:13:kotlin.jvm.functions.Function2 com.truid.android.ui.questionnaire.phonenumber.ComposableSingletons$PhoneNumberScreenKt.getLambda-1$sdk_release():0:0 -> invoke
    13:13:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    14:14:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":34,"2":35,"3":36,"4":37,"5":38,"6":39,"7":40},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    34:34:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    35:35:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    36:36:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    36:36:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    37:37:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    37:37:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    38:38:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    38:38:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    39:39:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    39:39:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    40:40:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1$1$1$1 -> s.c:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    androidx.compose.runtime.MutableState $isValidPhoneNumber$delegate -> b
    void <init>(kotlin.jvm.functions.Function0,androidx.compose.runtime.MutableState) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1$1$1$1.invoke(androidx.compose.foundation.text.KeyboardActionScope):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:boolean com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.PhoneNumberBody$lambda$6$lambda$2(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:boolean com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.access$PhoneNumberBody$lambda$6$lambda$2(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1$1$1$1.invoke(androidx.compose.foundation.text.KeyboardActionScope):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1$1$1$1.invoke(androidx.compose.foundation.text.KeyboardActionScope):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1$1$2$1 -> s.d:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    androidx.compose.ui.platform.SoftwareKeyboardController $keyboardController -> a
    androidx.compose.runtime.MutableState $phoneNumber$delegate -> b
    void <init>(androidx.compose.ui.platform.SoftwareKeyboardController,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1$1$2$1.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.PhoneNumberBody$lambda$6$lambda$1(androidx.compose.runtime.MutableState,java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.access$PhoneNumberBody$lambda$6$lambda$1(androidx.compose.runtime.MutableState,java.lang.String):0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1$1$2$1.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1$1$2$1.invoke(java.lang.String):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.String com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.PhoneNumberBody$lambda$6$lambda$0(androidx.compose.runtime.MutableState):0:0 -> invoke
    4:4:java.lang.String com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.access$PhoneNumberBody$lambda$6$lambda$0(androidx.compose.runtime.MutableState):0 -> invoke
    4:4:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1$1$2$1.invoke(java.lang.String):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$1$1$1$2$1.invoke(java.lang.String):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$2$1 -> s.b$f:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    androidx.compose.runtime.MutableState $phoneNumber$delegate -> a
    kotlin.jvm.functions.Function0 $onNextClick -> b
    void <init>(androidx.compose.runtime.MutableState,kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.PhoneNumberBody$lambda$6$lambda$0(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:java.lang.String com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt.access$PhoneNumberBody$lambda$6$lambda$0(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$2$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.api.PersonalDetailsVerification.setMobileNumber(java.lang.String):0:0 -> invoke
    3:3:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$2$1.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$2$1.invoke():0:0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$2$1$1 -> s.e:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$2$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$2$1$2 -> s.f:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$2$1$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/f;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$2$1$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$isValidPhoneNumber$2 -> s.b$g:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$isValidPhoneNumber$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/b$g;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:androidx.compose.runtime.MutableState com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$isValidPhoneNumber$2.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$phoneNumber$2 -> s.b$h:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$phoneNumber$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/b$h;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:androidx.compose.runtime.MutableState com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$1$phoneNumber$2.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$2 -> s.b$i:
# {"id":"sourceFile","fileName":"PhoneNumberScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.questionnaire.phonenumber.PhoneNumberScreenKt$PhoneNumberBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt -> t.b:
# {"id":"sourceFile","fileName":"BirthPlaceScreen.kt"}
    1:1:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    17:17:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    20:20:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":22,"2":23,"3":24,"4":25,"5":26},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    22:22:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    25:25:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":27,"2":28,"3":29},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    27:27:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    28:28:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":30,"2":31,"3":32},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    30:30:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    31:31:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":33,"2":34,"3":35,"4":36,"5":37},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    33:33:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    36:36:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":38,"2":39,"3":40,"4":41,"5":42},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    38:38:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    40:40:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    41:41:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    42:42:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":43,"2":44,"3":45},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    43:43:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    44:44:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    45:45:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:java.lang.String com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt.BirthPlaceBody$lambda$0(androidx.compose.runtime.MutableState):0:0 -> a
    13:13:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    14:14:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    15:15:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":46,"2":47,"3":48,"4":49,"5":50,"6":51,"7":52},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    46:46:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    47:47:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    48:48:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    49:49:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    50:50:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    51:51:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    52:52:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void BirthPlaceBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$1$1 -> t.b$a:
# {"id":"sourceFile","fileName":"BirthPlaceScreen.kt"}
    androidx.compose.runtime.MutableState $selectedChoice$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.util.List com.truid.android.api.PersonalDetailsVerification.getCities():0:0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$1$1$1$1 -> t.a:
# {"id":"sourceFile","fileName":"BirthPlaceScreen.kt"}
    androidx.compose.runtime.MutableState $selectedChoice$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$1$1$1$1.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt.BirthPlaceBody$lambda$1(androidx.compose.runtime.MutableState,java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt.access$BirthPlaceBody$lambda$1(androidx.compose.runtime.MutableState,java.lang.String):0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$1$1$1$1.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$2$1 -> t.b$b:
# {"id":"sourceFile","fileName":"BirthPlaceScreen.kt"}
    androidx.compose.runtime.MutableState $selectedChoice$delegate -> a
    kotlin.jvm.functions.Function0 $onNextClick -> b
    void <init>(androidx.compose.runtime.MutableState,kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt.BirthPlaceBody$lambda$0(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:java.lang.String com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt.access$BirthPlaceBody$lambda$0(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$2$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.api.PersonalDetailsVerification.setCityUserSelection(java.lang.String):0:0 -> invoke
    3:3:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$2$1.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$2$1.invoke():0:0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void com.truid.android.api.PersonalDetailsVerification.uploadResponses$sdk_release$default(com.truid.android.api.PersonalDetailsVerification,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> invoke
    5:5:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$2$1.invoke():0 -> invoke
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$2$1$1 -> t.c:
# {"id":"sourceFile","fileName":"BirthPlaceScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$1$2$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$2 -> t.b$c:
# {"id":"sourceFile","fileName":"BirthPlaceScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$selectedChoice$2 -> t.b$d:
# {"id":"sourceFile","fileName":"BirthPlaceScreen.kt"}
    com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$selectedChoice$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lt/b$d;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:androidx.compose.runtime.MutableState com.truid.android.ui.questionnaire.securityquestions.BirthPlaceScreenKt$BirthPlaceBody$selectedChoice$2.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt -> t.d:
# {"id":"sourceFile","fileName":"MotherNameScreen.kt"}
    1:1:boolean com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt.MotherNameBody$lambda$3(androidx.compose.runtime.MutableState):0:0 -> a
    1:1:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    2:2:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":17,"2":18,"3":19,"4":20,"5":21},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    17:17:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    20:20:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":22,"2":23,"3":24,"4":25,"5":26},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    22:22:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    25:25:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":27,"2":28,"3":29},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    27:27:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    28:28:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":30,"2":31,"3":32},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    30:30:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    31:31:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":33,"2":34,"3":35,"4":36,"5":37},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    33:33:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    36:36:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":38,"2":39,"3":40,"4":41,"5":42},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    38:38:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    40:40:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    41:41:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    42:42:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":43,"2":44,"3":45},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    43:43:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    44:44:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    45:45:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    15:15:java.lang.String com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt.MotherNameBody$lambda$0(androidx.compose.runtime.MutableState):0:0 -> a
    15:15:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    16:16:void MotherNameBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    46:46:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":55,"2":56,"3":57},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    55:55:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    56:56:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    57:57:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    47:47:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    48:48:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":58,"2":59,"3":60,"4":61,"5":62},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    58:58:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    59:59:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    60:60:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    61:61:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    62:62:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    49:49:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    50:50:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":63,"2":64,"3":65,"4":66,"5":67},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    63:63:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    64:64:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    65:65:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    66:66:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    67:67:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    51:51:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":68,"2":69,"3":70},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    68:68:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    69:69:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    70:70:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    52:52:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    53:53:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":71,"2":72,"3":73,"4":74,"5":75,"6":76,"7":77},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    71:71:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    72:72:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    73:73:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    74:74:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    75:75:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    76:76:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    77:77:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    54:54:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$1$1 -> t.d$a:
# {"id":"sourceFile","fileName":"MotherNameScreen.kt"}
    androidx.compose.runtime.MutableState $showProgress$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt.MotherNameBody$lambda$4(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt.access$MotherNameBody$lambda$4(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$1$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$2 -> t.d$b:
# {"id":"sourceFile","fileName":"MotherNameScreen.kt"}
    com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lt/d$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$3$1$1 -> t.d$c:
# {"id":"sourceFile","fileName":"MotherNameScreen.kt"}
    androidx.compose.runtime.MutableState $selectedChoice$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$3$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.util.List com.truid.android.api.PersonalDetailsVerification.getNames():0:0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$3$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$3$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$3$1$1$1$1 -> t.e:
# {"id":"sourceFile","fileName":"MotherNameScreen.kt"}
    androidx.compose.runtime.MutableState $selectedChoice$delegate -> a
    void <init>(androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$3$1$1$1$1.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt.MotherNameBody$lambda$1(androidx.compose.runtime.MutableState,java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt.access$MotherNameBody$lambda$1(androidx.compose.runtime.MutableState,java.lang.String):0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$3$1$1$1$1.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$3$2$1 -> t.d$d:
# {"id":"sourceFile","fileName":"MotherNameScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    androidx.compose.runtime.MutableState $selectedChoice$delegate -> b
    void <init>(kotlin.jvm.functions.Function0,androidx.compose.runtime.MutableState) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/compose/runtime/MutableState;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$3$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.String com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt.MotherNameBody$lambda$0(androidx.compose.runtime.MutableState):0:0 -> invoke
    2:2:java.lang.String com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt.access$MotherNameBody$lambda$0(androidx.compose.runtime.MutableState):0 -> invoke
    2:2:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$3$2$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.api.PersonalDetailsVerification.setNameUserSelection(java.lang.String):0:0 -> invoke
    3:3:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$3$2$1.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$3$2$1.invoke():0:0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$4 -> t.d$e:
# {"id":"sourceFile","fileName":"MotherNameScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$selectedChoice$2 -> t.d$f:
# {"id":"sourceFile","fileName":"MotherNameScreen.kt"}
    com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$selectedChoice$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lt/d$f;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:androidx.compose.runtime.MutableState com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$MotherNameBody$selectedChoice$2.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$ProgressDialog$2 -> t.d$g:
# {"id":"sourceFile","fileName":"MotherNameScreen.kt"}
    int $$changed -> a
    void <init>(int) -> <init>
    1:1:void com.truid.android.ui.questionnaire.securityquestions.MotherNameScreenKt$ProgressDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ComposableSingletons$ReportScreenKt -> u.b:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    kotlin.jvm.functions.Function2 lambda-1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function3 lambda-2 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function3 lambda-3 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-4 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    void <clinit>() -> <clinit>
com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-1$1 -> u.b$a:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/b$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-1$1$1 -> u.a:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-1$1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke() -> invoke
com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-2$1 -> u.b$b:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/b$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-2$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-3$1 -> u.b$c:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-3$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/b$c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-3$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-4$1 -> u.b$d:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-4$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/b$d;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-4$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:android.graphics.Bitmap com.truid.android.api.Session.getClientLogo():0:0 -> invoke
    2:2:void com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-4$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-4$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:android.graphics.Bitmap com.truid.android.api.Session.getClientLogo():0:0 -> invoke
    4:4:void com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-4$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.report.ComposableSingletons$ReportScreenKt$lambda-4$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt -> u.c:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    1:1:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":15,"2":16,"3":17,"4":18,"5":19},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    15:15:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    18:18:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    20:20:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    23:23:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    25:25:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    26:26:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    6:6:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0 -> a
    7:7:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":28,"2":29,"3":30},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    28:28:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    10:10:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":31,"2":32,"3":33,"4":34,"5":35},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    31:31:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    34:34:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":36,"2":37,"3":38,"4":39,"5":40},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    36:36:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    38:38:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    40:40:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    13:13:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":41,"2":42,"3":43},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    41:41:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    42:42:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    43:43:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void CardWithBackdrop-Iv8Zu3U(long,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int):0:0 -> a
    44:44:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":55,"2":56,"3":57},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    55:55:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    56:56:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    57:57:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    45:45:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    46:46:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":58,"2":59,"3":60,"4":61,"5":62},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    58:58:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    59:59:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    60:60:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    61:61:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    62:62:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    47:47:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    48:48:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":63,"2":64,"3":65,"4":66,"5":67},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    63:63:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    64:64:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    65:65:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    66:66:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    67:67:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    49:49:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":68,"2":69,"3":70},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    68:68:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    69:69:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    70:70:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    50:50:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    51:51:long com.truid.android.ui.theme.ColorKt.getSecondaryThemeColor():0:0 -> a
    51:51:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0 -> a
    52:52:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    53:53:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":71,"2":72,"3":73,"4":74,"5":75,"6":76,"7":77},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    71:71:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    72:72:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    73:73:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    74:74:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    75:75:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    76:76:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    77:77:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    54:54:void DetailField(java.lang.String,java.lang.String,androidx.compose.runtime.Composer,int):0:0 -> a
    78:78:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":89,"2":90,"3":91},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    89:89:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    90:90:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    91:91:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    79:79:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    80:80:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":92,"2":93,"3":94,"4":95,"5":96},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    92:92:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    93:93:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    94:94:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    95:95:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    96:96:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    81:81:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    82:82:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":97,"2":98,"3":99,"4":100,"5":101},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    97:97:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    98:98:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    99:99:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    100:100:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    101:101:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    83:83:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":102,"2":103,"3":104},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    102:102:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    103:103:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    104:104:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    84:84:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    85:85:java.util.List com.truid.android.api.Session.getSteps():0:0 -> a
    85:85:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0 -> a
    86:86:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    87:87:java.lang.String com.truid.android.api.Session.getSessionID():0:0 -> a
    87:87:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0 -> a
    88:88:void Details(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> a
    105:105:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":116,"2":117,"3":118},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    116:116:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    117:117:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    118:118:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    106:106:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    107:107:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":119,"2":120,"3":121,"4":122,"5":123},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    119:119:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    120:120:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    121:121:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    122:122:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    123:123:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    108:108:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    109:109:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":124,"2":125,"3":126,"4":127,"5":128},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    124:124:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    125:125:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    126:126:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    127:127:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    128:128:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    110:110:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":129,"2":130,"3":131},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    129:129:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    130:130:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    131:131:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    111:111:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    112:112:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    112:112:void ProgressDialog(androidx.compose.runtime.Composer,int):0 -> a
    113:113:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    114:114:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":132,"2":133,"3":134,"4":135,"5":136,"6":137,"7":138},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    132:132:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    133:133:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    134:134:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    135:135:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    136:136:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    137:137:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    138:138:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    115:115:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    139:139:boolean com.truid.android.ui.report.ReportScreenViewModel.getReportGenerationStarted():0:0 -> a
    139:139:void ReportBody(com.truid.android.ui.report.ReportScreenViewModel,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/h;Lkotlin/jvm/functions/Function0;Landroidx/compose/runtime/Composer;II)V"}
    140:140:boolean com.truid.android.ui.report.ReportScreenViewModel.getReportGenerationStarted():0:0 -> a
    140:140:void ReportBody(com.truid.android.ui.report.ReportScreenViewModel,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0 -> a
    141:141:void com.truid.android.ui.report.ReportScreenViewModel.setReportGenerationStarted(boolean):0:0 -> a
    141:141:void ReportBody(com.truid.android.ui.report.ReportScreenViewModel,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0 -> a
    142:142:void ReportBody(com.truid.android.ui.report.ReportScreenViewModel,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    143:143:boolean com.truid.android.ui.report.ReportScreenViewModel.getLoadingReport():0:0 -> a
    143:143:void ReportBody(com.truid.android.ui.report.ReportScreenViewModel,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0 -> a
    144:144:void ReportBody(com.truid.android.ui.report.ReportScreenViewModel,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    145:145:kotlin.jvm.functions.Function2 com.truid.android.ui.report.ComposableSingletons$ReportScreenKt.getLambda-1$sdk_release():0:0 -> a
    145:145:void ReportBody(com.truid.android.ui.report.ReportScreenViewModel,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0 -> a
    146:146:void ReportBody(com.truid.android.ui.report.ReportScreenViewModel,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
    147:147:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    147:147:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb/q$a;Landroidx/compose/runtime/Composer;I)V"}
    148:148:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    149:149:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":163,"2":164,"3":165},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    163:163:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    164:164:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    165:165:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    150:150:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    151:151:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":166,"2":167,"3":168,"4":169,"5":170},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    166:166:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    167:167:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    168:168:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    169:169:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    170:170:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    152:152:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    153:153:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":171,"2":172,"3":173,"4":174,"5":175},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    171:171:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    172:172:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    173:173:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    174:174:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    175:175:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    154:154:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":176,"2":177,"3":178},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    176:176:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    177:177:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    178:178:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    155:155:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    156:156:long com.truid.android.ui.theme.ColorKt.getFailedColor():0:0 -> a
    156:156:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0 -> a
    157:157:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    158:158:long com.truid.android.ui.theme.ColorKt.getPendingColor():0:0 -> a
    158:158:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0 -> a
    159:159:long com.truid.android.ui.theme.ColorKt.getPassedColor():0:0 -> a
    159:159:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0 -> a
    160:160:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    161:161:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":179,"2":180,"3":181,"4":182,"5":183,"6":184,"7":185},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    179:179:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    180:180:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    181:181:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    182:182:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    183:183:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    184:184:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    185:185:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    162:162:void StatusHeader(com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    186:186:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> a
    186:186:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    187:187:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    188:188:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":197,"2":198,"3":199,"4":200,"5":201},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    197:197:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    198:198:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    199:199:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    200:200:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    201:201:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    189:189:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    190:190:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":202,"2":203,"3":204,"4":205,"5":206},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    202:202:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    203:203:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    204:204:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    205:205:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    206:206:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    191:191:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":207,"2":208,"3":209},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    207:207:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    208:208:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    209:209:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    192:192:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    193:193:kotlin.jvm.functions.Function2 com.truid.android.ui.report.ComposableSingletons$ReportScreenKt.getLambda-4$sdk_release():0:0 -> a
    193:193:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    194:194:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    195:195:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":210,"2":211,"3":212,"4":213,"5":214,"6":215,"7":216},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    210:210:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    211:211:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    212:212:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    213:213:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    214:214:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    215:215:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    216:216:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    196:196:void TopBar(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    217:217:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lb/q$a;Landroidx/compose/runtime/Composer;I)V"}
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":229,"2":230,"3":231,"4":232,"5":233},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    229:229:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    230:230:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    231:231:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    232:232:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    233:233:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    218:218:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    219:219:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":234,"2":235,"3":236,"4":237,"5":238},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    234:234:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    235:235:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    236:236:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    237:237:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    238:238:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    220:220:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":239,"2":240,"3":241},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    239:239:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    240:240:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    241:241:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    221:221:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    222:222:long com.truid.android.ui.theme.ColorKt.getFailedColor():0:0 -> a
    222:222:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0 -> a
    223:223:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    224:224:long com.truid.android.ui.theme.ColorKt.getPendingColor():0:0 -> a
    224:224:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0 -> a
    225:225:long com.truid.android.ui.theme.ColorKt.getPassedColor():0:0 -> a
    225:225:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0 -> a
    226:226:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    227:227:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":242,"2":243,"3":244,"4":245,"5":246,"6":247,"7":248},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    242:242:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    243:243:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    244:244:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    245:245:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    246:246:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    247:247:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    248:248:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    228:228:void VerificationField(java.lang.String,com.truid.android.api.Report$VerificationStatus,androidx.compose.runtime.Composer,int):0:0 -> a
    1:1:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    10:10:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    11:11:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    12:12:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    2:2:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    3:3:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15,"4":16,"5":17},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    13:13:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    14:14:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    15:15:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    16:16:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    17:17:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    4:4:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    5:5:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20,"4":21,"5":22},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    18:18:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    19:19:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    20:20:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    21:21:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    22:22:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    6:6:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    23:23:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    24:24:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    25:25:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    7:7:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    8:8:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":26,"2":27,"3":28,"4":29,"5":30,"6":31,"7":32},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    26:26:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    27:27:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    28:28:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    29:29:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    30:30:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    31:31:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    32:32:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
    9:9:void Verification(java.util.Map,androidx.compose.runtime.Composer,int):0:0 -> b
com.truid.android.ui.report.ReportScreenKt$CardWithBackdrop$1$1$1 -> u.c$a:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    long $backgroundColor -> a
    void <init>(long) -> <init>
    1:1:void com.truid.android.ui.report.ReportScreenKt$CardWithBackdrop$1$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> invoke
    2:2:void com.truid.android.ui.report.ReportScreenKt$CardWithBackdrop$1$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenKt$CardWithBackdrop$1$1$1.invoke(androidx.compose.ui.graphics.drawscope.DrawScope):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$CardWithBackdrop$1$2$1 -> u.c$b:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    kotlin.jvm.functions.Function2 $content -> a
    int $$dirty -> b
    void <init>(kotlin.jvm.functions.Function2,int) -> <init>
    1:1:void com.truid.android.ui.report.ReportScreenKt$CardWithBackdrop$1$2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$CardWithBackdrop$2 -> u.c$c:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    long $backgroundColor -> a
    kotlin.jvm.functions.Function2 $content -> b
    int $$changed -> c
    void <init>(long,kotlin.jvm.functions.Function2,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJLkotlin/jvm/functions/Function2;)V"}
    1:1:void com.truid.android.ui.report.ReportScreenKt$CardWithBackdrop$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$DetailField$2 -> u.c$d:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    java.lang.String $key -> a
    java.lang.String $value -> b
    int $$changed -> c
    void <init>(java.lang.String,java.lang.String,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ILjava/lang/String;)V"}
    1:1:void com.truid.android.ui.report.ReportScreenKt$DetailField$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$Details$2 -> u.c$e:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    java.util.Map $ocrResults -> a
    int $$changed -> b
    void <init>(java.util.Map,int) -> <init>
    1:1:void com.truid.android.ui.report.ReportScreenKt$Details$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$ProgressDialog$2 -> u.c$f:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    int $$changed -> a
    void <init>(int) -> <init>
    1:1:void com.truid.android.ui.report.ReportScreenKt$ProgressDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$ReportBody$1 -> u.c$g:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ReportScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/h;"}
    void <init>(com.truid.android.ui.report.ReportScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/h;)V"}
    1:1:void com.truid.android.ui.report.ReportScreenKt$ReportBody$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.report.ReportScreenViewModel.setLoadingReport(boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.report.ReportScreenKt$ReportBody$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenViewModel.setLoadingReport(boolean):0:0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenKt$ReportBody$1.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$ReportBody$2 -> u.c$h:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ReportScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/h;"}
    void <init>(com.truid.android.ui.report.ReportScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/h;)V"}
    1:1:void com.truid.android.ui.report.ReportScreenKt$ReportBody$2.invoke(java.util.Map,java.util.Map,com.truid.android.api.Report$VerificationStatus):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.report.ReportScreenViewModel.update(java.util.Map,java.util.Map,com.truid.android.api.Report$VerificationStatus):0:0 -> invoke
    2:2:void com.truid.android.ui.report.ReportScreenKt$ReportBody$2.invoke(java.util.Map,java.util.Map,com.truid.android.api.Report$VerificationStatus):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenViewModel.setStatus(com.truid.android.api.Report$VerificationStatus):0:0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenViewModel.update(java.util.Map,java.util.Map,com.truid.android.api.Report$VerificationStatus):0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenKt$ReportBody$2.invoke(java.util.Map,java.util.Map,com.truid.android.api.Report$VerificationStatus):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.report.ReportScreenViewModel.update(java.util.Map,java.util.Map,com.truid.android.api.Report$VerificationStatus):0:0 -> invoke
    4:4:void com.truid.android.ui.report.ReportScreenKt$ReportBody$2.invoke(java.util.Map,java.util.Map,com.truid.android.api.Report$VerificationStatus):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$ReportBody$3 -> u.c$i:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ReportScreenKt$ReportBody$3 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/c$i;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.report.ReportScreenKt$ReportBody$3.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$ReportBody$4 -> u.c$j:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ReportScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/h;"}
    kotlin.jvm.functions.Function0 $onFinish -> b
    void <init>(com.truid.android.ui.report.ReportScreenViewModel,kotlin.jvm.functions.Function0) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/h;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":20,"2":21,"3":22,"4":23,"5":24},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    20:20:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    22:22:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    24:24:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":25,"2":26,"3":27,"4":28,"5":29},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    25:25:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    27:27:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    28:28:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    29:29:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":30,"2":31,"3":32},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    30:30:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    32:32:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    6:6:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":33,"2":34,"3":35},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    33:33:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    34:34:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    35:35:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":36,"2":37,"3":38,"4":39,"5":40},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    36:36:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    36:36:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    37:37:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    37:37:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    38:38:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    38:38:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    39:39:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    39:39:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    40:40:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":41,"2":42,"3":43,"4":44,"5":45},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    41:41:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    41:41:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    42:42:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    42:42:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    43:43:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    43:43:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    44:44:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    44:44:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    45:45:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    45:45:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":46,"2":47,"3":48},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    46:46:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    46:46:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    47:47:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    48:48:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    48:48:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    13:13:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    14:14:com.truid.android.api.Report$VerificationStatus com.truid.android.ui.report.ReportScreenViewModel.getStatus():0:0 -> invoke
    14:14:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    15:15:com.truid.android.api.Report$VerificationStatus com.truid.android.ui.report.ReportScreenViewModel.getStatus():0:0 -> invoke
    15:15:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":49,"2":50,"3":51,"4":52,"5":53,"6":54,"7":55},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    49:49:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    49:49:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    50:50:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    50:50:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    51:51:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    51:51:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    52:52:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    52:52:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    53:53:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    53:53:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    54:54:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    54:54:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    55:55:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    55:55:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    18:18:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4.invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int):0:0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1 -> u.f:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ReportScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/h;"}
    void <init>(com.truid.android.ui.report.ReportScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/h;)V"}
    1:1:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":39,"2":40,"3":41},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    39:39:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    39:39:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    40:40:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    41:41:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    41:41:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":42,"2":43,"3":44,"4":45,"5":46},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    42:42:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    42:42:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    43:43:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    43:43:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    44:44:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    44:44:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    45:45:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    45:45:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    46:46:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    46:46:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    5:5:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":47,"2":48,"3":49,"4":50,"5":51},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    47:47:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    48:48:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    48:48:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    49:49:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    49:49:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    50:50:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    50:50:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    51:51:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    51:51:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":52,"2":53,"3":54},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    52:52:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    52:52:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    53:53:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    53:53:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    54:54:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    54:54:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    8:8:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":55,"2":56,"3":57,"4":58,"5":59},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    55:55:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    55:55:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    56:56:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    56:56:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    57:57:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    57:57:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    58:58:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    58:58:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    59:59:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    59:59:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    10:10:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":60,"2":61,"3":62,"4":63,"5":64},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    60:60:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    60:60:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    61:61:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    61:61:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    62:62:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    62:62:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    63:63:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    63:63:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    64:64:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    64:64:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":65,"2":66,"3":67},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    65:65:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    65:65:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    66:66:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    66:66:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    67:67:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    67:67:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    13:13:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    14:14:boolean com.truid.android.ui.report.ReportScreenViewModel.getShowDetails():0:0 -> invoke
    14:14:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:14:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    15:15:boolean com.truid.android.ui.report.ReportScreenViewModel.getShowDetails():0:0 -> invoke
    15:15:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    15:15:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    16:16:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    16:16:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    17:17:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> invoke
    17:17:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    18:18:boolean com.truid.android.ui.report.ReportScreenViewModel.getShowDetails():0:0 -> invoke
    18:18:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    18:18:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    19:19:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    20:20:kotlin.jvm.functions.Function3 com.truid.android.ui.report.ComposableSingletons$ReportScreenKt.getLambda-2$sdk_release():0:0 -> invoke
    20:20:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    21:21:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    22:22:boolean com.truid.android.ui.report.ReportScreenViewModel.getShowDetails():0:0 -> invoke
    22:22:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    22:22:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    23:23:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    24:24:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> invoke
    24:24:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    25:25:boolean com.truid.android.ui.report.ReportScreenViewModel.getShowDetails():0:0 -> invoke
    25:25:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    25:25:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    26:26:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    26:26:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    27:27:kotlin.jvm.functions.Function3 com.truid.android.ui.report.ComposableSingletons$ReportScreenKt.getLambda-3$sdk_release():0:0 -> invoke
    27:27:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    27:27:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    28:28:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    28:28:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    29:29:boolean com.truid.android.ui.report.ReportScreenViewModel.getShowDetails():0:0 -> invoke
    29:29:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    29:29:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    30:30:boolean com.truid.android.ui.report.ReportScreenViewModel.getShowDetails():0:0 -> invoke
    30:30:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    31:31:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    32:32:androidx.compose.runtime.snapshots.SnapshotStateMap com.truid.android.ui.report.ReportScreenViewModel.getOcrResults():0:0 -> invoke
    32:32:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    33:33:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    33:33:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    34:34:androidx.compose.runtime.snapshots.SnapshotStateMap com.truid.android.ui.report.ReportScreenViewModel.getVerificationStatuses():0:0 -> invoke
    34:34:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0 -> invoke
    34:34:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    35:35:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    36:36:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":68,"2":69,"3":70,"4":71,"5":72,"6":73,"7":74},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    68:68:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    68:68:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    69:69:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    69:69:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    70:70:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    70:70:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    71:71:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    71:71:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    72:72:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    72:72:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    73:73:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    73:73:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    74:74:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    74:74:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    37:37:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    37:37:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    38:38:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1$1$1$1 -> u.d:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ReportScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/h;"}
    void <init>(com.truid.android.ui.report.ReportScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/h;)V"}
    1:1:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1$1$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.report.ReportScreenViewModel.setShowDetails(boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1$1$1$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenViewModel.setShowDetails(boolean):0:0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1$1$1$1.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1$1$1$2 -> u.e:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ReportScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/h;"}
    void <init>(com.truid.android.ui.report.ReportScreenViewModel) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/h;)V"}
    1:1:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1$1$1$2.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.ui.report.ReportScreenViewModel.setShowDetails(boolean):0:0 -> invoke
    2:2:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1$1$1$2.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenViewModel.setShowDetails(boolean):0:0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$1$1$1$1$2.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$2 -> u.g:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ReportScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/h;"}
    kotlin.jvm.functions.Function0 $onFinish -> b
    void <init>(com.truid.android.ui.report.ReportScreenViewModel,kotlin.jvm.functions.Function0) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/h;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$2.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:boolean com.truid.android.ui.report.ReportScreenViewModel.getReportClosed():0:0 -> invoke
    2:2:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$2.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:boolean com.truid.android.ui.report.ReportScreenViewModel.getReportClosed():0:0 -> invoke
    3:3:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$2.invoke():0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$2.invoke():0:0 -> invoke
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void com.truid.android.ui.report.ReportScreenViewModel.setReportClosed(boolean):0:0 -> invoke
    5:5:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$2.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:void com.truid.android.ui.report.ReportScreenViewModel.setReportClosed(boolean):0:0 -> invoke
    6:6:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$2.invoke():0 -> invoke
    6:6:java.lang.Object invoke():0 -> invoke
    7:7:void com.truid.android.ui.report.ReportScreenKt$ReportBody$4$1$2.invoke():0:0 -> invoke
    7:7:java.lang.Object invoke():0 -> invoke
    8:8:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$ReportBody$5 -> u.c$k:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.ui.report.ReportScreenViewModel $viewModel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/h;"}
    kotlin.jvm.functions.Function0 $onFinish -> b
    int $$changed -> c
    int $$default -> d
    void <init>(com.truid.android.ui.report.ReportScreenViewModel,kotlin.jvm.functions.Function0,int,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/h;Lkotlin/jvm/functions/Function0;II)V"}
    1:1:void com.truid.android.ui.report.ReportScreenKt$ReportBody$5.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$StatusHeader$2 -> u.c$l:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    com.truid.android.api.Report$VerificationStatus $status -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/q$a;"}
    int $$changed -> b
    void <init>(com.truid.android.api.Report$VerificationStatus,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb/q$a;I)V"}
    1:1:void com.truid.android.ui.report.ReportScreenKt$StatusHeader$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$TopBar$2 -> u.c$m:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    kotlin.jvm.functions.Function0 $onNavigateUp -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.report.ReportScreenKt$TopBar$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$Verification$2 -> u.c$n:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    java.util.Map $verificationStatuses -> a
    int $$changed -> b
    void <init>(java.util.Map,int) -> <init>
    1:1:void com.truid.android.ui.report.ReportScreenKt$Verification$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenKt$VerificationField$2 -> u.c$o:
# {"id":"sourceFile","fileName":"ReportScreen.kt"}
    java.lang.String $key -> a
    com.truid.android.api.Report$VerificationStatus $value -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/q$a;"}
    int $$changed -> c
    void <init>(java.lang.String,com.truid.android.api.Report$VerificationStatus,int) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lb/q$a;I)V"}
    1:1:void com.truid.android.ui.report.ReportScreenKt$VerificationField$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.report.ReportScreenViewModel -> u.h:
# {"id":"sourceFile","fileName":"ReportScreenViewModel.kt"}
    androidx.compose.runtime.MutableState loadingReport$delegate -> a
    androidx.compose.runtime.MutableState showDetails$delegate -> b
    androidx.compose.runtime.snapshots.SnapshotStateMap ocrResults -> c
    androidx.compose.runtime.snapshots.SnapshotStateMap verificationStatuses -> d
    androidx.compose.runtime.MutableState status$delegate -> e
    androidx.compose.runtime.MutableState reportGenerationStarted$delegate -> f
    androidx.compose.runtime.MutableState reportClosed$delegate -> g
    void <init>() -> <init>
com.truid.android.ui.theme.ColorKt -> v.a:
# {"id":"sourceFile","fileName":"Color.kt"}
    long TruIdColor -> a
    long secondaryThemeColor -> b
    long passedColor -> c
    long failedColor -> d
    long pendingColor -> e
    long HighlightColor -> f
    long DisabledContentColor -> g
    long DisabledStrokeColor -> h
    int $r8$clinit -> i
      # {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
    long getPassedColor() -> a
    long getTruIdColor() -> b
com.truid.android.ui.theme.ShapeKt -> v.b:
# {"id":"sourceFile","fileName":"Shape.kt"}
    androidx.compose.material.Shapes Shapes -> a
    void <clinit>() -> <clinit>
com.truid.android.ui.theme.ThemeKt -> v.c:
# {"id":"sourceFile","fileName":"Theme.kt"}
    androidx.compose.material.Colors LightColorPalette -> a
    1:1:long com.truid.android.ui.theme.ColorKt.getTruIdColor():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:androidx.compose.material.Typography com.truid.android.ui.theme.TypeKt.getTypography():0:0 -> a
    1:1:void TruIdTheme(boolean,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0 -> a
    2:2:androidx.compose.material.Shapes com.truid.android.ui.theme.ShapeKt.getShapes():0:0 -> a
    2:2:void TruIdTheme(boolean,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0 -> a
    3:3:void TruIdTheme(boolean,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.theme.ThemeKt$TruIdTheme$1 -> v.c$a:
# {"id":"sourceFile","fileName":"Theme.kt"}
    boolean $darkTheme -> a
    kotlin.jvm.functions.Function2 $content -> b
    int $$changed -> c
    int $$default -> d
    void <init>(boolean,kotlin.jvm.functions.Function2,int,int) -> <init>
    1:1:void com.truid.android.ui.theme.ThemeKt$TruIdTheme$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.theme.TypeKt -> v.d:
# {"id":"sourceFile","fileName":"Type.kt"}
    androidx.compose.material.Typography Typography -> a
    void <clinit>() -> <clinit>
com.truid.android.ui.undertaking.ComposableSingletons$UndertakingScreenKt -> w.a:
# {"id":"sourceFile","fileName":"UndertakingScreen.kt"}
    kotlin.jvm.functions.Function2 lambda-1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    void <clinit>() -> <clinit>
com.truid.android.ui.undertaking.ComposableSingletons$UndertakingScreenKt$lambda-1$1 -> w.a$a:
# {"id":"sourceFile","fileName":"UndertakingScreen.kt"}
    com.truid.android.ui.undertaking.ComposableSingletons$UndertakingScreenKt$lambda-1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lw/a$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.undertaking.ComposableSingletons$UndertakingScreenKt$lambda-1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.undertaking.UndertakingScreenKt -> w.b:
# {"id":"sourceFile","fileName":"UndertakingScreen.kt"}
    1:1:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":10,"2":11,"3":12},"outline":"La/h;a(Landroidx/compose/runtime/Composer;I)Ljava/lang/Object;"}
    10:10:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    11:11:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    12:12:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    2:2:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    3:3:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":13,"2":14,"3":15,"4":16,"5":17},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    13:13:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    14:14:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    15:15:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    16:16:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    17:17:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    4:4:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    5:5:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":18,"2":19,"3":20,"4":21,"5":22},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    18:18:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    19:19:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    20:20:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    21:21:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    22:22:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    6:6:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":23,"2":24,"3":25},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    23:23:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    24:24:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    25:25:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    7:7:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    8:8:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":26,"2":27,"3":28,"4":29,"5":30,"6":31,"7":32},"outline":"Le/g;a(Landroidx/compose/runtime/Composer;)Z"}
    26:26:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    27:27:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    28:28:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    29:29:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    30:30:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    31:31:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    32:32:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    9:9:void ProgressDialog(androidx.compose.runtime.Composer,int):0:0 -> a
    33:33:boolean com.truid.android.ui.undertaking.UndertakingScreenKt.UndertakingBody$lambda$1(androidx.compose.runtime.MutableState):0:0 -> a
    33:33:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    34:34:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    35:35:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":51,"2":52,"3":53,"4":54,"5":55},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    51:51:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    52:52:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    53:53:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    54:54:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    55:55:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    36:36:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    37:37:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":56,"2":57,"3":58,"4":59,"5":60},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    56:56:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    57:57:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    58:58:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    59:59:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    60:60:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    38:38:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":61,"2":62,"3":63},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    61:61:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    62:62:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    63:63:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    39:39:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    40:40:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":64,"2":65,"3":66},"outline":"Le/m;a(Landroidx/compose/ui/Alignment$Companion;Landroidx/compose/foundation/layout/Arrangement$Vertical;Landroidx/compose/runtime/Composer;II)Landroidx/compose/ui/layout/MeasurePolicy;"}
    64:64:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    65:65:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    66:66:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    41:41:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    42:42:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":67,"2":68,"3":69,"4":70,"5":71},"outline":"La/i;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/unit/Density;)Lkotlin/jvm/functions/Function2;"}
    67:67:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    68:68:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    69:69:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    70:70:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    71:71:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    43:43:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    44:44:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":72,"2":73,"3":74,"4":75,"5":76},"outline":"La/g;a(Landroidx/compose/ui/node/ComposeUiNode$Companion;Landroidx/compose/runtime/Composer;Landroidx/compose/ui/platform/ViewConfiguration;Landroidx/compose/runtime/Composer;Landroidx/compose/runtime/Composer;)Landroidx/compose/runtime/SkippableUpdater;"}
    72:72:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    73:73:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    74:74:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    75:75:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    76:76:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    45:45:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
      # {"id":"com.android.tools.r8.outlineCallsite","positions":{"1":77,"2":78,"3":79},"outline":"La/j;a(ILkotlin/jvm/functions/Function3;Landroidx/compose/runtime/SkippableUpdater;Landroidx/compose/runtime/Composer;I)V"}
    77:77:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    78:78:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    79:79:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    46:46:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    47:47:java.lang.String com.truid.android.ui.undertaking.UndertakingScreenKt.UndertakingBody$lambda$4(androidx.compose.runtime.MutableState):0:0 -> a
    47:47:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    48:48:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
    49:49:kotlin.jvm.functions.Function2 com.truid.android.ui.undertaking.ComposableSingletons$UndertakingScreenKt.getLambda-1$sdk_release():0:0 -> a
    49:49:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0 -> a
    50:50:void UndertakingBody(kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int):0:0 -> a
com.truid.android.ui.undertaking.UndertakingScreenKt$ProgressDialog$2 -> w.b$a:
# {"id":"sourceFile","fileName":"UndertakingScreen.kt"}
    int $$changed -> a
    void <init>(int) -> <init>
    1:1:void com.truid.android.ui.undertaking.UndertakingScreenKt$ProgressDialog$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$1$1 -> w.b$b:
# {"id":"sourceFile","fileName":"UndertakingScreen.kt"}
    androidx.compose.runtime.MutableState $markdownContent$delegate -> a
    androidx.compose.runtime.MutableState $showProgress$delegate -> b
    void <init>(androidx.compose.runtime.MutableState,androidx.compose.runtime.MutableState) -> <init>
    1:1:void com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$1$1.invoke(org.json.JSONObject):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.ui.undertaking.UndertakingScreenKt.UndertakingBody$lambda$5(androidx.compose.runtime.MutableState,java.lang.String):0:0 -> invoke
    2:2:void com.truid.android.ui.undertaking.UndertakingScreenKt.access$UndertakingBody$lambda$5(androidx.compose.runtime.MutableState,java.lang.String):0 -> invoke
    2:2:void com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$1$1.invoke(org.json.JSONObject):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$1$1.invoke(org.json.JSONObject):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.ui.undertaking.UndertakingScreenKt.UndertakingBody$lambda$2(androidx.compose.runtime.MutableState,boolean):0:0 -> invoke
    4:4:void com.truid.android.ui.undertaking.UndertakingScreenKt.access$UndertakingBody$lambda$2(androidx.compose.runtime.MutableState,boolean):0 -> invoke
    4:4:void com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$1$1.invoke(org.json.JSONObject):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$2 -> w.b$c:
# {"id":"sourceFile","fileName":"UndertakingScreen.kt"}
    com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lw/b$c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$3$2$1 -> w.b$d:
# {"id":"sourceFile","fileName":"UndertakingScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$3$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$3$2$1$1 -> w.c:
# {"id":"sourceFile","fileName":"UndertakingScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$3$2$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$3$2$1$2 -> w.d:
# {"id":"sourceFile","fileName":"UndertakingScreen.kt"}
    com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$3$2$1$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lw/d;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$3$2$1$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$4 -> w.b$e:
# {"id":"sourceFile","fileName":"UndertakingScreen.kt"}
    kotlin.jvm.functions.Function0 $onNextClick -> a
    int $$changed -> b
    void <init>(kotlin.jvm.functions.Function0,int) -> <init>
    1:1:void com.truid.android.ui.undertaking.UndertakingScreenKt$UndertakingBody$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.utils.ComposableSingletons$PermissionsKt -> x.a:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    kotlin.jvm.functions.Function2 lambda-1 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-2 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    kotlin.jvm.functions.Function2 lambda-3 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/compose/runtime/internal/ComposableLambda;"}
    void <clinit>() -> <clinit>
com.truid.android.ui.utils.ComposableSingletons$PermissionsKt$lambda-1$1 -> x.a$a:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    com.truid.android.ui.utils.ComposableSingletons$PermissionsKt$lambda-1$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/a$a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.utils.ComposableSingletons$PermissionsKt$lambda-1$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.utils.ComposableSingletons$PermissionsKt$lambda-2$1 -> x.a$b:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    com.truid.android.ui.utils.ComposableSingletons$PermissionsKt$lambda-2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/a$b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.utils.ComposableSingletons$PermissionsKt$lambda-2$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.utils.ComposableSingletons$PermissionsKt$lambda-3$1 -> x.a$c:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    com.truid.android.ui.utils.ComposableSingletons$PermissionsKt$lambda-3$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/a$c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.ui.utils.ComposableSingletons$PermissionsKt$lambda-3$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.utils.LayoutViewModel -> x.b:
# {"id":"sourceFile","fileName":"Utils.kt"}
    androidx.compose.runtime.MutableState scaffoldTopBarBottom$delegate -> a
    androidx.compose.runtime.MutableState scaffoldWidth$delegate -> b
    androidx.compose.runtime.MutableState bottomContentTop$delegate -> c
    void <init>() -> <init>
    float getBottomContentTop() -> a
    float getScaffoldTopBarBottom() -> b
    float getScaffoldWidth() -> c
com.truid.android.ui.utils.PermissionsKt -> x.d:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    1:1:kotlin.jvm.functions.Function2 com.truid.android.ui.utils.ComposableSingletons$PermissionsKt.getLambda-1$sdk_release():0:0 -> a
    1:1:void Permission(java.lang.String,java.lang.String,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0 -> a
    2:2:kotlin.jvm.functions.Function2 com.truid.android.ui.utils.ComposableSingletons$PermissionsKt.getLambda-2$sdk_release():0:0 -> a
    2:2:void Permission(java.lang.String,java.lang.String,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0 -> a
    3:3:void Permission(java.lang.String,java.lang.String,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int):0:0 -> a
    4:4:kotlin.jvm.functions.Function2 com.truid.android.ui.utils.ComposableSingletons$PermissionsKt.getLambda-3$sdk_release():0:0 -> a
    4:4:void Rationale(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0 -> a
    5:5:void Rationale(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int,int):0:0 -> a
com.truid.android.ui.utils.PermissionsKt$Permission$1 -> x.d$a:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    java.lang.String $rationale -> a
    com.google.accompanist.permissions.PermissionState $permissionState -> b
    int $$dirty -> c
    void <init>(java.lang.String,com.google.accompanist.permissions.PermissionState,int) -> <init>
    1:1:void com.truid.android.ui.utils.PermissionsKt$Permission$1.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.utils.PermissionsKt$Permission$1$1$1 -> x.c:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    com.google.accompanist.permissions.PermissionState $permissionState -> a
    void <init>(com.google.accompanist.permissions.PermissionState) -> <init>
    1:1:void com.truid.android.ui.utils.PermissionsKt$Permission$1$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.ui.utils.PermissionsKt$Permission$2 -> x.d$b:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    java.lang.String $permission -> a
    java.lang.String $rationale -> b
    kotlin.jvm.functions.Function2 $permissionNotAvailableContent -> c
    kotlin.jvm.functions.Function2 $content -> d
    int $$changed -> e
    int $$default -> f
    void <init>(java.lang.String,java.lang.String,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,int,int) -> <init>
    1:1:void com.truid.android.ui.utils.PermissionsKt$Permission$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.utils.PermissionsKt$Rationale$1 -> x.d$c:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    com.truid.android.ui.utils.PermissionsKt$Rationale$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lx/d$c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.Object invoke() -> invoke
com.truid.android.ui.utils.PermissionsKt$Rationale$2 -> x.d$d:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    kotlin.jvm.functions.Function0 $onRequestPermission -> a
    int $$dirty -> b
    java.lang.String $confirmText -> c
    void <init>(kotlin.jvm.functions.Function0,int,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;Lkotlin/jvm/functions/Function0;)V"}
    1:1:void com.truid.android.ui.utils.PermissionsKt$Rationale$2.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.utils.PermissionsKt$Rationale$2$1 -> x.e:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    java.lang.String $confirmText -> a
    int $$dirty -> b
    void <init>(java.lang.String,int) -> <init>
    1:1:void com.truid.android.ui.utils.PermissionsKt$Rationale$2$1.invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.utils.PermissionsKt$Rationale$3 -> x.d$e:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    java.lang.String $text -> a
    int $$dirty -> b
    void <init>(java.lang.String,int) -> <init>
    1:1:void com.truid.android.ui.utils.PermissionsKt$Rationale$3.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.utils.PermissionsKt$Rationale$4 -> x.d$f:
# {"id":"sourceFile","fileName":"Permissions.kt"}
    java.lang.String $text -> a
    java.lang.String $confirmText -> b
    kotlin.jvm.functions.Function0 $onRequestPermission -> c
    int $$changed -> d
    int $$default -> e
    void <init>(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,int,int) -> <init>
    1:1:void com.truid.android.ui.utils.PermissionsKt$Rationale$4.invoke(androidx.compose.runtime.Composer,int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.ui.utils.UtilsKt -> com.truid.android.ui.utils.UtilsKt:
# {"id":"sourceFile","fileName":"Utils.kt"}
com.truid.android.vision.AgentFaceDetectionHandler -> y.b:
# {"id":"sourceFile","fileName":"AgentFaceDetectionHandler.kt"}
    com.google.mlkit.vision.face.FaceDetector faceDetector -> a
    int MAINTAIN_POSE_FRAMES -> b
    long cameraImageSize -> c
    long cameraPreviewSize -> d
    long ovalTopLeft -> e
    long ovalBottomRight -> f
    boolean faceFrameCaptured -> g
    boolean poseFaceFrameCaptured -> h
    int maintainPoseCounter -> i
    void <init>() -> <init>
    1:1:double com.truid.android.vision.AgentFaceDetectionHandler.getEyesDistance(com.google.mlkit.vision.face.Face):0:0 -> a
    1:1:double access$getEyesDistance(com.truid.android.vision.AgentFaceDetectionHandler,com.google.mlkit.vision.face.Face):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/b;Lcom/google/mlkit/vision/face/Face;)D"}
    2:2:boolean access$getFaceFrameCaptured$p(com.truid.android.vision.AgentFaceDetectionHandler):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/b;)Z"}
    3:3:void com.truid.android.vision.AgentFaceDetectionHandler.performInitialCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0:0 -> a
    3:3:void access$performInitialCheck(com.truid.android.vision.AgentFaceDetectionHandler,com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/b;Lcom/google/mlkit/vision/face/Face;Landroid/media/Image;Lkotlin/jvm/functions/Function2;)V"}
    4:4:boolean com.truid.android.vision.AgentFaceDetectionHandler.isFaceStraight(com.google.mlkit.vision.face.Face):0:0 -> a
    4:4:void com.truid.android.vision.AgentFaceDetectionHandler.performInitialCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
    4:4:void access$performInitialCheck(com.truid.android.vision.AgentFaceDetectionHandler,com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
    5:5:boolean com.truid.android.vision.AgentFaceDetectionHandler.isFaceLookingStraight(com.google.mlkit.vision.face.Face):0:0 -> a
    5:5:void com.truid.android.vision.AgentFaceDetectionHandler.performInitialCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
    5:5:void access$performInitialCheck(com.truid.android.vision.AgentFaceDetectionHandler,com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
    6:6:void com.truid.android.vision.AgentFaceDetectionHandler.performInitialCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0:0 -> a
    6:6:void access$performInitialCheck(com.truid.android.vision.AgentFaceDetectionHandler,com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
    7:7:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/camera/core/ImageProxy;Le/a;)V"}
    8:8:void analyzeImage$lambda$0(kotlin.jvm.functions.Function1,java.lang.Object):0:0 -> a
    9:9:void analyzeImage$lambda$1(android.media.Image,androidx.camera.core.ImageProxy,com.google.android.gms.tasks.Task):0:0 -> a
    10:10:void analyzeImage$lambda$2(java.lang.Exception):0:0 -> a
    11:11:boolean isFaceInsideOval(com.google.mlkit.vision.face.Face):0:0 -> a
    12:12:boolean com.truid.android.vision.AgentFaceDetectionHandler.isFaceStraight(com.google.mlkit.vision.face.Face):0:0 -> a
    12:12:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
    13:13:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0:0 -> a
    14:14:boolean com.truid.android.vision.AgentFaceDetectionHandler.isFaceLookingLeft(com.google.mlkit.vision.face.Face):0:0 -> a
    14:14:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
    15:15:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0:0 -> a
    16:16:boolean com.truid.android.vision.AgentFaceDetectionHandler.isFaceLookingRight(com.google.mlkit.vision.face.Face):0:0 -> a
    16:16:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
    17:17:boolean com.truid.android.vision.AgentFaceDetectionHandler.isFaceLookingStraight(com.google.mlkit.vision.face.Face):0:0 -> a
    17:17:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
    18:18:boolean com.truid.android.vision.AgentFaceDetectionHandler.isFaceInAngleBuffer(com.google.mlkit.vision.face.Face):0:0 -> a
    18:18:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
    19:20:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0:0 -> a
    21:21:void setCameraPreviewSize-uvyYCjk(long):0:0 -> a
    22:22:void setOval-0a9Yr6o(long,long):0:0 -> a
    23:23:boolean showCloseOval():0:0 -> a
    1:1:boolean access$getPoseFaceFrameCaptured$p(com.truid.android.vision.AgentFaceDetectionHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/b;)Z"}
    2:2:boolean access$isFaceInsideOval(com.truid.android.vision.AgentFaceDetectionHandler,com.google.mlkit.vision.face.Face):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/b;Lcom/google/mlkit/vision/face/Face;)Z"}
    3:3:void access$performPoseCheck(com.truid.android.vision.AgentFaceDetectionHandler,com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/b;Lcom/google/mlkit/vision/face/Face;Landroid/media/Image;Lkotlin/jvm/functions/Function2;)V"}
    void access$setFaceFrameCaptured$p(com.truid.android.vision.AgentFaceDetectionHandler,boolean) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/b;)V"}
    void access$setMaintainPoseCounter$p(com.truid.android.vision.AgentFaceDetectionHandler,int) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/b;)V"}
    void access$setPoseFaceFrameCaptured$p(com.truid.android.vision.AgentFaceDetectionHandler,boolean) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/b;)V"}
    android.util.Size getTargetResolution() -> getTargetResolution
com.truid.android.vision.AgentFaceDetectionHandler$analyzeImage$1 -> y.a:
# {"id":"sourceFile","fileName":"AgentFaceDetectionHandler.kt"}
    com.truid.android.vision.AgentFaceDetectionHandler this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/b;"}
    kotlin.jvm.functions.Function2 $callback -> b
    android.media.Image $mediaImage -> c
    void <init>(com.truid.android.vision.AgentFaceDetectionHandler,kotlin.jvm.functions.Function2,android.media.Image) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/b;Le/a;Landroid/media/Image;)V"}
    void invoke(java.util.List) -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.vision.AgentFaceDetectionHandler$performPoseCheck$1 -> y.b$a:
# {"id":"sourceFile","fileName":"AgentFaceDetectionHandler.kt"}
    kotlin.jvm.functions.Function2 $callback -> a
    com.google.mlkit.vision.face.Face $face -> b
    void <init>(kotlin.jvm.functions.Function2,com.google.mlkit.vision.face.Face) -> <init>
    void invoke(boolean,boolean) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
com.truid.android.vision.AgentFaceDetectionHandler2 -> y.f:
# {"id":"sourceFile","fileName":"AgentFaceDetectionHandler2.kt"}
    com.google.mlkit.vision.face.FaceDetector faceDetector -> a
    long cameraImageSize -> b
    boolean waitingForUpload -> c
    boolean livenessComplete -> d
    org.opencv.core.Mat previousGrayMat -> e
    android.graphics.Bitmap capturedFrame -> f
    boolean farFaceFrameCaptured -> g
    void <init>() -> <init>
    1:1:void com.truid.android.vision.AgentFaceDetectionHandler2.setCameraImageSize(android.media.Image):0:0 -> a
    1:1:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/camera/core/ImageProxy;Le/a;)V"}
    2:2:boolean com.truid.android.vision.AgentFaceDetectionHandler2.isImageBlurred(androidx.camera.core.ImageProxy):0:0 -> a
    2:2:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2):0 -> a
    3:3:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2):0:0 -> a
    4:4:void analyzeImage$lambda$0(kotlin.jvm.functions.Function1,java.lang.Object):0:0 -> a
    5:5:void analyzeImage$lambda$1(android.media.Image,androidx.camera.core.ImageProxy,com.google.android.gms.tasks.Task):0:0 -> a
    6:6:void analyzeImage$lambda$2(java.lang.Exception):0:0 -> a
    7:7:void setCameraPreviewSize-uvyYCjk(long):0:0 -> a
    8:8:void setOval-0a9Yr6o(long,long):0:0 -> a
    9:9:boolean showCloseOval():0:0 -> a
    android.util.Size getTargetResolution() -> getTargetResolution
com.truid.android.vision.AgentFaceDetectionHandler2$analyzeImage$1 -> y.c:
# {"id":"sourceFile","fileName":"AgentFaceDetectionHandler2.kt"}
    com.truid.android.vision.AgentFaceDetectionHandler2 this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/f;"}
    android.media.Image $mediaImage -> b
    boolean $blur -> c
    kotlin.jvm.functions.Function2 $callback -> d
    void <init>(com.truid.android.vision.AgentFaceDetectionHandler2,android.media.Image,boolean,kotlin.jvm.functions.Function2) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/f;Landroid/media/Image;ZLe/a;)V"}
    1:1:void com.truid.android.vision.AgentFaceDetectionHandler2$analyzeImage$1.invoke(java.util.List):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:boolean com.truid.android.vision.AgentFaceDetectionHandler2.isFaceCentered(com.google.mlkit.vision.face.Face):0:0 -> invoke
    2:2:void com.truid.android.vision.AgentFaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> invoke
    2:2:void com.truid.android.vision.AgentFaceDetectionHandler2.access$performFaceLiveness(com.truid.android.vision.AgentFaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    2:2:void com.truid.android.vision.AgentFaceDetectionHandler2$analyzeImage$1.invoke(java.util.List):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:boolean com.truid.android.vision.AgentFaceDetectionHandler2.isFaceCentered(com.google.mlkit.vision.face.Face):0:0 -> invoke
    3:3:void com.truid.android.vision.AgentFaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> invoke
    3:3:void com.truid.android.vision.AgentFaceDetectionHandler2.access$performFaceLiveness(com.truid.android.vision.AgentFaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> invoke
    3:3:void com.truid.android.vision.AgentFaceDetectionHandler2$analyzeImage$1.invoke(java.util.List):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:boolean com.truid.android.vision.AgentFaceDetectionHandler2.isFaceStraight(com.google.mlkit.vision.face.Face):0:0 -> invoke
    4:4:void com.truid.android.vision.AgentFaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> invoke
    4:4:void com.truid.android.vision.AgentFaceDetectionHandler2.access$performFaceLiveness(com.truid.android.vision.AgentFaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> invoke
    4:4:void com.truid.android.vision.AgentFaceDetectionHandler2$analyzeImage$1.invoke(java.util.List):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:float com.truid.android.vision.AgentFaceDetectionHandler2.getFaceCoverage(com.google.mlkit.vision.face.Face):0:0 -> invoke
    5:5:void com.truid.android.vision.AgentFaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> invoke
    5:5:void com.truid.android.vision.AgentFaceDetectionHandler2.access$performFaceLiveness(com.truid.android.vision.AgentFaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> invoke
    5:5:void com.truid.android.vision.AgentFaceDetectionHandler2$analyzeImage$1.invoke(java.util.List):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:void com.truid.android.vision.AgentFaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0:0 -> invoke
    6:6:void com.truid.android.vision.AgentFaceDetectionHandler2.access$performFaceLiveness(com.truid.android.vision.AgentFaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> invoke
    6:6:void com.truid.android.vision.AgentFaceDetectionHandler2$analyzeImage$1.invoke(java.util.List):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:void com.truid.android.vision.AgentFaceDetectionHandler2$analyzeImage$1.invoke(java.util.List):0:0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.AgentFaceDetectionHandler2$performFaceLiveness$1 -> y.d:
# {"id":"sourceFile","fileName":"AgentFaceDetectionHandler2.kt"}
    com.truid.android.vision.AgentFaceDetectionHandler2 this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/f;"}
    kotlin.jvm.functions.Function2 $callback -> b
    void <init>(com.truid.android.vision.AgentFaceDetectionHandler2,kotlin.jvm.functions.Function2) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/f;Lkotlin/jvm/functions/Function2;)V"}
    1:1:void com.truid.android.vision.AgentFaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String,java.lang.Boolean):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    2:2:void com.truid.android.vision.AgentFaceDetectionHandler2.access$setLivenessComplete$p(com.truid.android.vision.AgentFaceDetectionHandler2,boolean):0:0 -> invoke
    2:2:void com.truid.android.vision.AgentFaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String,java.lang.Boolean):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    3:3:void com.truid.android.vision.AgentFaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String,java.lang.Boolean):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object,java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> invoke
com.truid.android.vision.AgentFaceDetectionHandler2$performFaceLiveness$2 -> y.e:
# {"id":"sourceFile","fileName":"AgentFaceDetectionHandler2.kt"}
    com.truid.android.vision.AgentFaceDetectionHandler2$performFaceLiveness$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/e;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void invoke(java.lang.String) -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.vision.AgentFaceLiveness -> y.g:
# {"id":"sourceFile","fileName":"AgentFaceLiveness.kt"}
    void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/camera/core/ImageProxy;Le/a;)V"}
    void setCameraPreviewSize-uvyYCjk(long) -> a
    void setOval-0a9Yr6o(long,long) -> a
    boolean showCloseOval() -> a
    android.util.Size getTargetResolution() -> getTargetResolution
com.truid.android.vision.AgentFaceLiveness$DetectionStatus -> y.g$a:
# {"id":"sourceFile","fileName":"AgentFaceLiveness.kt"}
    java.lang.String message -> a
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus FAILED -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus TRY_AGAIN -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus POSITION_ERROR -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus LOOK_STRAIGHT_ERROR -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus TILT_ERROR -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus LOOK_LEFT -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus LOOK_RIGHT -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus HOLD -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus WAIT -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus DONE -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus MULTIPLE_FACES -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus NEAR -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus FAR -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus[] $VALUES -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Ly/g$a;"}
    1:1:com.truid.android.vision.AgentFaceLiveness$DetectionStatus[] com.truid.android.vision.AgentFaceLiveness$DetectionStatus.$values():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus valueOf(java.lang.String) -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly/g$a;"}
    com.truid.android.vision.AgentFaceLiveness$DetectionStatus[] values() -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly/g$a;"}
com.truid.android.vision.CardDetectionHandler -> y.h:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    com.truid.android.vision.CardDetectionHandler$DetectionProgress currentDetectionProgress -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h$a;"}
    boolean waitingForUpload -> b
    boolean referenceFrameCaptured -> c
    boolean authenticationFramesCaptured -> d
    int numAuthenticationFramesCaptured -> e
    boolean backFrameCaptured -> f
    java.lang.String cardType -> g
    android.graphics.Bitmap referenceFrame -> h
    android.graphics.Bitmap roiBitmap -> i
    org.opencv.core.Point roiTl -> j
    org.opencv.core.Point roiBr -> k
    int roiVerticalOffset -> l
    org.opencv.core.Mat previousGrayMat -> m
    boolean postScanOperationsStarted -> n
    java.lang.String barcodeData -> o
    android.graphics.Bitmap bitmapBuffer -> p
    int imageRotationDegrees -> q
    void <init>() -> <init>
    1:1:boolean access$getBackFrameCaptured$p(com.truid.android.vision.CardDetectionHandler):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;)Z"}
    2:2:org.opencv.core.Mat com.truid.android.vision.CardDetectionHandler.getInputFrameMatrix(androidx.camera.core.ImageProxy):0:0 -> a
    2:2:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/camera/core/ImageProxy;ZLf/a;)V"}
    3:3:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    4:4:org.opencv.core.Mat com.truid.android.vision.CardDetectionHandler.getROIFrameMatrix(org.opencv.core.Mat):0:0 -> a
    4:4:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    5:5:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    6:6:android.graphics.Rect com.truid.android.vision.CardDetectionHandler.getReferanceFrameBounds():0:0 -> a
    6:6:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    7:7:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    8:8:double com.truid.android.vision.CardDetectionHandler.calculateIOU(android.graphics.Rect,android.graphics.Rect):0:0 -> a
    8:8:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    9:9:double com.truid.android.vision.CardDetectionHandler.calculateBlur(org.opencv.core.Mat):0:0 -> a
    9:9:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    10:10:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    10:10:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    11:11:void com.truid.android.vision.CardDetectionHandler.uploadReferenceFrame(android.graphics.Bitmap):0:0 -> a
    11:11:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    11:11:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    12:12:void com.truid.android.api.DocumentCapture.uploadReferenceFrame$sdk_release$default(com.truid.android.api.DocumentCapture,android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> a
    12:12:void com.truid.android.vision.CardDetectionHandler.uploadReferenceFrame(android.graphics.Bitmap):0 -> a
    12:12:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    12:12:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    13:13:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    13:13:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    14:14:boolean com.truid.android.api.Session.getAuthenticityRequired():0:0 -> a
    14:14:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    14:14:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    15:15:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    15:15:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    16:16:void com.truid.android.vision.CardDetectionHandler.uploadAuthenticationFrame(android.graphics.Bitmap):0:0 -> a
    16:16:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    16:16:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    17:17:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    17:17:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    18:18:boolean com.truid.android.api.Session.getBackFrameRequired():0:0 -> a
    18:18:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    18:18:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    19:19:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    19:19:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    20:20:void com.truid.android.vision.CardDetectionHandler.uploadBackFrame(android.graphics.Bitmap,kotlin.jvm.functions.Function2):0:0 -> a
    20:20:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    20:20:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    21:21:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    21:21:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    22:22:void com.truid.android.vision.CardDetectionHandler$DetectionProgress.setProgress(int):0:0 -> a
    22:22:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    22:22:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    23:23:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    23:23:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    24:24:void com.truid.android.vision.CardDetectionHandler.performPostScanOperations(kotlin.jvm.functions.Function2):0:0 -> a
    24:24:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    24:24:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    25:25:boolean com.truid.android.api.Session.getLocalOCRForSmartCNICRequired():0:0 -> a
    25:25:void com.truid.android.vision.CardDetectionHandler.performPostScanOperations(kotlin.jvm.functions.Function2):0 -> a
    25:25:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    25:25:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    26:26:void com.truid.android.vision.CardDetectionHandler.performPostScanOperations(kotlin.jvm.functions.Function2):0:0 -> a
    26:26:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    26:26:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    27:27:void com.truid.android.vision.CardDetectionHandler.makePostScanAPICalls(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0):0:0 -> a
    27:27:void com.truid.android.vision.CardDetectionHandler.performPostScanOperations(kotlin.jvm.functions.Function2):0 -> a
    27:27:void com.truid.android.vision.CardDetectionHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    27:27:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0 -> a
    28:28:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    29:29:void performBarcodeScanning(android.graphics.Bitmap,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Lf/a;)V"}
    30:30:void performBarcodeScanning$lambda$0(kotlin.jvm.functions.Function1,java.lang.Object):0:0 -> a
    31:31:void performBarcodeScanning$lambda$1(java.lang.Exception):0:0 -> a
    32:32:void performOCR(kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/s;)V"}
    33:33:void setROIVerticalOffset$sdk_release(int):0:0 -> a
    1:1:com.truid.android.vision.CardDetectionHandler$DetectionProgress access$getCurrentDetectionProgress$p(com.truid.android.vision.CardDetectionHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;)Ly/h$a;"}
    2:2:void performOCR$lambda$2(kotlin.jvm.functions.Function1,java.lang.Object):0:0 -> b
    void access$setWaitingForUpload$p(com.truid.android.vision.CardDetectionHandler,boolean) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;)V"}
com.truid.android.vision.CardDetectionHandler$DetectionProgress -> y.h$a:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    int progress -> a
    int roiPosition -> b
    boolean enableFlash -> c
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    3:3:void <init>(int,int,boolean):0:0 -> <init>
    void setProgress(int) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.truid.android.vision.CardDetectionHandler$UserPrompt -> y.h$b:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    com.truid.android.vision.CardDetectionHandler$UserPrompt CAPTURING -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h$b;"}
    com.truid.android.vision.CardDetectionHandler$UserPrompt POSITION_ISSUE -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h$b;"}
    com.truid.android.vision.CardDetectionHandler$UserPrompt BLUR_ISSUE -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h$b;"}
    com.truid.android.vision.CardDetectionHandler$UserPrompt PROMPT_BACK_SIDE -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h$b;"}
    com.truid.android.vision.CardDetectionHandler$UserPrompt ANALYSING_CARD -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h$b;"}
    com.truid.android.vision.CardDetectionHandler$UserPrompt DONE -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h$b;"}
    com.truid.android.vision.CardDetectionHandler$UserPrompt BARCODE_ISSUE -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h$b;"}
    com.truid.android.vision.CardDetectionHandler$UserPrompt VALIDATION_ERROR -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h$b;"}
    com.truid.android.vision.CardDetectionHandler$UserPrompt AREA_ISSUE -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h$b;"}
    com.truid.android.vision.CardDetectionHandler$UserPrompt HOLD -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h$b;"}
    com.truid.android.vision.CardDetectionHandler$UserPrompt[] $VALUES -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Ly/h$b;"}
    1:1:com.truid.android.vision.CardDetectionHandler$UserPrompt[] com.truid.android.vision.CardDetectionHandler$UserPrompt.$values():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.truid.android.vision.CardDetectionHandler$UserPrompt valueOf(java.lang.String) -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly/h$b;"}
    com.truid.android.vision.CardDetectionHandler$UserPrompt[] values() -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly/h$b;"}
com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1 -> y.k:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    kotlin.jvm.functions.Function0 $callback -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:boolean com.truid.android.api.Session.getIdToSelfieMatchingRequired():0:0 -> invoke
    1:1:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1.invoke():0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1.invoke():0:0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:com.truid.android.IdSelfie com.truid.android.UserData.getIdSelfieMatch():0:0 -> invoke
    3:3:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:boolean com.truid.android.IdSelfie.getCardDetecctionDone():0:0 -> invoke
    4:4:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:java.lang.Object invoke():0 -> invoke
    5:5:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1.invoke():0:0 -> invoke
    5:5:java.lang.Object invoke():0 -> invoke
    6:6:com.truid.android.IdSelfie com.truid.android.UserData.getIdSelfieMatch():0:0 -> invoke
    6:6:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:java.lang.Object invoke():0 -> invoke
    7:7:boolean com.truid.android.IdSelfie.getFaceLivenessDone():0:0 -> invoke
    7:7:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1.invoke():0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:java.lang.Object invoke():0 -> invoke
    8:8:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1.invoke():0:0 -> invoke
    8:8:java.lang.Object invoke():0 -> invoke
    9:9:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1$1 -> y.i:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    kotlin.jvm.functions.Function0 $callback -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1$2 -> y.j:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$1$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2 -> y.n:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    kotlin.jvm.functions.Function0 $errorCallback -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:boolean com.truid.android.api.Session.getIdToSelfieMatchingRequired():0:0 -> invoke
    2:2:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2.invoke(java.lang.String):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:com.truid.android.IdSelfie com.truid.android.UserData.getIdSelfieMatch():0:0 -> invoke
    4:4:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:boolean com.truid.android.IdSelfie.getCardDetecctionDone():0:0 -> invoke
    5:5:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2.invoke(java.lang.String):0:0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:com.truid.android.IdSelfie com.truid.android.UserData.getIdSelfieMatch():0:0 -> invoke
    7:7:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:boolean com.truid.android.IdSelfie.getFaceLivenessDone():0:0 -> invoke
    8:8:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:java.lang.Object invoke(java.lang.Object):0 -> invoke
    9:9:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2.invoke(java.lang.String):0:0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object):0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2$1 -> y.l:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    kotlin.jvm.functions.Function0 $errorCallback -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2$2 -> y.m:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/m;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.vision.CardDetectionHandler$makePostScanAPICalls$2$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$performBarcodeScanning$1 -> y.o:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    kotlin.jvm.functions.Function2 $callback -> a
    com.truid.android.vision.CardDetectionHandler this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    android.graphics.Bitmap $cardBitmap -> c
    void <init>(kotlin.jvm.functions.Function2,com.truid.android.vision.CardDetectionHandler,android.graphics.Bitmap) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Ly/h;Lf/a;)V"}
    1:1:void com.truid.android.vision.CardDetectionHandler$performBarcodeScanning$1.invoke(java.util.List):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:com.truid.android.vision.CardDetectionHandler$DetectionProgress com.truid.android.vision.CardDetectionHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.CardDetectionHandler):0:0 -> invoke
    2:2:void com.truid.android.vision.CardDetectionHandler$performBarcodeScanning$1.invoke(java.util.List):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.vision.CardDetectionHandler$performBarcodeScanning$1.invoke(java.util.List):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.vision.CardDetectionHandler.access$setBarcodeData$p(com.truid.android.vision.CardDetectionHandler,java.lang.String):0:0 -> invoke
    4:4:void com.truid.android.vision.CardDetectionHandler$performBarcodeScanning$1.invoke(java.util.List):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:void com.truid.android.vision.CardDetectionHandler$performBarcodeScanning$1.invoke(java.util.List):0:0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:void com.truid.android.vision.CardDetectionHandler.uploadBackFrame(android.graphics.Bitmap,kotlin.jvm.functions.Function2):0:0 -> invoke
    6:6:void com.truid.android.vision.CardDetectionHandler.access$uploadBackFrame(com.truid.android.vision.CardDetectionHandler,android.graphics.Bitmap,kotlin.jvm.functions.Function2):0 -> invoke
    6:6:void com.truid.android.vision.CardDetectionHandler$performBarcodeScanning$1.invoke(java.util.List):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    7:7:void com.truid.android.vision.CardDetectionHandler.uploadBackFrame(android.graphics.Bitmap,kotlin.jvm.functions.Function2):0:0 -> invoke
    7:7:void com.truid.android.vision.CardDetectionHandler.access$uploadBackFrame(com.truid.android.vision.CardDetectionHandler,android.graphics.Bitmap,kotlin.jvm.functions.Function2):0 -> invoke
    7:7:void com.truid.android.vision.CardDetectionHandler$performBarcodeScanning$1.invoke(java.util.List):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$performOCR$1 -> y.p:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    kotlin.jvm.internal.Ref$ObjectRef $json -> a
    kotlin.jvm.functions.Function1 $callback -> b
    void <init>(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lkotlin/jvm/internal/Ref$ObjectRef;Ly/s;)V"}
    void invoke(com.google.mlkit.vision.text.Text) -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.vision.CardDetectionHandler$performPostScanOperations$2 -> y.s:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    com.truid.android.vision.CardDetectionHandler this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    kotlin.jvm.functions.Function2 $callback -> b
    void <init>(com.truid.android.vision.CardDetectionHandler,kotlin.jvm.functions.Function2) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;Lf/a;)V"}
    1:1:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.vision.CardDetectionHandler.access$makePostScanAPICalls(com.truid.android.vision.CardDetectionHandler,java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0):0:0 -> invoke
    2:2:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$2.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.vision.CardDetectionHandler.makePostScanAPICalls(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0):0:0 -> invoke
    3:3:void com.truid.android.vision.CardDetectionHandler.access$makePostScanAPICalls(com.truid.android.vision.CardDetectionHandler,java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0):0 -> invoke
    3:3:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$2.invoke(java.lang.String):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$performPostScanOperations$2$1 -> y.q:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    kotlin.jvm.functions.Function2 $callback -> a
    com.truid.android.vision.CardDetectionHandler this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    void <init>(kotlin.jvm.functions.Function2,com.truid.android.vision.CardDetectionHandler) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;Lkotlin/jvm/functions/Function2;)V"}
    1:1:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:com.truid.android.vision.CardDetectionHandler$DetectionProgress com.truid.android.vision.CardDetectionHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.CardDetectionHandler):0:0 -> invoke
    2:2:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$2$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$2$1.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$performPostScanOperations$2$2 -> y.r:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    kotlin.jvm.functions.Function2 $callback -> a
    void <init>(kotlin.jvm.functions.Function2) -> <init>
    1:1:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$2$2.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$performPostScanOperations$3 -> y.t:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    kotlin.jvm.functions.Function2 $callback -> a
    com.truid.android.vision.CardDetectionHandler this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    void <init>(kotlin.jvm.functions.Function2,com.truid.android.vision.CardDetectionHandler) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;Lf/a;)V"}
    1:1:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$3.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:com.truid.android.vision.CardDetectionHandler$DetectionProgress com.truid.android.vision.CardDetectionHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.CardDetectionHandler):0:0 -> invoke
    2:2:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$3.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$3.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$performPostScanOperations$4 -> y.u:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    kotlin.jvm.functions.Function2 $callback -> a
    com.truid.android.vision.CardDetectionHandler this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    void <init>(kotlin.jvm.functions.Function2,com.truid.android.vision.CardDetectionHandler) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;Lf/a;)V"}
    1:1:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$4.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:com.truid.android.vision.CardDetectionHandler$DetectionProgress com.truid.android.vision.CardDetectionHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.CardDetectionHandler):0:0 -> invoke
    2:2:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$4.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.vision.CardDetectionHandler$performPostScanOperations$4.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1 -> y.v:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    com.truid.android.vision.CardDetectionHandler this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    void <init>(com.truid.android.vision.CardDetectionHandler) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;)V"}
    1:1:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:com.truid.android.vision.CardDetectionHandler$DetectionProgress com.truid.android.vision.CardDetectionHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.CardDetectionHandler):0:0 -> invoke
    2:2:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:boolean com.truid.android.api.Session.getBackFrameRequired():0:0 -> invoke
    3:3:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.vision.CardDetectionHandler$DetectionProgress.setProgress(int):0:0 -> invoke
    4:4:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:java.lang.String com.truid.android.vision.CardDetectionHandler.access$getCardType$p(com.truid.android.vision.CardDetectionHandler):0:0 -> invoke
    5:5:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0:0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:com.truid.android.vision.CardDetectionHandler$DetectionProgress com.truid.android.vision.CardDetectionHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.CardDetectionHandler):0:0 -> invoke
    7:7:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:int com.truid.android.vision.CardDetectionHandler.access$getNumAuthenticationFramesCaptured$p(com.truid.android.vision.CardDetectionHandler):0:0 -> invoke
    8:8:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object):0 -> invoke
    9:9:void com.truid.android.vision.CardDetectionHandler$DetectionProgress.setRoiPosition(int):0:0 -> invoke
    9:9:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:java.lang.Object invoke(java.lang.Object):0 -> invoke
    10:10:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object):0 -> invoke
    11:11:int com.truid.android.vision.CardDetectionHandler.access$getNumAuthenticationFramesCaptured$p(com.truid.android.vision.CardDetectionHandler):0:0 -> invoke
    11:11:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object):0 -> invoke
    12:12:void com.truid.android.vision.CardDetectionHandler.access$setNumAuthenticationFramesCaptured$p(com.truid.android.vision.CardDetectionHandler,int):0:0 -> invoke
    12:12:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object):0 -> invoke
    13:13:void com.truid.android.vision.CardDetectionHandler.access$setAuthenticationFramesCaptured$p(com.truid.android.vision.CardDetectionHandler,boolean):0:0 -> invoke
    13:13:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object):0 -> invoke
    14:14:com.truid.android.vision.CardDetectionHandler$DetectionProgress com.truid.android.vision.CardDetectionHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.CardDetectionHandler):0:0 -> invoke
    14:14:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object):0 -> invoke
    15:15:void com.truid.android.vision.CardDetectionHandler$DetectionProgress.setEnableFlash(boolean):0:0 -> invoke
    15:15:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:15:java.lang.Object invoke(java.lang.Object):0 -> invoke
    16:16:void com.truid.android.vision.CardDetectionHandler$DetectionProgress.setRoiPosition(int):0:0 -> invoke
    16:16:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:16:java.lang.Object invoke(java.lang.Object):0 -> invoke
    17:17:boolean com.truid.android.api.Session.getBackFrameRequired():0:0 -> invoke
    17:17:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object):0 -> invoke
    18:18:void com.truid.android.vision.CardDetectionHandler$DetectionProgress.setProgress(int):0:0 -> invoke
    18:18:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:18:java.lang.Object invoke(java.lang.Object):0 -> invoke
    19:19:void com.truid.android.vision.CardDetectionHandler.access$setWaitingForUpload$p(com.truid.android.vision.CardDetectionHandler,boolean):0:0 -> invoke
    19:19:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object):0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$2 -> y.w:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/w;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.vision.CardDetectionHandler$uploadAuthenticationFrame$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$uploadBackFrame$1 -> y.x:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    com.truid.android.vision.CardDetectionHandler this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    void <init>(com.truid.android.vision.CardDetectionHandler) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;)V"}
    void invoke() -> a
    java.lang.Object invoke() -> invoke
com.truid.android.vision.CardDetectionHandler$uploadBackFrame$2 -> y.y:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    com.truid.android.vision.CardDetectionHandler$uploadBackFrame$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/y;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void invoke(java.lang.String) -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1 -> y.z:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    com.truid.android.vision.CardDetectionHandler this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h;"}
    void <init>(com.truid.android.vision.CardDetectionHandler) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/h;)V"}
    1:1:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.vision.CardDetectionHandler.access$setReferenceFrameCaptured$p(com.truid.android.vision.CardDetectionHandler,boolean):0:0 -> invoke
    2:2:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.vision.CardDetectionHandler.access$setCardType$p(com.truid.android.vision.CardDetectionHandler,java.lang.String):0:0 -> invoke
    3:3:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:com.truid.android.vision.CardDetectionHandler$DetectionProgress com.truid.android.vision.CardDetectionHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.CardDetectionHandler):0:0 -> invoke
    4:4:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:void com.truid.android.vision.CardDetectionHandler$DetectionProgress.setProgress(int):0:0 -> invoke
    5:5:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:boolean com.truid.android.api.Session.getAuthenticityRequired():0:0 -> invoke
    6:6:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:void com.truid.android.vision.CardDetectionHandler$DetectionProgress.setEnableFlash(boolean):0:0 -> invoke
    7:7:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1.invoke(java.lang.String):0:0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object):0 -> invoke
    9:9:com.truid.android.IdSelfie com.truid.android.UserData.getIdSelfieMatch():0:0 -> invoke
    9:9:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:java.lang.Object invoke(java.lang.Object):0 -> invoke
    10:10:void com.truid.android.IdSelfie.setCardDetecctionDone(boolean):0:0 -> invoke
    10:10:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:10:java.lang.Object invoke(java.lang.Object):0 -> invoke
    11:11:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1.invoke(java.lang.String):0:0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object):0 -> invoke
    12:12:void com.truid.android.vision.CardDetectionHandler.access$setWaitingForUpload$p(com.truid.android.vision.CardDetectionHandler,boolean):0:0 -> invoke
    12:12:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object):0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$2 -> y.a0:
# {"id":"sourceFile","fileName":"CardDetectionHandler.kt"}
    com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/a0;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.vision.CardDetectionHandler$uploadReferenceFrame$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.FaceDetectionHandler -> y.c0:
# {"id":"sourceFile","fileName":"FaceDetectionHandler.kt"}
    com.google.mlkit.vision.face.FaceDetector faceDetector -> a
    int MAINTAIN_POSE_FRAMES -> b
    long cameraImageSize -> c
    long cameraPreviewSize -> d
    long ovalTopLeft -> e
    long ovalBottomRight -> f
    boolean faceFrameCaptured -> g
    boolean poseFaceFrameCaptured -> h
    int maintainPoseCounter -> i
    void <init>() -> <init>
    1:1:double com.truid.android.vision.FaceDetectionHandler.getEyesDistance(com.google.mlkit.vision.face.Face):0:0 -> a
    1:1:double access$getEyesDistance(com.truid.android.vision.FaceDetectionHandler,com.google.mlkit.vision.face.Face):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/c0;Lcom/google/mlkit/vision/face/Face;)D"}
    2:2:boolean access$getFaceFrameCaptured$p(com.truid.android.vision.FaceDetectionHandler):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/c0;)Z"}
    3:3:void access$performInitialCheck(com.truid.android.vision.FaceDetectionHandler,com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/c0;Lcom/google/mlkit/vision/face/Face;Landroid/media/Image;Lkotlin/jvm/functions/Function2;)V"}
    4:4:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/camera/core/ImageProxy;Lj/b;)V"}
    5:5:void analyzeImage$lambda$0(kotlin.jvm.functions.Function1,java.lang.Object):0:0 -> a
    6:6:void analyzeImage$lambda$1(android.media.Image,androidx.camera.core.ImageProxy,com.google.android.gms.tasks.Task):0:0 -> a
    7:7:void analyzeImage$lambda$2(java.lang.Exception):0:0 -> a
    8:8:void com.truid.android.vision.FaceLiveness$DefaultImpls.initialize(com.truid.android.vision.FaceLiveness,android.content.Context):0:0 -> a
    8:8:void initialize(android.content.Context):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;)V"}
    9:9:boolean isFaceInsideOval(com.google.mlkit.vision.face.Face):0:0 -> a
    10:10:boolean com.truid.android.vision.FaceDetectionHandler.isFaceStraight(com.google.mlkit.vision.face.Face):0:0 -> a
    10:10:void performInitialCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
    11:11:boolean com.truid.android.vision.FaceDetectionHandler.isFaceLookingStraight(com.google.mlkit.vision.face.Face):0:0 -> a
    11:11:void performInitialCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> a
    12:14:void performInitialCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0:0 -> a
    15:15:void setCameraPreviewSize-uvyYCjk(long):0:0 -> a
    16:16:void setOval-0a9Yr6o(long,long):0:0 -> a
    17:17:boolean showCloseOval():0:0 -> a
    1:1:boolean access$getPoseFaceFrameCaptured$p(com.truid.android.vision.FaceDetectionHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/c0;)Z"}
    2:2:boolean access$isFaceInsideOval(com.truid.android.vision.FaceDetectionHandler,com.google.mlkit.vision.face.Face):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/c0;Lcom/google/mlkit/vision/face/Face;)Z"}
    3:3:void access$performPoseCheck(com.truid.android.vision.FaceDetectionHandler,com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/c0;Lcom/google/mlkit/vision/face/Face;Landroid/media/Image;Lkotlin/jvm/functions/Function2;)V"}
    4:4:android.graphics.Bitmap getCapturedFrame():0:0 -> b
    5:5:boolean com.truid.android.vision.FaceDetectionHandler.isFaceStraight(com.google.mlkit.vision.face.Face):0:0 -> b
    5:5:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> b
    6:6:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0:0 -> b
    7:7:boolean com.truid.android.vision.FaceDetectionHandler.isFaceLookingLeft(com.google.mlkit.vision.face.Face):0:0 -> b
    7:7:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> b
    8:8:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0:0 -> b
    9:9:boolean com.truid.android.vision.FaceDetectionHandler.isFaceLookingRight(com.google.mlkit.vision.face.Face):0:0 -> b
    9:9:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> b
    10:10:boolean com.truid.android.vision.FaceDetectionHandler.isFaceLookingStraight(com.google.mlkit.vision.face.Face):0:0 -> b
    10:10:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> b
    11:11:boolean com.truid.android.vision.FaceDetectionHandler.isFaceInAngleBuffer(com.google.mlkit.vision.face.Face):0:0 -> b
    11:11:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0 -> b
    12:13:void performPoseCheck(com.google.mlkit.vision.face.Face,android.media.Image,kotlin.jvm.functions.Function2):0:0 -> b
    void access$setFaceFrameCaptured$p(com.truid.android.vision.FaceDetectionHandler,boolean) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/c0;)V"}
    void access$setMaintainPoseCounter$p(com.truid.android.vision.FaceDetectionHandler,int) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/c0;)V"}
    void access$setPoseFaceFrameCaptured$p(com.truid.android.vision.FaceDetectionHandler,boolean) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/c0;)V"}
    android.util.Size getTargetResolution() -> getTargetResolution
com.truid.android.vision.FaceDetectionHandler$analyzeImage$1 -> y.b0:
# {"id":"sourceFile","fileName":"FaceDetectionHandler.kt"}
    com.truid.android.vision.FaceDetectionHandler this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/c0;"}
    kotlin.jvm.functions.Function2 $callback -> b
    android.media.Image $mediaImage -> c
    void <init>(com.truid.android.vision.FaceDetectionHandler,kotlin.jvm.functions.Function2,android.media.Image) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/c0;Lj/b;Landroid/media/Image;)V"}
    void invoke(java.util.List) -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.vision.FaceDetectionHandler$performPoseCheck$1 -> y.c0$a:
# {"id":"sourceFile","fileName":"FaceDetectionHandler.kt"}
    kotlin.jvm.functions.Function2 $callback -> a
    com.google.mlkit.vision.face.Face $face -> b
    void <init>(kotlin.jvm.functions.Function2,com.google.mlkit.vision.face.Face) -> <init>
    void invoke() -> a
    java.lang.Object invoke() -> invoke
com.truid.android.vision.FaceDetectionHandler2 -> y.i0:
# {"id":"sourceFile","fileName":"FaceDetectionHandler2.kt"}
    com.google.mlkit.vision.face.FaceDetector faceDetector -> a
    long cameraImageSize -> b
    boolean waitingForUpload -> c
    boolean livenessComplete -> d
    org.opencv.core.Mat previousGrayMat -> e
    android.graphics.Bitmap capturedFrame -> f
    boolean farFaceFrameCaptured -> g
    void <init>() -> <init>
    1:1:boolean com.truid.android.vision.FaceDetectionHandler2.isFaceCentered(com.google.mlkit.vision.face.Face):0:0 -> a
    1:1:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    1:1:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/i0;Lcom/google/mlkit/vision/face/Face;Landroid/media/Image;ZLkotlin/jvm/functions/Function2;)V"}
    2:2:boolean com.truid.android.vision.FaceDetectionHandler2.isFaceCentered(com.google.mlkit.vision.face.Face):0:0 -> a
    2:2:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    2:2:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    3:3:boolean com.truid.android.vision.FaceDetectionHandler2.isFaceStraight(com.google.mlkit.vision.face.Face):0:0 -> a
    3:3:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    3:3:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    4:4:float com.truid.android.vision.FaceDetectionHandler2.getFaceCoverage(com.google.mlkit.vision.face.Face):0:0 -> a
    4:4:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    4:4:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    5:5:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    5:5:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    6:6:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0:0 -> a
    6:6:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    6:6:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    7:7:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer.getBuffer():0:0 -> a
    7:7:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0 -> a
    7:7:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    7:7:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    8:8:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0:0 -> a
    8:8:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    8:8:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    9:9:boolean com.truid.android.vision.YuvToRgbConverter.needCreateAllocations(android.media.Image,com.truid.android.vision.YuvByteBuffer):0:0 -> a
    9:9:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0 -> a
    9:9:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    9:9:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    10:10:int com.truid.android.vision.YuvByteBuffer.getType():0:0 -> a
    10:10:boolean com.truid.android.vision.YuvToRgbConverter.needCreateAllocations(android.media.Image,com.truid.android.vision.YuvByteBuffer):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:10:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0 -> a
    10:10:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    10:10:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    11:11:boolean com.truid.android.vision.YuvToRgbConverter.needCreateAllocations(android.media.Image,com.truid.android.vision.YuvByteBuffer):0:0 -> a
    11:11:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0 -> a
    11:11:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    11:11:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    12:12:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer.getBuffer():0:0 -> a
    12:12:boolean com.truid.android.vision.YuvToRgbConverter.needCreateAllocations(android.media.Image,com.truid.android.vision.YuvByteBuffer):0 -> a
    12:12:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0 -> a
    12:12:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    12:12:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    13:13:boolean com.truid.android.vision.YuvToRgbConverter.needCreateAllocations(android.media.Image,com.truid.android.vision.YuvByteBuffer):0:0 -> a
    13:13:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0 -> a
    13:13:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    13:13:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    14:14:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0:0 -> a
    14:14:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    14:14:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    15:15:int com.truid.android.vision.YuvByteBuffer.getType():0:0 -> a
    15:15:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0 -> a
    15:15:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    15:15:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    16:16:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0:0 -> a
    16:16:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    16:16:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    17:17:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer.getBuffer():0:0 -> a
    17:17:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0 -> a
    17:17:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    17:17:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    18:18:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0:0 -> a
    18:18:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    18:18:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    19:19:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer.getBuffer():0:0 -> a
    19:19:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0 -> a
    19:19:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    19:19:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    20:20:void com.truid.android.vision.YuvToRgbConverter.yuvToRgb(android.media.Image,android.graphics.Bitmap):0:0 -> a
    20:20:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    20:20:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    21:21:void com.truid.android.vision.FaceDetectionHandler2.performFaceLiveness(com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    21:21:void access$performFaceLiveness(com.truid.android.vision.FaceDetectionHandler2,com.google.mlkit.vision.face.Face,android.media.Image,boolean,kotlin.jvm.functions.Function2):0 -> a
    22:22:void com.truid.android.vision.FaceDetectionHandler2.setCameraImageSize(android.media.Image):0:0 -> a
    22:22:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/camera/core/ImageProxy;Lj/b;)V"}
    23:23:boolean com.truid.android.vision.FaceDetectionHandler2.isImageBlurred(androidx.camera.core.ImageProxy):0:0 -> a
    23:23:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2):0 -> a
    24:24:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2):0:0 -> a
    25:25:void analyzeImage$lambda$0(kotlin.jvm.functions.Function1,java.lang.Object):0:0 -> a
    26:26:void analyzeImage$lambda$1(android.media.Image,androidx.camera.core.ImageProxy,com.google.android.gms.tasks.Task):0:0 -> a
    27:27:void analyzeImage$lambda$2(java.lang.Exception):0:0 -> a
    28:28:void com.truid.android.vision.FaceLiveness$DefaultImpls.initialize(com.truid.android.vision.FaceLiveness,android.content.Context):0:0 -> a
    28:28:void initialize(android.content.Context):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;)V"}
    29:29:void setCameraPreviewSize-uvyYCjk(long):0:0 -> a
    30:30:void setOval-0a9Yr6o(long,long):0:0 -> a
    31:31:boolean showCloseOval():0:0 -> a
    android.graphics.Bitmap getCapturedFrame() -> b
    android.util.Size getTargetResolution() -> getTargetResolution
com.truid.android.vision.FaceDetectionHandler2$analyzeImage$1 -> y.d0:
# {"id":"sourceFile","fileName":"FaceDetectionHandler2.kt"}
    com.truid.android.vision.FaceDetectionHandler2 this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/i0;"}
    android.media.Image $mediaImage -> b
    boolean $blur -> c
    kotlin.jvm.functions.Function2 $callback -> d
    void <init>(com.truid.android.vision.FaceDetectionHandler2,android.media.Image,boolean,kotlin.jvm.functions.Function2) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/i0;Landroid/media/Image;ZLj/b;)V"}
    1:1:void com.truid.android.vision.FaceDetectionHandler2$analyzeImage$1.invoke(java.util.List):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1 -> y.g0:
# {"id":"sourceFile","fileName":"FaceDetectionHandler2.kt"}
    com.truid.android.vision.FaceDetectionHandler2 this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/i0;"}
    kotlin.jvm.functions.Function2 $callback -> b
    void <init>(com.truid.android.vision.FaceDetectionHandler2,kotlin.jvm.functions.Function2) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/i0;Lkotlin/jvm/functions/Function2;)V"}
    1:1:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.vision.FaceDetectionHandler2.access$setLivenessComplete$p(com.truid.android.vision.FaceDetectionHandler2,boolean):0:0 -> invoke
    2:2:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:com.truid.android.IdSelfie com.truid.android.UserData.getIdSelfieMatch():0:0 -> invoke
    4:4:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:void com.truid.android.IdSelfie.setFaceLivenessDone(boolean):0:0 -> invoke
    5:5:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:boolean com.truid.android.api.Session.getIdToSelfieMatchingRequired():0:0 -> invoke
    6:6:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0:0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:com.truid.android.IdSelfie com.truid.android.UserData.getIdSelfieMatch():0:0 -> invoke
    8:8:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:java.lang.Object invoke(java.lang.Object):0 -> invoke
    9:9:boolean com.truid.android.IdSelfie.getCardDetecctionDone():0:0 -> invoke
    9:9:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:java.lang.Object invoke(java.lang.Object):0 -> invoke
    10:10:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object):0 -> invoke
    11:11:com.truid.android.IdSelfie com.truid.android.UserData.getIdSelfieMatch():0:0 -> invoke
    11:11:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:11:java.lang.Object invoke(java.lang.Object):0 -> invoke
    12:12:boolean com.truid.android.IdSelfie.getFaceLivenessDone():0:0 -> invoke
    12:12:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:12:java.lang.Object invoke(java.lang.Object):0 -> invoke
    13:13:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1.invoke(java.lang.String):0:0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object):0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1$1 -> y.e0:
# {"id":"sourceFile","fileName":"FaceDetectionHandler2.kt"}
    kotlin.jvm.functions.Function2 $callback -> a
    void <init>(kotlin.jvm.functions.Function2) -> <init>
    1:1:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1$2 -> y.f0:
# {"id":"sourceFile","fileName":"FaceDetectionHandler2.kt"}
    com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/f0;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$1$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$2 -> y.h0:
# {"id":"sourceFile","fileName":"FaceDetectionHandler2.kt"}
    com.truid.android.vision.FaceDetectionHandler2$performFaceLiveness$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/h0;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void invoke(java.lang.String) -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.vision.FaceLiveness -> y.j0:
# {"id":"sourceFile","fileName":"FaceLiveness.kt"}
    void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/camera/core/ImageProxy;Lj/b;)V"}
    void initialize(android.content.Context) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/TruIDLaunchActivity;)V"}
    void setCameraPreviewSize-uvyYCjk(long) -> a
    void setOval-0a9Yr6o(long,long) -> a
    boolean showCloseOval() -> a
    android.graphics.Bitmap getCapturedFrame() -> b
    android.util.Size getTargetResolution() -> getTargetResolution
com.truid.android.vision.FaceLiveness$DefaultImpls -> R8$$REMOVED$$CLASS$$2:
# {"id":"sourceFile","fileName":"FaceLiveness.kt"}
com.truid.android.vision.FaceLiveness$DetectionStatus -> y.j0$a:
# {"id":"sourceFile","fileName":"FaceLiveness.kt"}
    java.lang.String message -> a
    com.truid.android.vision.FaceLiveness$DetectionStatus POSITION_ERROR -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus LOOK_STRAIGHT_ERROR -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus TILT_ERROR -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus PROMPT_FOR_BETTER_LIGHT -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus LOOK_LEFT -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus LOOK_RIGHT -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus HOLD -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus WAIT -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus DONE -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus MULTIPLE_FACES -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus NEAR -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus FAR -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus[] $VALUES -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Ly/j0$a;"}
    1:1:com.truid.android.vision.FaceLiveness$DetectionStatus[] com.truid.android.vision.FaceLiveness$DetectionStatus.$values():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    java.lang.String getMessage() -> a
    com.truid.android.vision.FaceLiveness$DetectionStatus valueOf(java.lang.String) -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly/j0$a;"}
    com.truid.android.vision.FaceLiveness$DetectionStatus[] values() -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly/j0$a;"}
com.truid.android.vision.FingerprintDetectionHandler -> com.truid.android.vision.FingerprintDetectionHandler:
# {"id":"sourceFile","fileName":"FingerprintDetectionHandler.kt"}
    java.io.File ifISO -> a
    java.io.File mfISO -> b
    java.io.File rfISO -> c
    java.io.File pfISO -> d
    java.io.File tISO -> e
    java.io.File ifWSQ -> f
    java.io.File mfWSQ -> g
    java.io.File rfWSQ -> h
    java.io.File pfWSQ -> i
    java.io.File tWSQ -> j
    boolean focusFailed -> k
    boolean captureBothHands -> l
    com.truid.android.vision.FingerprintDetectionHandler$CroppedFingers croppedFingers -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$a;"}
    java.lang.String positionString -> n
    float topBound -> o
    float bottomBound -> p
    android.content.Context context -> q
    android.graphics.Bitmap bitmapBuffer -> r
    boolean isUploading -> s
    boolean isFrameFocused -> t
    int imageRotationDegrees -> u
    com.truid.android.vision.NistPosCode positionCode -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"I"}
    1:1:boolean checkBestFrame(android.graphics.Bitmap,java.util.List,kotlin.jvm.functions.Function2):0:0 -> a
    1:1:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/camera/core/ImageProxy;Ll/d;Ll/f;)V"}
    2:2:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0:0 -> a
    3:3:android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap):0:0 -> a
    3:3:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    4:4:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0:0 -> a
    5:5:void uploadThumbData(kotlin.jvm.functions.Function2):0:0 -> a
    5:5:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    6:6:com.truid.android.Fingers com.truid.android.UserData.getFingers():0:0 -> a
    6:6:void uploadThumbData(kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    7:7:android.graphics.Bitmap com.truid.android.Fingers.getThumbImage():0:0 -> a
    7:7:void uploadThumbData(kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    8:8:void uploadThumbData(kotlin.jvm.functions.Function2):0:0 -> a
    8:8:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    9:9:android.graphics.Bitmap com.truid.android.Fingers.getFingersCaptureFrame():0:0 -> a
    9:9:void uploadThumbData(kotlin.jvm.functions.Function2):0 -> a
    9:9:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    10:10:void uploadThumbData(kotlin.jvm.functions.Function2):0:0 -> a
    10:10:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    11:11:java.lang.Integer com.truid.android.Fingers.getThumbScore():0:0 -> a
    11:11:void uploadThumbData(kotlin.jvm.functions.Function2):0 -> a
    11:11:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    12:12:void uploadThumbData(kotlin.jvm.functions.Function2):0:0 -> a
    12:12:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    13:13:com.truid.android.Fingers com.truid.android.UserData.getFingers():0:0 -> a
    13:13:void uploadThumbData(kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:13:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    14:14:int com.truid.android.Fingers.getRetries():0:0 -> a
    14:14:void uploadThumbData(kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:14:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    15:15:void uploadThumbData(kotlin.jvm.functions.Function2):0:0 -> a
    15:15:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    16:16:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0:0 -> a
    17:17:void uploadHandData(kotlin.jvm.functions.Function2):0:0 -> a
    17:17:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    18:18:com.truid.android.Fingers com.truid.android.UserData.getFingers():0:0 -> a
    18:18:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:18:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    19:19:android.graphics.Bitmap com.truid.android.Fingers.getIndexFingerImage():0:0 -> a
    19:19:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    19:19:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    20:20:void uploadHandData(kotlin.jvm.functions.Function2):0:0 -> a
    20:20:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    21:21:android.graphics.Bitmap com.truid.android.Fingers.getMiddleFingerImage():0:0 -> a
    21:21:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
    21:21:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    22:22:void uploadHandData(kotlin.jvm.functions.Function2):0:0 -> a
    22:22:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    23:23:android.graphics.Bitmap com.truid.android.Fingers.getRingFingerImage():0:0 -> a
    23:23:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
    23:23:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    24:24:void uploadHandData(kotlin.jvm.functions.Function2):0:0 -> a
    24:24:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    25:25:android.graphics.Bitmap com.truid.android.Fingers.getPinkyFingerImage():0:0 -> a
    25:25:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
    25:25:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    26:26:void uploadHandData(kotlin.jvm.functions.Function2):0:0 -> a
    26:26:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    27:27:android.graphics.Bitmap com.truid.android.Fingers.getThumbImage():0:0 -> a
    27:27:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
    27:27:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    28:28:android.graphics.Bitmap com.truid.android.Fingers.getFingersCaptureFrame():0:0 -> a
    28:28:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
    28:28:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    29:29:void uploadHandData(kotlin.jvm.functions.Function2):0:0 -> a
    29:29:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    30:30:java.lang.Integer com.truid.android.Fingers.getIndexFingerScore():0:0 -> a
    30:30:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
    30:30:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    31:31:void uploadHandData(kotlin.jvm.functions.Function2):0:0 -> a
    31:31:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    32:32:java.lang.Integer com.truid.android.Fingers.getMiddleFingerScore():0:0 -> a
    32:32:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
    32:32:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    33:33:void uploadHandData(kotlin.jvm.functions.Function2):0:0 -> a
    33:33:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    34:34:java.lang.Integer com.truid.android.Fingers.getRingFingerScore():0:0 -> a
    34:34:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
    34:34:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    35:35:void uploadHandData(kotlin.jvm.functions.Function2):0:0 -> a
    35:35:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    36:36:java.lang.Integer com.truid.android.Fingers.getPinkyFingerScore():0:0 -> a
    36:36:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
    36:36:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    37:37:void uploadHandData(kotlin.jvm.functions.Function2):0:0 -> a
    37:37:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    38:38:java.lang.Integer com.truid.android.Fingers.getThumbScore():0:0 -> a
    38:38:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
    38:38:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    39:39:void uploadHandData(kotlin.jvm.functions.Function2):0:0 -> a
    39:39:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    40:40:com.truid.android.Fingers com.truid.android.UserData.getFingers():0:0 -> a
    40:40:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    40:40:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    41:41:int com.truid.android.Fingers.getRetries():0:0 -> a
    41:41:void uploadHandData(kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    41:41:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    42:42:void uploadHandData(kotlin.jvm.functions.Function2):0:0 -> a
    42:42:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0 -> a
    43:43:void analyzeImage(androidx.camera.core.ImageProxy,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1):0:0 -> a
    44:44:boolean checkBestFrame4Fingers(android.graphics.Bitmap,java.util.List,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Ljava/util/ArrayList;Ll/d;)Z"}
    45:45:java.util.List detectFingers(android.graphics.Bitmap,int,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;ILl/f;)Ljava/util/ArrayList;"}
    46:46:void focusSetCallback():0:0 -> a
    47:47:java.io.File getISOFromBitmap(android.graphics.Bitmap,int):0:0 -> a
    48:48:void initialize(android.content.Context):0:0 -> a
    49:49:java.nio.ByteBuffer com.truid.android.vision.UtilsKt.bitmapToByteBuffer(android.graphics.Bitmap,android.util.Size):0:0 -> a
    49:49:int nfiqModel(android.graphics.Bitmap):0 -> a
    50:50:int nfiqModel(android.graphics.Bitmap):0:0 -> a
    51:51:void setPositionCodeIndex(java.lang.String,boolean):0:0 -> a
    52:52:void setPositionCodeIndex$default(com.truid.android.vision.FingerprintDetectionHandler,java.lang.String,boolean,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/truid/android/vision/FingerprintDetectionHandler;Ljava/lang/String;)V"}
    53:53:void setPreviewSize-gEFH_ZI(long,long,float,float,float,float,float):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJFF)V"}
    1:1:boolean checkBestFrameThumb(android.graphics.Bitmap,java.util.List,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Ljava/util/ArrayList;Ll/d;)Z"}
    2:2:boolean getCaptureBothHands():0:0 -> b
    3:3:java.io.File getWSQFromBitmap(android.graphics.Bitmap,int):0:0 -> b
    4:4:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0:0 -> b
    4:4:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    5:5:android.graphics.Bitmap binarizeImage(org.opencv.core.Mat):0:0 -> b
    5:5:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0 -> b
    5:5:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    6:6:org.opencv.core.Mat applyCLAHE(org.opencv.core.Mat,double,int,int):0:0 -> b
    6:6:android.graphics.Bitmap binarizeImage(org.opencv.core.Mat):0 -> b
    6:6:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0 -> b
    6:6:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    7:7:org.opencv.core.Mat normalization(org.opencv.core.Mat):0:0 -> b
    7:7:org.opencv.core.Mat applyCLAHE(org.opencv.core.Mat,double,int,int):0 -> b
    7:7:android.graphics.Bitmap binarizeImage(org.opencv.core.Mat):0 -> b
    7:7:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0 -> b
    7:7:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    8:8:android.graphics.Bitmap binarizeImage(org.opencv.core.Mat):0:0 -> b
    8:8:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0 -> b
    8:8:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    9:9:org.opencv.core.Mat erosion(org.opencv.core.Mat,int,int,int):0:0 -> b
    9:9:android.graphics.Bitmap binarizeImage(org.opencv.core.Mat):0 -> b
    9:9:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0 -> b
    9:9:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    10:10:org.opencv.core.Mat dilation(org.opencv.core.Mat,int,int,int):0:0 -> b
    10:10:android.graphics.Bitmap binarizeImage(org.opencv.core.Mat):0 -> b
    10:10:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0 -> b
    10:10:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    11:11:android.graphics.Bitmap binarizeImage(org.opencv.core.Mat):0:0 -> b
    11:11:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0 -> b
    11:11:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    12:12:org.opencv.core.Mat pilbitmaptoMat():0:0 -> b
    12:12:android.graphics.Bitmap binarizeImage(org.opencv.core.Mat):0 -> b
    12:12:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0 -> b
    12:12:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    13:13:org.opencv.core.Mat applyPill(org.opencv.core.Mat,org.opencv.core.Mat):0:0 -> b
    13:13:android.graphics.Bitmap binarizeImage(org.opencv.core.Mat):0 -> b
    13:13:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0 -> b
    13:13:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    14:14:org.opencv.core.Mat normalization(org.opencv.core.Mat):0:0 -> b
    14:14:org.opencv.core.Mat applyPill(org.opencv.core.Mat,org.opencv.core.Mat):0 -> b
    14:14:android.graphics.Bitmap binarizeImage(org.opencv.core.Mat):0 -> b
    14:14:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0 -> b
    14:14:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    15:15:org.opencv.core.Mat applyPill(org.opencv.core.Mat,org.opencv.core.Mat):0:0 -> b
    15:15:android.graphics.Bitmap binarizeImage(org.opencv.core.Mat):0 -> b
    15:15:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0 -> b
    15:15:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    16:16:android.graphics.Bitmap binarizeImage(org.opencv.core.Mat):0:0 -> b
    16:16:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0 -> b
    16:16:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    17:17:android.graphics.Bitmap regresssionPointRotation(org.opencv.core.Mat):0:0 -> b
    17:17:android.graphics.Bitmap rotationCorrection(android.graphics.Bitmap):0 -> b
    com.truid.android.vision.NistPosCode getPositionCode() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()I"}
    java.lang.String getPositionString() -> d
    void setCaptureBothHands(boolean) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void setFocusFailed(boolean) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void setFrameFocused(boolean) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
com.truid.android.vision.FingerprintDetectionHandler$CroppedFingers -> com.truid.android.vision.FingerprintDetectionHandler$a:
# {"id":"sourceFile","fileName":"FingerprintDetectionHandler.kt"}
    android.graphics.Bitmap index -> a
    android.graphics.Bitmap middle -> b
    android.graphics.Bitmap ring -> c
    android.graphics.Bitmap pinky -> d
    android.graphics.Bitmap thumb -> e
    void <init>(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void setIndex(android.graphics.Bitmap) -> a
    void setMiddle(android.graphics.Bitmap) -> b
    void setPinky(android.graphics.Bitmap) -> c
    void setRing(android.graphics.Bitmap) -> d
    void setThumb(android.graphics.Bitmap) -> e
com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus -> com.truid.android.vision.FingerprintDetectionHandler$b:
# {"id":"sourceFile","fileName":"FingerprintDetectionHandler.kt"}
    java.lang.String message -> a
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus$Companion Companion -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b$a;"}
    java.util.Map originalMessages -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/LinkedHashMap;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus ERROR_BOUND -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus ERROR_OPEN_FINGERS -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus ERROR_TOO_FEW_FINGERS -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus ERROR_TOO_MANY_FINGERS -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus ERROR_WRONG_HAND -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus ERROR_WRONG_ANGLE -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus ERROR_OUTSIDE_SCAN_AREA -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus ERROR_TOO_CLOSE -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus ERROR_TOO_FAR -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus ERROR_LOW_FOCUS -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus ERROR_BAD_SCAN -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus GOOD_FOCUS -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus BEST_FRAME_CHOSEN -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus UPLOADING_FRAME -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus DONE -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus LITTLE_FAR -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus MORE_FAR -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus[] $VALUES -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Lcom/truid/android/vision/FingerprintDetectionHandler$b;"}
    1:1:long com.truid.android.ui.theme.ColorKt.getPassedColor():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    3:3:com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus[] $values():0:0 -> <clinit>
    3:3:void <clinit>():0 -> <clinit>
    4:4:void <clinit>():0:0 -> <clinit>
    5:5:void com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <clinit>
    5:5:void <clinit>():0 -> <clinit>
    6:6:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ILjava/lang/String;)V"}
    2:2:void <init>(java.lang.String,int,java.lang.String,long,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ILjava/lang/String;I)V"}
    1:1:java.lang.String getMessage():0:0 -> a
    2:2:void setMessage(java.lang.String):0:0 -> a
com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus$Companion -> com.truid.android.vision.FingerprintDetectionHandler$b$a:
# {"id":"sourceFile","fileName":"FingerprintDetectionHandler.kt"}
    1:1:java.util.Map com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus.access$getOriginalMessages$cp():0:0 -> a
    1:1:void resetMessages():0 -> a
    2:2:void resetMessages():0:0 -> a
    3:3:java.lang.String com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus.getMessage():0:0 -> a
    3:3:void resetMessages():0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:void resetMessages():0:0 -> a
    5:5:void com.truid.android.vision.FingerprintDetectionHandler$DetectionStatus.setMessage(java.lang.String):0:0 -> a
    5:5:void resetMessages():0 -> a
com.truid.android.vision.FingerprintDetectionHandler$FingersNISTQualitiesViewModel -> com.truid.android.vision.FingerprintDetectionHandler$c:
# {"id":"sourceFile","fileName":"FingerprintDetectionHandler.kt"}
com.truid.android.vision.FingerprintDetectionHandler$detectFingers$$inlined$sortBy$1 -> y.k0:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    void <init>() -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
com.truid.android.vision.FingerprintDetectionHandler$focusSetCallback$$inlined$schedule$1 -> com.truid.android.vision.FingerprintDetectionHandler$d:
# {"id":"sourceFile","fileName":"FingerprintDetectionHandler.kt"}
    com.truid.android.vision.FingerprintDetectionHandler this$0 -> a
    1:1:void com.truid.android.vision.FingerprintDetectionHandler.setFrameFocused(boolean):0:0 -> run
    1:1:void run():0 -> run
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
com.truid.android.vision.FingerprintDetectionHandler$uploadHandData$1$1 -> com.truid.android.vision.a:
# {"id":"sourceFile","fileName":"FingerprintDetectionHandler.kt"}
    kotlin.jvm.functions.Function2 $callback -> a
    void <init>(kotlin.jvm.functions.Function2) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/d;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.FingerprintDetectionHandler$uploadHandData$1$2 -> y.l0:
# {"id":"sourceFile","fileName":"FingerprintDetectionHandler.kt"}
    com.truid.android.vision.FingerprintDetectionHandler$uploadHandData$1$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/l0;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.vision.FingerprintDetectionHandler$uploadHandData$1$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.FingerprintDetectionHandler$uploadThumbData$1$1 -> com.truid.android.vision.b:
# {"id":"sourceFile","fileName":"FingerprintDetectionHandler.kt"}
    kotlin.jvm.functions.Function2 $callback -> a
    void <init>(kotlin.jvm.functions.Function2) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/d;)V"}
    1:1:void invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.FingerprintDetectionHandler$uploadThumbData$1$2 -> y.m0:
# {"id":"sourceFile","fileName":"FingerprintDetectionHandler.kt"}
    com.truid.android.vision.FingerprintDetectionHandler$uploadThumbData$1$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/m0;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.vision.FingerprintDetectionHandler$uploadThumbData$1$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.FingerprintOptions -> com.truid.android.vision.FingerprintOptions:
# {"id":"sourceFile","fileName":"FingerprintDetectionHandler.kt"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(com.truid.android.vision.FingersToScan,int,boolean):0:0 -> <init>
    3:3:void <init>(com.truid.android.vision.FingersToScan,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
com.truid.android.vision.FingersToScan -> com.truid.android.vision.FingersToScan:
# {"id":"sourceFile","fileName":"FingerprintDetectionHandler.kt"}
com.truid.android.vision.PassportCaptureHandler -> y.n0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    com.truid.android.vision.PassportCaptureHandler$DetectionProgress currentDetectionProgress -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0$a;"}
    boolean waitingForUpload -> b
    boolean referenceFrameCaptured -> c
    boolean authenticationFramesCaptured -> d
    int numAuthenticationFramesCaptured -> e
    java.lang.String cardType -> f
    android.graphics.Bitmap referenceFrame -> g
    boolean postScanOperationsStarted -> h
    android.graphics.Bitmap bitmapBuffer -> i
    void <init>() -> <init>
    1:1:org.opencv.core.Mat com.truid.android.vision.PassportCaptureHandler.getInputFrameMatrix(androidx.camera.core.ImageProxy):0:0 -> a
    1:1:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/camera/core/ImageProxy;ZLp/a;)V"}
    2:2:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    3:3:void com.truid.android.vision.PassportCaptureHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    3:3:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
    4:4:void com.truid.android.vision.PassportCaptureHandler.uploadReferenceFrame(android.graphics.Bitmap):0:0 -> a
    4:4:void com.truid.android.vision.PassportCaptureHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    4:4:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
    5:5:void com.truid.android.vision.PassportCaptureHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    5:5:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
    6:6:boolean com.truid.android.api.Session.getAuthenticityRequired():0:0 -> a
    6:6:void com.truid.android.vision.PassportCaptureHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    6:6:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
    7:7:void com.truid.android.vision.PassportCaptureHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    7:7:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
    8:8:void com.truid.android.vision.PassportCaptureHandler.uploadAuthenticationFrame(android.graphics.Bitmap):0:0 -> a
    8:8:void com.truid.android.vision.PassportCaptureHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    8:8:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
    9:9:void com.truid.android.vision.PassportCaptureHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    9:9:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
    10:10:void com.truid.android.vision.PassportCaptureHandler$DetectionProgress.setProgress(int):0:0 -> a
    10:10:void com.truid.android.vision.PassportCaptureHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:10:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
    11:11:void com.truid.android.vision.PassportCaptureHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    11:11:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
    12:12:boolean com.truid.android.api.Session.getLocalOCRForSmartCNICRequired():0:0 -> a
    12:12:void com.truid.android.vision.PassportCaptureHandler.performPostScanOperations(kotlin.jvm.functions.Function2):0 -> a
    12:12:void com.truid.android.vision.PassportCaptureHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    12:12:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
    13:13:void com.truid.android.vision.PassportCaptureHandler.performPostScanOperations(kotlin.jvm.functions.Function2):0:0 -> a
    13:13:void com.truid.android.vision.PassportCaptureHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    13:13:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
    14:14:void com.truid.android.vision.PassportCaptureHandler.makePostScanAPICalls(java.lang.String,kotlin.jvm.functions.Function0):0:0 -> a
    14:14:void com.truid.android.vision.PassportCaptureHandler.performPostScanOperations(kotlin.jvm.functions.Function2):0 -> a
    14:14:void com.truid.android.vision.PassportCaptureHandler.handleDetectionCases(android.graphics.Bitmap,boolean,kotlin.jvm.functions.Function2):0 -> a
    14:14:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0 -> a
    15:15:void analyzeImage$sdk_release(androidx.camera.core.ImageProxy,boolean,boolean,kotlin.jvm.functions.Function2):0:0 -> a
    16:16:void performOCR(kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/w0;)V"}
    17:17:void performOCR$lambda$0(kotlin.jvm.functions.Function1,java.lang.Object):0:0 -> a
com.truid.android.vision.PassportCaptureHandler$DetectionProgress -> y.n0$a:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    int progress -> a
    int roiPosition -> b
    boolean enableFlash -> c
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    3:3:void <init>(int,int,boolean):0:0 -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.truid.android.vision.PassportCaptureHandler$UserPrompt -> y.n0$b:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    com.truid.android.vision.PassportCaptureHandler$UserPrompt CAPTURING -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0$b;"}
    com.truid.android.vision.PassportCaptureHandler$UserPrompt PROMPT_BACK_SIDE -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0$b;"}
    com.truid.android.vision.PassportCaptureHandler$UserPrompt ANALYSING_CARD -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0$b;"}
    com.truid.android.vision.PassportCaptureHandler$UserPrompt DONE -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0$b;"}
    com.truid.android.vision.PassportCaptureHandler$UserPrompt[] $VALUES -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Ly/n0$b;"}
    1:1:com.truid.android.vision.PassportCaptureHandler$UserPrompt[] com.truid.android.vision.PassportCaptureHandler$UserPrompt.$values():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.truid.android.vision.PassportCaptureHandler$UserPrompt valueOf(java.lang.String) -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly/n0$b;"}
    com.truid.android.vision.PassportCaptureHandler$UserPrompt[] values() -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly/n0$b;"}
com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$1 -> y.q0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    kotlin.jvm.functions.Function0 $callback -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:boolean com.truid.android.api.Session.getIdToSelfieMatchingRequired():0:0 -> invoke
    1:1:void com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$1.invoke():0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:void com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$1.invoke():0:0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$1$1 -> y.o0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    kotlin.jvm.functions.Function0 $callback -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$1$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$1$2 -> y.p0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$1$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/p0;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$1$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$2 -> y.t0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    kotlin.jvm.functions.Function0 $callback -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:boolean com.truid.android.api.Session.getIdToSelfieMatchingRequired():0:0 -> invoke
    2:2:void com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$2.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$2.invoke(java.lang.String):0:0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$2$1 -> y.r0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    kotlin.jvm.functions.Function0 $callback -> a
    void <init>(kotlin.jvm.functions.Function0) -> <init>
    1:1:void com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$2$2 -> y.s0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$2$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/s0;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.vision.PassportCaptureHandler$makePostScanAPICalls$2$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.PassportCaptureHandler$performOCR$1 -> y.u0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    kotlin.jvm.internal.Ref$ObjectRef $json -> a
    kotlin.jvm.functions.Function1 $callback -> b
    void <init>(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lkotlin/jvm/internal/Ref$ObjectRef;Ly/w0;)V"}
    void invoke(com.google.mlkit.vision.text.Text) -> a
    java.lang.Object invoke(java.lang.Object) -> invoke
com.truid.android.vision.PassportCaptureHandler$performPostScanOperations$2 -> y.w0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    com.truid.android.vision.PassportCaptureHandler this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0;"}
    kotlin.jvm.functions.Function2 $callback -> b
    void <init>(com.truid.android.vision.PassportCaptureHandler,kotlin.jvm.functions.Function2) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/n0;Lp/a;)V"}
    1:1:void com.truid.android.vision.PassportCaptureHandler$performPostScanOperations$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.vision.PassportCaptureHandler.access$makePostScanAPICalls(com.truid.android.vision.PassportCaptureHandler,java.lang.String,kotlin.jvm.functions.Function0):0:0 -> invoke
    2:2:void com.truid.android.vision.PassportCaptureHandler$performPostScanOperations$2.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.vision.PassportCaptureHandler.makePostScanAPICalls(java.lang.String,kotlin.jvm.functions.Function0):0:0 -> invoke
    3:3:void com.truid.android.vision.PassportCaptureHandler.access$makePostScanAPICalls(com.truid.android.vision.PassportCaptureHandler,java.lang.String,kotlin.jvm.functions.Function0):0 -> invoke
    3:3:void com.truid.android.vision.PassportCaptureHandler$performPostScanOperations$2.invoke(java.lang.String):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.PassportCaptureHandler$performPostScanOperations$2$1 -> y.v0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    kotlin.jvm.functions.Function2 $callback -> a
    com.truid.android.vision.PassportCaptureHandler this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0;"}
    void <init>(kotlin.jvm.functions.Function2,com.truid.android.vision.PassportCaptureHandler) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/n0;Lkotlin/jvm/functions/Function2;)V"}
    1:1:void com.truid.android.vision.PassportCaptureHandler$performPostScanOperations$2$1.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:com.truid.android.vision.PassportCaptureHandler$DetectionProgress com.truid.android.vision.PassportCaptureHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.PassportCaptureHandler):0:0 -> invoke
    2:2:void com.truid.android.vision.PassportCaptureHandler$performPostScanOperations$2$1.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.vision.PassportCaptureHandler$performPostScanOperations$2$1.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.PassportCaptureHandler$performPostScanOperations$3 -> y.x0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    kotlin.jvm.functions.Function2 $callback -> a
    com.truid.android.vision.PassportCaptureHandler this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0;"}
    void <init>(kotlin.jvm.functions.Function2,com.truid.android.vision.PassportCaptureHandler) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/n0;Lp/a;)V"}
    1:1:void com.truid.android.vision.PassportCaptureHandler$performPostScanOperations$3.invoke():0:0 -> invoke
    1:1:java.lang.Object invoke():0 -> invoke
    2:2:com.truid.android.vision.PassportCaptureHandler$DetectionProgress com.truid.android.vision.PassportCaptureHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.PassportCaptureHandler):0:0 -> invoke
    2:2:void com.truid.android.vision.PassportCaptureHandler$performPostScanOperations$3.invoke():0 -> invoke
    2:2:java.lang.Object invoke():0 -> invoke
    3:3:void com.truid.android.vision.PassportCaptureHandler$performPostScanOperations$3.invoke():0:0 -> invoke
    3:3:java.lang.Object invoke():0 -> invoke
    4:4:java.lang.Object invoke():0:0 -> invoke
com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1 -> y.y0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    com.truid.android.vision.PassportCaptureHandler this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0;"}
    void <init>(com.truid.android.vision.PassportCaptureHandler) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/n0;)V"}
    1:1:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:com.truid.android.vision.PassportCaptureHandler$DetectionProgress com.truid.android.vision.PassportCaptureHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.PassportCaptureHandler):0:0 -> invoke
    2:2:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:boolean com.truid.android.api.Session.getBackFrameRequired():0:0 -> invoke
    3:3:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:void com.truid.android.vision.PassportCaptureHandler$DetectionProgress.setProgress(int):0:0 -> invoke
    4:4:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:java.lang.String com.truid.android.vision.PassportCaptureHandler.access$getCardType$p(com.truid.android.vision.PassportCaptureHandler):0:0 -> invoke
    5:5:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0:0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:com.truid.android.vision.PassportCaptureHandler$DetectionProgress com.truid.android.vision.PassportCaptureHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.PassportCaptureHandler):0:0 -> invoke
    7:7:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:int com.truid.android.vision.PassportCaptureHandler.access$getNumAuthenticationFramesCaptured$p(com.truid.android.vision.PassportCaptureHandler):0:0 -> invoke
    8:8:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object):0 -> invoke
    9:9:void com.truid.android.vision.PassportCaptureHandler$DetectionProgress.setRoiPosition(int):0:0 -> invoke
    9:9:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:9:java.lang.Object invoke(java.lang.Object):0 -> invoke
    10:10:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0:0 -> invoke
    10:10:java.lang.Object invoke(java.lang.Object):0 -> invoke
    11:11:int com.truid.android.vision.PassportCaptureHandler.access$getNumAuthenticationFramesCaptured$p(com.truid.android.vision.PassportCaptureHandler):0:0 -> invoke
    11:11:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    11:11:java.lang.Object invoke(java.lang.Object):0 -> invoke
    12:12:void com.truid.android.vision.PassportCaptureHandler.access$setNumAuthenticationFramesCaptured$p(com.truid.android.vision.PassportCaptureHandler,int):0:0 -> invoke
    12:12:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    12:12:java.lang.Object invoke(java.lang.Object):0 -> invoke
    13:13:void com.truid.android.vision.PassportCaptureHandler.access$setAuthenticationFramesCaptured$p(com.truid.android.vision.PassportCaptureHandler,boolean):0:0 -> invoke
    13:13:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    13:13:java.lang.Object invoke(java.lang.Object):0 -> invoke
    14:14:com.truid.android.vision.PassportCaptureHandler$DetectionProgress com.truid.android.vision.PassportCaptureHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.PassportCaptureHandler):0:0 -> invoke
    14:14:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    14:14:java.lang.Object invoke(java.lang.Object):0 -> invoke
    15:15:void com.truid.android.vision.PassportCaptureHandler$DetectionProgress.setEnableFlash(boolean):0:0 -> invoke
    15:15:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:15:java.lang.Object invoke(java.lang.Object):0 -> invoke
    16:16:void com.truid.android.vision.PassportCaptureHandler$DetectionProgress.setRoiPosition(int):0:0 -> invoke
    16:16:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    16:16:java.lang.Object invoke(java.lang.Object):0 -> invoke
    17:17:boolean com.truid.android.api.Session.getBackFrameRequired():0:0 -> invoke
    17:17:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    17:17:java.lang.Object invoke(java.lang.Object):0 -> invoke
    18:18:void com.truid.android.vision.PassportCaptureHandler$DetectionProgress.setProgress(int):0:0 -> invoke
    18:18:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:18:java.lang.Object invoke(java.lang.Object):0 -> invoke
    19:19:void com.truid.android.vision.PassportCaptureHandler.access$setWaitingForUpload$p(com.truid.android.vision.PassportCaptureHandler,boolean):0:0 -> invoke
    19:19:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$1.invoke(int):0 -> invoke
    19:19:java.lang.Object invoke(java.lang.Object):0 -> invoke
    20:20:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$2 -> y.z0:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/z0;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.vision.PassportCaptureHandler$uploadAuthenticationFrame$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.PassportCaptureHandler$uploadReferenceFrame$1 -> y.a1:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    com.truid.android.vision.PassportCaptureHandler this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/n0;"}
    void <init>(com.truid.android.vision.PassportCaptureHandler) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/n0;)V"}
    1:1:void com.truid.android.vision.PassportCaptureHandler$uploadReferenceFrame$1.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:void com.truid.android.vision.PassportCaptureHandler.access$setReferenceFrameCaptured$p(com.truid.android.vision.PassportCaptureHandler,boolean):0:0 -> invoke
    2:2:void com.truid.android.vision.PassportCaptureHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0 -> invoke
    3:3:void com.truid.android.vision.PassportCaptureHandler.access$setCardType$p(com.truid.android.vision.PassportCaptureHandler,java.lang.String):0:0 -> invoke
    3:3:void com.truid.android.vision.PassportCaptureHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
    3:3:java.lang.Object invoke(java.lang.Object):0 -> invoke
    4:4:com.truid.android.vision.PassportCaptureHandler$DetectionProgress com.truid.android.vision.PassportCaptureHandler.access$getCurrentDetectionProgress$p(com.truid.android.vision.PassportCaptureHandler):0:0 -> invoke
    4:4:void com.truid.android.vision.PassportCaptureHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
    4:4:java.lang.Object invoke(java.lang.Object):0 -> invoke
    5:5:void com.truid.android.vision.PassportCaptureHandler$DetectionProgress.setProgress(int):0:0 -> invoke
    5:5:void com.truid.android.vision.PassportCaptureHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:5:java.lang.Object invoke(java.lang.Object):0 -> invoke
    6:6:boolean com.truid.android.api.Session.getAuthenticityRequired():0:0 -> invoke
    6:6:void com.truid.android.vision.PassportCaptureHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
    6:6:java.lang.Object invoke(java.lang.Object):0 -> invoke
    7:7:void com.truid.android.vision.PassportCaptureHandler$DetectionProgress.setEnableFlash(boolean):0:0 -> invoke
    7:7:void com.truid.android.vision.PassportCaptureHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:java.lang.Object invoke(java.lang.Object):0 -> invoke
    8:8:void com.truid.android.vision.PassportCaptureHandler.access$setWaitingForUpload$p(com.truid.android.vision.PassportCaptureHandler,boolean):0:0 -> invoke
    8:8:void com.truid.android.vision.PassportCaptureHandler$uploadReferenceFrame$1.invoke(java.lang.String):0 -> invoke
    8:8:java.lang.Object invoke(java.lang.Object):0 -> invoke
    9:9:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.PassportCaptureHandler$uploadReferenceFrame$2 -> y.b1:
# {"id":"sourceFile","fileName":"PassportCaptureHandler.kt"}
    com.truid.android.vision.PassportCaptureHandler$uploadReferenceFrame$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/b1;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:void com.truid.android.vision.PassportCaptureHandler$uploadReferenceFrame$2.invoke(java.lang.String):0:0 -> invoke
    1:1:java.lang.Object invoke(java.lang.Object):0 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):0:0 -> invoke
com.truid.android.vision.UtilsKt -> y.c1:
# {"id":"sourceFile","fileName":"Utils.kt"}
    1:1:android.graphics.Bitmap base64ToBitmap(java.lang.String):0:0 -> a
    2:2:java.lang.String bitmapToBase64EncodedJPEG(android.graphics.Bitmap,int):0:0 -> a
    3:3:java.lang.String bitmapToBase64EncodedJPEG$default(android.graphics.Bitmap,int,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;)Ljava/lang/String;"}
    4:4:java.lang.String convertToHex(byte[]):0:0 -> a
    5:5:android.graphics.Bitmap imageToBitmap(android.media.Image):0:0 -> a
    6:6:android.graphics.Bitmap rotateBitmap(android.graphics.Bitmap,float):0:0 -> a
    1:1:android.graphics.Bitmap com.truid.android.vision.UtilsKt.scaleBitmap(android.graphics.Bitmap,int,int):0:0 -> b
    1:1:java.lang.String faceFrameToEncodedImage(android.graphics.Bitmap):0 -> b
    2:2:java.lang.String faceFrameToEncodedImage(android.graphics.Bitmap):0:0 -> b
    3:3:java.lang.String com.truid.android.vision.UtilsKt.decodeHex(java.lang.String):0:0 -> b
    3:3:java.lang.String hextoUrdu(java.lang.String):0 -> b
    4:4:java.lang.String hextoUrdu(java.lang.String):0:0 -> b
    5:5:java.lang.String com.truid.android.vision.UtilsKt.decodeHex(java.lang.String):0:0 -> b
    5:5:java.lang.String hextoUrdu(java.lang.String):0 -> b
    6:6:java.lang.String hextoUrdu(java.lang.String):0:0 -> b
    7:7:org.opencv.core.Mat imageToMat(android.media.Image):0:0 -> b
    android.graphics.Bitmap flipBitmap(android.graphics.Bitmap,boolean,boolean) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;"}
com.truid.android.vision.YuvByteBuffer -> y.d1:
# {"id":"sourceFile","fileName":"Yuv.kt"}
    int type -> a
    java.nio.ByteBuffer buffer -> b
    void <init>(android.media.Image,java.nio.ByteBuffer) -> <init>
    1:1:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getY():0:0 -> a
    1:1:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/d1$a;)V"}
    2:2:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getWidth():0:0 -> a
    2:2:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getHeight():0:0 -> a
    3:3:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getU():0:0 -> a
    4:4:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    5:5:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getWidth():0:0 -> a
    5:5:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    6:6:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getHeight():0:0 -> a
    6:6:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:7:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getRowStride():0:0 -> a
    7:7:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:8:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0:0 -> a
    9:9:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getY():0:0 -> a
    9:9:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    10:10:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getBuffer():0:0 -> a
    10:10:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:11:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0:0 -> a
    12:12:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getU():0:0 -> a
    12:12:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    13:13:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getRowStride():0:0 -> a
    13:13:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:14:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getWidth():0:0 -> a
    14:14:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:15:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0:0 -> a
    16:16:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getV():0:0 -> a
    16:16:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    17:17:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0:0 -> a
    18:18:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getU():0:0 -> a
    18:18:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    19:19:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getBuffer():0:0 -> a
    19:19:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    20:20:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0:0 -> a
    21:21:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getV():0:0 -> a
    21:21:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    22:22:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getBuffer():0:0 -> a
    22:22:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    23:23:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0:0 -> a
    24:24:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getU():0:0 -> a
    24:24:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    25:25:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getRowStride():0:0 -> a
    25:25:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    26:26:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getWidth():0:0 -> a
    26:26:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    27:27:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0:0 -> a
    28:28:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getPixelStride():0:0 -> a
    28:28:void com.truid.android.vision.YuvByteBuffer.removePaddingNotCompact(com.truid.android.vision.YuvByteBuffer$ImageWrapper,java.nio.ByteBuffer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    28:28:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    29:29:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getHeight():0:0 -> a
    29:29:void com.truid.android.vision.YuvByteBuffer.removePaddingNotCompact(com.truid.android.vision.YuvByteBuffer$ImageWrapper,java.nio.ByteBuffer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    29:29:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    30:30:void com.truid.android.vision.YuvByteBuffer.removePaddingNotCompact(com.truid.android.vision.YuvByteBuffer$ImageWrapper,java.nio.ByteBuffer,int):0:0 -> a
    30:30:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    31:31:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getV():0:0 -> a
    31:31:void com.truid.android.vision.YuvByteBuffer.removePaddingNotCompact(com.truid.android.vision.YuvByteBuffer$ImageWrapper,java.nio.ByteBuffer,int):0 -> a
    31:31:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    32:32:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getBuffer():0:0 -> a
    32:32:void com.truid.android.vision.YuvByteBuffer.removePaddingNotCompact(com.truid.android.vision.YuvByteBuffer$ImageWrapper,java.nio.ByteBuffer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    32:32:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    33:33:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer.clipBuffer(java.nio.ByteBuffer,int,int):0:0 -> a
    33:33:void com.truid.android.vision.YuvByteBuffer.removePaddingNotCompact(com.truid.android.vision.YuvByteBuffer$ImageWrapper,java.nio.ByteBuffer,int):0 -> a
    33:33:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    34:34:void com.truid.android.vision.YuvByteBuffer.removePaddingNotCompact(com.truid.android.vision.YuvByteBuffer$ImageWrapper,java.nio.ByteBuffer,int):0:0 -> a
    34:34:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    35:35:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getU():0:0 -> a
    35:35:void com.truid.android.vision.YuvByteBuffer.removePaddingNotCompact(com.truid.android.vision.YuvByteBuffer$ImageWrapper,java.nio.ByteBuffer,int):0 -> a
    35:35:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    36:36:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getBuffer():0:0 -> a
    36:36:void com.truid.android.vision.YuvByteBuffer.removePaddingNotCompact(com.truid.android.vision.YuvByteBuffer$ImageWrapper,java.nio.ByteBuffer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    36:36:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    37:37:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer.clipBuffer(java.nio.ByteBuffer,int,int):0:0 -> a
    37:37:void com.truid.android.vision.YuvByteBuffer.removePaddingNotCompact(com.truid.android.vision.YuvByteBuffer$ImageWrapper,java.nio.ByteBuffer,int):0 -> a
    37:37:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    38:38:void com.truid.android.vision.YuvByteBuffer.removePaddingNotCompact(com.truid.android.vision.YuvByteBuffer$ImageWrapper,java.nio.ByteBuffer,int):0:0 -> a
    38:38:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    39:39:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0:0 -> a
    40:40:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getV():0:0 -> a
    40:40:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    41:41:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getBuffer():0:0 -> a
    41:41:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    42:42:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getHeight():0:0 -> a
    42:42:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    43:43:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getRowStride():0:0 -> a
    43:43:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    44:44:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0:0 -> a
    45:45:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getV():0:0 -> a
    45:45:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    46:46:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getBuffer():0:0 -> a
    46:46:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    47:47:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer.clipBuffer(java.nio.ByteBuffer,int,int):0:0 -> a
    47:47:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    48:48:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0:0 -> a
    49:49:com.truid.android.vision.YuvByteBuffer$PlaneWrapper com.truid.android.vision.YuvByteBuffer$ImageWrapper.getU():0:0 -> a
    49:49:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
    50:50:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getBuffer():0:0 -> a
    50:50:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    51:51:void removePadding(com.truid.android.vision.YuvByteBuffer$ImageWrapper):0:0 -> a
    52:52:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getPixelStride():0:0 -> a
    52:52:void removePaddingCompact(com.truid.android.vision.YuvByteBuffer$PlaneWrapper,java.nio.ByteBuffer,int):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/d1$b;Ljava/nio/ByteBuffer;I)V"}
    53:53:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getBuffer():0:0 -> a
    53:53:void removePaddingCompact(com.truid.android.vision.YuvByteBuffer$PlaneWrapper,java.nio.ByteBuffer,int):0 -> a
    54:54:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getRowStride():0:0 -> a
    54:54:void removePaddingCompact(com.truid.android.vision.YuvByteBuffer$PlaneWrapper,java.nio.ByteBuffer,int):0 -> a
    55:55:void removePaddingCompact(com.truid.android.vision.YuvByteBuffer$PlaneWrapper,java.nio.ByteBuffer,int):0:0 -> a
    56:56:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getHeight():0:0 -> a
    56:56:void removePaddingCompact(com.truid.android.vision.YuvByteBuffer$PlaneWrapper,java.nio.ByteBuffer,int):0 -> a
    57:57:int com.truid.android.vision.YuvByteBuffer$PlaneWrapper.getWidth():0:0 -> a
    57:57:void removePaddingCompact(com.truid.android.vision.YuvByteBuffer$PlaneWrapper,java.nio.ByteBuffer,int):0 -> a
    58:58:java.nio.ByteBuffer com.truid.android.vision.YuvByteBuffer.clipBuffer(java.nio.ByteBuffer,int,int):0:0 -> a
    58:58:void removePaddingCompact(com.truid.android.vision.YuvByteBuffer$PlaneWrapper,java.nio.ByteBuffer,int):0 -> a
    59:59:void removePaddingCompact(com.truid.android.vision.YuvByteBuffer$PlaneWrapper,java.nio.ByteBuffer,int):0:0 -> a
com.truid.android.vision.YuvByteBuffer$ImageWrapper -> y.d1$a:
# {"id":"sourceFile","fileName":"Yuv.kt"}
    com.truid.android.vision.YuvByteBuffer$PlaneWrapper y -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/d1$b;"}
    com.truid.android.vision.YuvByteBuffer$PlaneWrapper u -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/d1$b;"}
    com.truid.android.vision.YuvByteBuffer$PlaneWrapper v -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ly/d1$b;"}
    void <init>(android.media.Image) -> <init>
    com.truid.android.vision.YuvByteBuffer$PlaneWrapper getU() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/d1$b;"}
com.truid.android.vision.YuvByteBuffer$PlaneWrapper -> y.d1$b:
# {"id":"sourceFile","fileName":"Yuv.kt"}
    int width -> a
    int height -> b
    java.nio.ByteBuffer buffer -> c
    int rowStride -> d
    int pixelStride -> e
    void <init>(int,int,android.media.Image$Plane) -> <init>
    int getPixelStride() -> a
    int getRowStride() -> b
com.truid.android.vision.YuvToRgbConverter -> y.e1:
# {"id":"sourceFile","fileName":"YuvToRgbConverter.kt"}
    android.renderscript.RenderScript rs -> a
    android.renderscript.ScriptIntrinsicYuvToRGB scriptYuvToRgb -> b
    java.nio.ByteBuffer yuvBits -> c
    byte[] bytes -> d
    android.renderscript.Allocation inputAllocation -> e
    android.renderscript.Allocation outputAllocation -> f
    void <init>(android.content.Context) -> <init>
com.truid.android.wsq.Native -> com.truid.android.wsq.Native:
# {"id":"sourceFile","fileName":"Native.java"}
com.truid.android.wsq.WSQEncoder -> com.truid.android.wsq.a:
# {"id":"sourceFile","fileName":"WSQEncoder.java"}
    android.graphics.Bitmap bmp -> a
    float bitrate -> b
    int ppi -> c
    java.lang.String comment -> d
    1:1:byte[] encodeInternal():0:0 -> a
    1:1:byte[] encode():0 -> a
    com.truid.android.wsq.WSQEncoder setBitrate(float) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/truid/android/wsq/a;"}
    com.truid.android.wsq.WSQEncoder setComment(java.lang.String) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/truid/android/wsq/a;"}
    com.truid.android.wsq.WSQEncoder setPpi(int) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/truid/android/wsq/a;"}
